1. 디바이스 드라이버가 무엇인지 기술하시오.

일반적으로 펌웨어라고 알려져 있는 파트가 존재한다.
펌웨어를 GPOS 레벨에서 제어하기 위한 전용 SW 라 보면 된다.

2. FTDI 드라이버가 존재할 경우 USB2CAN 을 어떻게 제어하는가 ?

단순한 Serial 통신 프로그램 제어 방식으로 제어할 수 있다.
(경우에 따라서는 통신 프로토콜을 해킹해야할 수도 있음)

3. 시스템 콜 후킹시에 페이지를 획득하는 이유는 무엇인가 ?

실제로 C 언어의 변수나 함수들은 가상메모리 위치를 표현하고
이것은 페이징을 통해 실제 물리 메모리에 배치 되기 때문에
실제 정보가 있는 페이지 프레임을 찾아야 한다.

4. 커널 소스의 arch 디렉토리에 대해 기술하시오.

다양한 HW 아키텍처와 관련한 코드들이 배치된다.
좀 더 쉽게 말해서 CPU 아키텍처별로 코드가 분리되어 있다.

5. FPGA 로 새로운 CPU Chip 을 설계하고 리눅스 커널을 포팅한다면 무엇을 해야하는가 ?

새로운 칩에 대한 포팅을 수행한다면
리눅스 커널의 arch 디렉토리에 전용 어셈블리 코드들을 배치할 필요가 있다.
또한 전용 칩의 기계어를 생성하기 위해 gcc 나 llvm 등의 machine code generator 를 개조할 필요성도 있다.

6. make 를 사용하는 이유는 무엇인가 ?

반복적인 단순 작업들이 매우 많을 경우에 이를 단순화 시켜주기 위해 사용한다.

7. 리눅스 커널이 모놀리식인지 마이크로식인지 기술하고 이유를 기술하시오.

리눅스 커널은 모놀리식 커널이다.
구동에 필요한 모든 요소들이 OS 이미지에 통합되어 있으나
디바이스 드라이버에 한하여 마이크로식 커널의 개념을 도입하고 있다.

8. 캐릭터 디바이스 드라이버 작성시 반드시 wrapping 해야 하는 것들은 무엇인가 ?

open, read, write, ioctl, release 등을 wrapping 해야 한다.

9. 리눅스 디바이스 드라이버의 양대 산맥이라 불리는 둘은 무엇이고 역할은 무엇인가 ?

ALSA - 오디오 디바이스 드라이버
V4L2 - 비디오 디바이스 드라이버

10. DSP 와 FPGA 상에서 디바이스 드라이버 개발의 차이는 무엇인가 ?

FPGA 는 별도의 Custom IP 설계가 가능하기 때문에
핀으로 빠져나오지 않더라도 HW 로서의 역할을 수행해줄 수 있고
핀으로 빠져나오게 만들어줄 수도 있기 때문에 보다 유연하게 활용할 수 있다는 이점이 있다.