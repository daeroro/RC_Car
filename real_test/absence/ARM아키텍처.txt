1. ARM 과 x86 아키텍처의 차이점을 기술하시오.

ARM 은 RISC 아키텍처로 명령어의 길이가 가변이 아닌 4 byte 로 고정되고 전력 소모가 적다.
x86 은 CISC 아키텍처로 명령어의 길이가 가변이며 전력 소모가 크다.
큰 차이점이라면 ARM 은 메모리 2 메모리 연산을 수행할 수 없지만
x86 은 메모리 2 메모리 연산이 가능하다.

2. 손정의 회장이 ARM 사를 35 조원에 인수한 배경은 무엇인가 ?

앞으로 지속적으로 뜨게 될 광범위 IoT 와 차량, 휴대폰 등등에서 활용될 칩이 ARM 이기 때문이다.

3. ARM 어셈블리에서 사용에 주의를 기울여야 하는 것은 무엇이고 이유는 ?

나눗셈 명령어의 사용은 주의를 해야한다.
곱셈이나 덧셈등과는 달리 나눗셈은 1 clock 연산으로 처리되지 않을수도 있기 때문이다.

4. ARM 아키텍처에서 mov 명령어는 무엇을 하는가 ?

mov 명령어를 통해서 명시된 레지스터에 특정한 값 혹은 명시된 레지스터 값을 복사할 수 있다.

5. ARM 명령어에서 b 는 언제 사용되는가 ?

b 는 브랜치 명령어로 jmp 에 해당한다.
즉 if, for, while 등의 조건문에서 나타나는 명령어다.

6. ldr 명령어는 무엇이고 왜 사용하는가 ?

메모리의 데이터를 레지스터로 가져오는 명령어에 해당하며
메모리 데이터를 직접적으로 다른 메모리로 이동시킬 수 없기 때문에
한 번 ldr 을 하고 str 을 통해서 특정 메모리로 이동시키기 위해서 사용한다.
단순히 레지스터로 값을 복원하는데도 사용할 수 있다.

7. str 명령어는 무엇이고 왜 사용하는가 ?

레지스터의 정보를 메모리에 저장하는 용도로 사용된다.
이와 같은 용도 때문에 ldr 과 str 을 Context Switching 하는 코드에서도 자주 볼 수 있다.

8. Co-Processor 를 제어하는 핵심 명령어 두 가지는 무엇인가 ?

mcr 과 mrc 명령어

9. bl 명령어는 무엇을 수행하는가 ?

브랜치하고 링크를 한다하여 함수 호출에 해당한다.
복귀주소가 link 레지스터에 저장된다.

10. ARM 베이스에서 OS 를 개발한다면 반드시 건드려야 하는 보조 프로세서는 무엇이고 이유가 무엇인가 ?

CP15 는 시스템을 제어하기 위한 설정이나 캐시 설정등을 수행하는 레지스터