1. Linux 에서 TEST 옵션을 줬을 경우에만 printf 함수가 동작하게 만들고 싶다면 어떻게 해야 하는지 기술하시오.

#ifdef TEST 와 #endif 사이에 printf 함수를 넣고
gcc -DTEST 소스코드 를 통해 컴파일 하면 된다.

2. JTAG 을 통해 바이너리를 Flash 에 굽지 않을 경우 어떻게 되는지 기술하라.

Flash 에 내용을 기록하지 않은 상태에서 메모리에만 올리면
전원을 내렸다 다시 올릴 경우 아무것도 동작하지 않게 된다.
즉 Flash 에 구워야만 전원이 내려간 이후에도 계속 같은 코드가 동작할 수 있다.

3. 반드시 어셈블리어를 사용해야만 하는 경우를 기술하시오.

최적화의 경우엔 코드가 어쨋든 동작을 하니 넘어갈 수 있다만
애초에 Co-Processor 를 제어해야 하는 상황이나 인터럽트를 제어해야 하는 상황에 한하여
어셈블리어를 모르면 이를 제어 할 수 있는 방법이 없다.
즉 운영체제를 만들기 위해서라면 반드시 알아야 한다.

4. PWM 을 활용하여 만들 수 있는 응용들을 기술해보시오.

조명 제어 장치, 각종 모터 제어 장치, 레이더 등등에 해당한다.

5. LiPo 배터리 충전시 주의 사항을 기술하시오.

각 셀당 4.2V 를 초과하도록 충전하면 폭발이 발생 할 수 있다.
적정 온도를 초과할 경우 폭발 할 수 있다.
충격을 주면 터질 수도 있다.
너무 고속으로 충전할 경우 폭발 할 수 있다.

6. LiPo 배터리를 장기간 보관하고자 한다면 충전을 어떻게 해야하는가 ?

셀당 3.8V 를 맞춰서 충전하면 장기간 보관 할 수 있다.

7. 트랜지스터 납땜시 주의 사항에 대해 기술하시오.

트랜지스터가 열에 약하기 때문에 납땜을 오래 할 경우 트랜지스터 소자가 고장난다.

8. 센서의 오차가 무엇을 만들어내는지 기술하시오.

가우시안 분포, 다른 이름으로는 정규 분포라 불리는 분포를 형성하게 된다.

9. 펌웨어로 로봇을 만드는데 있어 물리 모델링은 왜 하는가 ?

자세 제어를 수행하는데 있어서 센서의 계측값과 제작자의 예측값이 필요하다.
이 중에서 예측을 수행 할 수 있는 유일한 방법은 물리 모델 밖에 없기 때문이다.

10. 칼만 필터에 대해 기술하시오.

물리 모델링을 통해 제작자의 예측값이 들어가고 센서 계측을 통해 계측값이 들어간다.
물론 여기서 예측값도 오차가 존재 할 수 있고 이 분포 또한 가우시안 분포를 따른다.
그리고 센서의 계측값도 가우시안 분포를 따른다.
즉 두 값의 교차 분포가 새로운 가우시안 분포가 된다.
이것은 확률의 독립 사건의 합성이 아닌 상호 종속 사건간의 합성이 되어 랜덤 프로세스라는 분야를 요구하게 된다.

11. TI DSP 의 커스텀 커널을 만드는 과정을 기술하라.

커널 디렉토리에 들어가서 TI DSP 에 맞게 defconfig 설정을 한다.
이후에 ARM Cross Tool 들을 설정하고 컴파일 한다.
그리고 디바이스 드라이버 모듈을 컴파일 한다.
디바이스 트리를 컴파일 하고 디바이스 트리, 부트 로더, 커널 이미지를 SD 카드에 넣는다.
그리고 TI DSP 의 SD 카드 슬롯에 SD 카드를 집어넣고 부팅한다.

12. 우리가 사용하는 FPGA Zybo 보드에서 Lidar 제어를 수행한다 가정한다.
    Lidar 는 I2C 통신을 통해 데이터를 획득하고 있다.
    모터의 회전 속도가 1080 rpm 이라고 가정하고
    Lidar 가 데이터를 처리하는 속도는 500 Hz 라고 가정한다.
    이 Lidar 가 회전하면서 스캔하는 정보는 어떠한 형태인지 기술하시오.

우선 회전 속도 1080 rpm 이라면 분당 1080 회전이므로 초당 18 번 회전한다고 볼 수 있다.
Lidar 의 처리 속도 500 Hz 는 초로 환산할 경우 1 / 500 으로 0.002 초가 된다.
즉 초당 18 번 회전한다하면 결국 18 * 360 으로 회전은 6480 도를 회전하게 된다.
이것을 500 으로 나누면 12.96(대략 13 도) 마다 스캔 정보를 획득 할 수 있다.

13. 앞선 문제에서 Lidar 의 처리 속도가 650 Hz 로 상승한다 가정해보자.
    이 경우에 스캔 정보를 구해서 기술해보자.

앞서와 마찬가지로 회전 각도가 1 초간 총 6480 도이므로
처리 속도인 650 으로 나누면 9.969(대략 10 도) 마다 스캔 정보를 획득 할 수 있다.

14. 13 번 문제에서 모터의 회전 속도를 절반으로 줄인다고 가정할 경우 스캔 정보를 기술해보자.

회전 속도가 절반으로 줄어들어 540 rpm 이 되고 이것은 초당 9 번 회전에 해당한다.
초당 회전 각도는 9 * 360 으로 3240 도가 되는데 결국 앞서 계산한 식의 절반을 적용하면 된다.
이것을 650 으로 나누면 대략 5 도가 나올 것이다.

15. 14 번의 형태로 Lidar 를 탑재하여 3 m/s 로 RC 차량이 달려갈 경우를 기술해보도록 한다.

3 m/s 는 300 cm/s 로 환산 할 수 있다.
또한 1 / 650 은 0.00154 초로에 해당한다.
그리고 1 바퀴 회전하는 시간은 0.11111111 초에 해당한다.
이 시간 동안 Lidar 는 대략 72 ~ 73 번(72 에 더 가까움)의 연산을 처리하게 된다.

여기서 차량이 300 cm/s 로 전진한다면 Lidar 가 1 바퀴 돌 때 33.333333 cm/s 를 이동한 것이 된다.
데이터를 처음 수신할 때가 33.333333 cm/s 를 이동한 이후 다시 해당 위치에 근사한 정보를 수신하므로
최소한 이 차량이 장애물을 인식하고 회피하기 위해선 제어기의 동작 속도도 고려하여
100 cm 즉 1 m 이전에는 장애물을 감지해야 회피 할 수 있다.

이 조건이 만족되지 않는다면 차량의 속도를 줄여서 보다 안정적인 주행 결과를 얻을 수 있다.

* 실제 프로젝트에 적용할 때는 정확하게 계산하여 5 도 단위로 끊어지게 설계를 해야한다.
  문제로 만든 케이스의 경우엔 오차가 누적되어 나중엔 값 전체가 틀어질 수도 있는 상황이다.
  (주행을 오래하게 될 경우 0.0x 의 오차가 지속적으로 누적되어 값이 틀어진다는 뜻임)