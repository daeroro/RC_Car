1. I2C 디바이스 드라이버를 작성하고자 한다.
   I2C 관련 연산을 수행하는데 필요한 정의들과 헤더 파일에 대해 기술해보자.

uapi/linux/i2c.h 헤더 파일에는 I2C_FUNC_10BITT_ADDR 이나 I2C_FUNC_SMBUS_READ_BYTE 등등이 존재한다.

2. Linux 베이스에서 I2C 를 드라이버와 실제 HW 장치를 연동하기 위해 어떠한 절차를 거쳐야 하는가 ?

fd = open("/dev/i2c-0", O_RDWR);
ioctl(file, I2C_FUNCS, &funcs);

위의 2 개 즉, open(), ioctl() 을 통해 연동이 가능하다.

3. MCU 에서 GPIO 를 사용 할 수 있듯이
   Linux Kernel 이 올라가는 Cortex-A 나 DSP, FPGA 등에서도 GPIO 를 활용 할 수 있다.
   이 작업을 원활하게 수행하기 위해서 어떠한 구조체와 헤더 파일을 봐야 하는지 기술하라.

linux/gpio/driver.h 헤더 파일에 있는 구조체 gpio_chip 을 봐야함

4. Linux Kernel 에서 drivers/i2c/busses/i2c-gpio.c 에 대해 기술하시오.

I2C Bus 를 구동하는데 사용되며 별도의 I2C Bus 로 나타난다.
기존에 I2C 를 사용하듯이 이 GPIO 를 I2C 센서용 신호선으로 사용 할 수 있다.
또한 코드의 마지막에는 MODULE_ALIAS("platform:i2c-gpio")로 나타난다.
즉 해당 모듈이 i2c-gpio 로 나타날 것임을 알 수 있다.

5. 기존의 디바이스 드라이버는 계층을 가지지 않았다.
   디바이스 트리라는 개념을 도입하면서 좋아진 것은 무엇인지 기술하시오.

디바이스 트리는 단순히 하드웨어를 설명하는 자료구조다.
평평하지 않은 모델 즉 계층 구조를 가지는 모델로 알려져 있는데
이유는 HW 를 설계할 때 SoC 가 최종 완성품이고
SoC 내부에 여러 작은 모듈들이 달리기 때문이다.
디바이스 트리를 보면 하드웨어의 구성이 계층적이기 때문에
무엇이 어디에 어떻게 연결되어 있는지 파악하는 것이 유용하다.

6. 리눅스의 양대 산맥 중 하나인 V4L2 디바이스 드라이버의 구조에 대해 기술하라.

V4L2 드라이버 구조는 아래의 것들을 내포함

* 장치 상태를 포함하는 각 장치 인스턴스의 구조체다.
* 하위 장치를 초기화하고 명령하는 방법
* /dev/videoX, /dev/vboX, /dev/radioX 를 만듦
* 파일 핸들 당 데이터를 포함하는 디스크립터
* 비디오 버퍼 처리

7. V4L2 에서 아래 구조체가 어디에 사용되는지 기술하시오.

union v4l2_ctrl_ptr {
	s32 *p_s32;
	s64 *p_s64;
	char *p_char;
	void *p;
};

위의 공용체는 비디오 제어 프레임워크 내에서 제어 값을 활용하는데 사용된다.

8. SocketCAN 이 무엇인지 기술하시오.

Linux 에서 CAN 프로토콜을 구현한 것이다.
CAN 은 자동화, 임베디드 장치 및 자동차 분야에서 광범위하게 사용되는 네트워킹 기술이다.
CAN 소켓 API 는 네트워크 프로그래밍에 익숙한 프로그래머가
CAN 소켓 사용법을 쉽게 배울 수 있도록 TCP /IP 프로토콜과 가능한 유사하게 설계되었다.

9. Xilinx 사에서 만든 CAN Device Driver 코드는 xlnx-4.0/drivers/xilinx_can.c 에 있다.
   이 드라이버에서 사용하는 레지스터등의 정보는 어디서 볼 수 있는지 기술하시오.

Xilinx 사에서 제공하는 Reference Manual 이 여러가지 존재한다.
그 중에서 UG585 를 봐야 Zybo 보드 상의 Peripheral 정보들을 살펴 볼 수 있다.

10. TI 사의 멀티 밴드 안테나 WL1837 을 활용하기 위한 문제다.
    실제 이녀석의 구동과 관련된 함수 테이블은 어디에 Wrapping 되는지 기술하시오.

실제 TI 의 커널 코드를 보면 drivers/net/wireless/ti/wl18xx/main.c 에 코드가 있다.
여기에 보면 wl18xx_probe() 함수가 보이며 구조체 wl1271 이 가르키는 ops 에 Wrapper 함수를 셋팅한다.