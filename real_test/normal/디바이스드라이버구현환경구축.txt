1. 임베디드 시스템에서 프로그램 개발 과정에 대해 기술하시오.

설계 문서를 참조하여 소스코드를 작성하고 작성된 소스코드를 빌드 한 후
생성된 이미지 파일을 Target 시스템에 다운로드 후 시Oㅇ하고 디버깅하는 순서로 진행 된다.

2. Native Development Environment 에 대해 기술하시오.

PC 에서 프로그램을 개발할 때는 PC 에서 프로그램을 작성, 빌드, 디버깅을 수행하는데
이와 같은 개발 환경을 Native Development Environment 라고 한다.

3. Cross Development Environment 에 대해 기술하시오.

임베디드 시스템은 프로그램이 실행 될 Target System 과
프로그램을 개발하는 Host 시스템이 다른 Cross Development Environment 를 지원한다.

4. 특정 벤더의 SoC 를 개발할 경우의 개발 환경에 대해 기술하시오.

일반적으로 SoC 벤더에서 CPU 와 Target Board 를 선정하면
이에 맞는 적절한 BSP 와 툴체인을 제공하므로 이를 그대로 사용하는 것이 좋다.

5. 툴체인이 무엇인지 기술하시오.

툴체인은 개발하는데 필요한 일종의 도구 모음으로
대표적으로 컴파일러, 디버거 등등이 존재한다.

6. SoC 벤더로부터 EVM 을 구해서 테스트를 했고 이를 개조하여 Peripheral 을 추가했다.
   새로 개조한 보드에 리눅스를 올리려고 한다면 무엇을 해야하는가 ?

Linux Kernel 코드에 새로 추가한 Peripheral 들이 구동 될 수 있게 Kernel 코드를 수정하고 드라이버를 작성해야함

7. 내부 인터럽트에 대해 기술하시오.

내부 인터럽트는 프로세서 내부의 기능에 의해 발생되는 것으로
Trap, Fault, Exception 등으로 구성되어 있다.

8. 외부 인터럽트에 대해 기술하시오.

외부 인터럽트는 프로세 외부의 디바이스에 의해 발생하는 인터럽트다.

9. 시스템 콜에 대해 기술하시오.

시스템 콜은 유일한 소프트웨어 인터럽트에 해당한다.
ARM 리눅스 커널의 경우 이것을 Vector Table 로 관리한다.

10. Bottom Half 에 대해 기술하시오.

많은 양의 인터럽트가 빈번하게 발생하는 경우 이를 효과적이고 빠르게 처리하기 위해 필요한 기법이다.
