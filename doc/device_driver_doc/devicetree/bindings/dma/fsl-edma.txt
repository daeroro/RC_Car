* Freescale enhanced Direct Memory Access(eDMA) Controller

  The eDMA channels have multiplex capability by programmble memory-mapped
registers. channels are split into two groups, called DMAMUX0 and DMAMUX1,
specific DMA request source can only be multiplexed by any channel of certain
group, DMAMUX0 or DMAMUX1, but not both.

* eDMA Controller
Required properties:
- compatible :
	- "fsl,vf610-edma" for eDMA used similar to that on Vybrid vf610 SoC
- reg : Specifies base physical address(s) and size of the eDMA registers.
	The 1st region is eDMA control register's address and size.
	The 2nd and the 3rd regions are programmable channel multiplexing
	control register's address and size.
- interrupts : A list of interrupt-specifiers, one for each entry in
	interrupt-names.
- interrupt-names : Should contain:
	"edma-tx" - the transmission interrupt
	"edma-err" - the error interrupt
- #dma-cells : Must be <2>.
	The 1st cell specifies the DMAMUX(0 for DMAMUX0 and 1 for DMAMUX1).
	Specific request source can only be multiplexed by specific channels
	group called DMAMUX.
	The 2nd cell specifies the request source(slot) ID.
	See the SoC's reference manual for all the supported request sources.
- dma-channels : Number of channels supported by the controller
- clock-names : A list of channel group clock names. Should contain:
	"dmamux0" - clock name of mux0 group
	"dmamux1" - clock name of mux1 group
- clocks : A list of phandle and clock-specifier pairs, one for each entry in
	clock-names.

Optional properties:
- big-endian: If present registers and hardware scatter/gather descriptors
	of the eDMA are implemented in big endian mode, otherwise in little
	mode.


Examples:

edma0: dma-controller@40018000 {
	#dma-cells = <2>;
	compatible = "fsl,vf610-edma";
	reg = <0x40018000 0x2000>,
		<0x40024000 0x1000>,
		<0x40025000 0x1000>;
	interrupts = <0 8 IRQ_TYPE_LEVEL_HIGH>,
		<0 9 IRQ_TYPE_LEVEL_HIGH>;
	interrupt-names = "edma-tx", "edma-err";
	dma-channels = <32>;
	clock-names = "dmamux0", "dmamux1";
	clocks = <&clks VF610_CLK_DMAMUX0>,
		<&clks VF610_CLK_DMAMUX1>;
};


* DMA clients
DMA client drivers that uses the DMA function must use the format described
in the dma.txt file, using a two-cell specifier for each channel: the 1st
specifies the channel group(DMAMUX) in which this request can be multiplexed,
and the 2nd specifies the request source.

Examples:

sai2: sai@40031000 {
	compatible = "fsl,vf610-sai";
	reg = <0x40031000 0x1000>;
	interrupts = <0 86 IRQ_TYPE_LEVEL_HIGH>;
	clock-names = "sai";
	clocks = <&clks VF610_CLK_SAI2>;
	dma-names = "tx", "rx";
	dmas = <&edma0 0 21>,
		<&edma0 0 20>;
	status = "disabled";
};






================================================================================================


/*
프리 스케일, 직접 메모리 액세스 (eDMA) 컨트롤러 강화

  eDMA 채널은 프로그래머 블 메모리 매핑 레지스터에 의한 다중화 기능을 가지고있다. 채널은 DMAMUX0 및 DMAMUX1이라고하는 두 개의 그룹으로 나뉘어지며, 특정 DMA 요청 소스는 특정 그룹 인 DMAMUX0 또는 DMAMUX1의 어느 채널에 의해서만 다중화 될 수 있지만 둘 다 다중화 될 수는 없습니다.

* eDMA 컨트롤러
필수 속성 :
- 호환 가능 :
- eDMA 용 "fsl, vf610-edma"는 Vybrid vf610 SoC와 유사합니다.
- reg : 기본 물리적 주소와 eDMA 레지스터의 크기를 지정합니다.
제 1 영역은 eDMA 제어 레지스터의 어드레스 및 크기이다.
제 2 및 제 3 영역은 프로그램 가능한 채널 멀티플렉싱 제어 레지스터의 어드레스 및 크기이다.
- interrupts : 인터럽트 명에있는 각 엔트리를위한 인터럽트 지정자의 목록.
- interrupt-names : 다음을 포함해야합니다 :
"edma-tx"- 전송 인터럽트
"edma-err"- 오류 인터럽트
- # dma-cells : <2> 여야합니다.
첫 번째 셀은 DMAMUX를 지정합니다 (DMAMUX0에는 0, DMAMUX1에는 1).
특정 요청 소스는 DMAMUX라고하는 특정 채널 그룹으로 만 다중화 될 수 있습니다.
두 번째 셀은 요청 소스 (슬롯) ID를 지정합니다.
지원되는 모든 요청 소스에 대해서는 SoC의 참조 설명서를 참조하십시오.
- dma-channels : 컨트롤러가 지원하는 채널 수
- clock-names : 채널 그룹 clock 이름 목록입니다. 다음을 포함해야합니다 :
"dmamux0"- mux0 그룹의 clock 이름
"dmamux1"- mux1 그룹의 clock 이름
- clocks : clock-names의 각 항목에 하나씩있는 phandle 및 clock-specifier 쌍의 목록입니다.

선택적 속성 :
- 빅 엔디안 : 현재 레지스터 및 eDMA의 하드웨어 분산 / 수집 디스크립터는 빅 엔디안 모드로 구현되며, 그렇지 않은 경우 작은 모드로 구현됩니다.

Examples:

edma0: dma-controller@40018000 {
	#dma-cells = <2>;
	compatible = "fsl,vf610-edma";
	reg = <0x40018000 0x2000>,
		<0x40024000 0x1000>,
		<0x40025000 0x1000>;
	interrupts = <0 8 IRQ_TYPE_LEVEL_HIGH>,
		<0 9 IRQ_TYPE_LEVEL_HIGH>;
	interrupt-names = "edma-tx", "edma-err";
	dma-channels = <32>;
	clock-names = "dmamux0", "dmamux1";
	clocks = <&clks VF610_CLK_DMAMUX0>,
		<&clks VF610_CLK_DMAMUX1>;
};

* DMA 클라이언트
DMA 기능을 사용하는 DMA 클라이언트 드라이버는 각 채널에 대해 2 셀 지정자를 사용하여 dma.txt 파일에 설명 된 형식을 사용해야합니다. 첫 번째는이 요청을 다중화 할 수있는 채널 그룹 (DMAMUX)을 지정하고 두 번째 요청 소스를 지정합니다.

Examples:

sai2: sai@40031000 {
	compatible = "fsl,vf610-sai";
	reg = <0x40031000 0x1000>;
	interrupts = <0 86 IRQ_TYPE_LEVEL_HIGH>;
	clock-names = "sai";
	clocks = <&clks VF610_CLK_SAI2>;
	dma-names = "tx", "rx";
	dmas = <&edma0 0 21>,
		<&edma0 0 20>;
	status = "disabled";
};

*/
