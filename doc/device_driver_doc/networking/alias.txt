IP-Aliasing:
============

IP-aliases are an obsolete way to manage multiple IP-addresses/masks
per interface. Newer tools such as iproute2 support multiple
address/prefixes per interface, but aliases are still supported
for backwards compatibility.
IP-aliases는 인터페이스 당 여러 IP 주소 / 마스크를 관리하는 구식 방식입니다. iproute2와 같은 최신 도구는 인터페이스 당 여러 개의 address/prefixes를 지원하지만 이전 버전과의 호환성을 위해 aliases은 계속 지원됩니다.

An alias is formed by adding a colon and a string when running ifconfig.
This string is usually numeric, but this is not a must.
alias은 ifconfig를 실행할 때 콜론과 문자열을 추가하여 구성됩니다.
이 문자열은 일반적으로 숫자이지만 필수 항목은 아닙니다.

o Alias creation.
  Alias creation is done by 'magic' interface naming: eg. to create a
  200.1.1.1 alias for eth0 ...
  별칭 생성은 'magic'인터페이스 이름 지정에 의해 수행됩니다 : ethds에 대한 200.1.1.1 별칭을 만들기 위해 eg. ...

    # ifconfig eth0:0 200.1.1.1  etc,etc....
                   ~~ -> request alias #0 creation (if not yet exists) for eth0
    # ifconfig eth0 : 0 200.1.1.1 등, ....
                    ~~ -> eth0에 대한 별칭 # 0 생성 요청 (아직 존재하지 않는 경우)

    The corresponding route is also set up by this command. 
    Please note: The route always points to the base interface.
     해당 라우트도이 명령으로 설정됩니다.
     참고 : 경로는 항상 기본 인터페이스를 가리 킵니다.


o Alias deletion.
  The alias is removed by shutting the alias down:
  Alias 삭제.
   Alias을 종료하면 별칭이 제거됩니다.



    # ifconfig eth0:0 down
                 ~~~~~~~~~~ -> will delete alias
    # ifconfig eth0 : 0 down
                  ~~~~~~~~~ -> alias을 삭제합니다.
  		   		   
o Alias (re-)configuring

  Aliases are not real devices, but programs should be able to configure and
  refer to them as usual (ifconfig, route, etc).

   Aliases은 실제 장치가 아니지만 프로그램은 평소대로 (ifconfig, route 등) 구성하고 참조 할 수 있어야합니다.

o Relationship with main device

  If the base device is shut down the added aliases will be deleted too.
  기본 장치가 종료되면 추가 된 aliases도 삭제됩니다.