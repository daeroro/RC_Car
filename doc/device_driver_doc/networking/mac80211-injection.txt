How to use packet injection with mac80211
=========================================

mac80211 now allows arbitrary packets to be injected down any Monitor Mode
interface from userland.  The packet you inject needs to be composed in the
following format:
이제 mac80211은 임의의 패킷을 사용자 영역의 모든 모니터 모드 인터페이스에 주입 할 수 있습니다. 삽입하는 패킷은 다음 형식으로 구성되어야합니다.

 [ radiotap header  ]
 [ ieee80211 header ]
 [ payload ]

The radiotap format is discussed in
./Documentation/networking/radiotap-headers.txt.
radiotap 형식은 다음에서 심의됩니다.
./Documentation/networking/radiotap-headers.txt.

Despite many radiotap parameters being currently defined, most only make sense
to appear on received packets.  The following information is parsed from the
radiotap headers and used to control injection:
현재 정의 된 많은 radiotap 매개 변수에도 불구하고 대부분은 수신 된 패킷에 표시하는 것이 합리적입니다. 다음 정보는 radiotap 헤더에서 parsed되어 주입 제어에 사용됩니다.

 * IEEE80211_RADIOTAP_FLAGS

   IEEE80211_RADIOTAP_F_FCS: FCS will be removed and recalculated
   IEEE80211_RADIOTAP_F_WEP: frame will be encrypted if key available
   IEEE80211_RADIOTAP_F_FRAG: frame will be fragmented if longer than the
			      current fragmentation threshold.
IEEE80211_RADIOTAP_F_FCS : FCS가 제거되고 다시 계산됩니다.
    IEEE80211_RADIOTAP_F_WEP : 사용 가능한 키가 있으면 프레임이 암호화됩니다.
    IEEE80211_RADIOTAP_F_FRAG : 현재 fragmentation threshold 보다 긴 경우 프레임이 조각화됩니다.

 * IEEE80211_RADIOTAP_TX_FLAGS

   IEEE80211_RADIOTAP_F_TX_NOACK: frame should be sent without waiting for
				  an ACK even if it is a unicast frame
  IEEE80211_RADIOTAP_F_TX_NOACK : 프레임이 유니 캐스트 프레임이라도 ACK를 기다리지 않고 전송되어야 함

The injection code can also skip all other currently defined radiotap fields
facilitating replay of captured radiotap headers directly.
injection code는 캡쳐 된 radiotap 헤더를 직접 재생할 수 있도록 현재 정의 된 다른 radiotap 필드를 건너 뛸 수 있습니다.

Here is an example valid radiotap header defining some parameters
다음은 일부 매개 변수를 정의하는 유효한 유효 기간 헤더 예제입니다

	0x00, 0x00, // <-- radiotap version
	0x0b, 0x00, // <- radiotap header length
	0x04, 0x0c, 0x00, 0x00, // <-- bitmap
	0x6c, // <-- rate
	0x0c, //<-- tx power
	0x01 //<-- antenna

The ieee80211 header follows immediately afterwards, looking for example like
this:
ieee80211 헤더가 바로 뒤 따르며 다음과 같은 예를 찾습니다.

	0x08, 0x01, 0x00, 0x00,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0x13, 0x22, 0x33, 0x44, 0x55, 0x66,
	0x13, 0x22, 0x33, 0x44, 0x55, 0x66,
	0x10, 0x86

Then lastly there is the payload.
그런 다음 마지막으로 페이로드가 있습니다.

After composing the packet contents, it is sent by send()-ing it to a logical
mac80211 interface that is in Monitor mode.  Libpcap can also be used,
(which is easier than doing the work to bind the socket to the right
interface), along the following lines:
패킷 내용을 작성한 후, 모니터 모드 인 logical mac80211 인터페이스로 send ()를 보내서 패킷 내용을 보냅니다. Libpcap도 사용할 수 있습니다 (소켓을 올바른 인터페이스에 바인드하는 작업보다 쉽습니다).

	ppcap = pcap_open_live(szInterfaceName, 800, 1, 20, szErrbuf);
...
	r = pcap_inject(ppcap, u8aSendBuffer, nLength);

You can also find a link to a complete inject application here:

http://wireless.kernel.org/en/users/Documentation/packetspammer

Andy Green <andy@warmcat.com>

당신은 또한 여기에 완전한 주사 응용 프로그램에 대한 링크를 찾을 수 있습니다 :

http://wireless.kernel.org/ko/users/Documentation/packetspammer

Andy Green <andy@warmcat.com>