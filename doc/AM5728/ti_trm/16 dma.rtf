{\rtf1\ansi\ansicpg949\deff0\deflang1033\deflangfe1042{\fonttbl{\f0\fnil\fcharset129 \'b8\'bc\'c0\'ba \'b0\'ed\'b5\'f1;}}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang18\f0\fs20\'bf\'a3\'b5\'f0\'be\'c8\par
[endian ]\par
\par
\'b4\'dc\'be\'ee\'b8\'a6 \'c7\'fc\'bc\'ba\'c7\'cf\'b4\'c2 2\'c1\'f8 \'b9\'d9\'c0\'cc\'c6\'ae\'bf\'a1\'bc\'ad \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'c7 \'bc\'f8\'bc\'ad\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'bb\'b4\'c2 \'b9\'e6\'b9\'fd. \'ba\'f2 \'bf\'a3\'b5\'f0\'be\'c8(big-endian)\'b0\'fa \'b8\'ae\'c6\'b2 \'bf\'a3\'b5\'f0\'be\'c8(little-endian)\'c0\'cc \'c0\'d6\'b4\'c2\'b5\'a5, \'ba\'f2 \'bf\'a3\'b5\'f0\'be\'c8\'c0\'ba \'c3\'d6\'bb\'f3\'c0\'a7 \'ba\'f1\'c6\'ae(MSB)\'ba\'ce\'c5\'cd \'ba\'ce\'c8\'a3\'c8\'ad\'b5\'c7\'be\'ee \'c0\'fa\'c0\'e5\'b5\'c7\'b8\'e7, \'b8\'ae\'c6\'b2 \'bf\'a3\'b5\'f0\'be\'c8\'c0\'ba \'c3\'d6\'c7\'cf\'c0\'a7 \'ba\'f1\'c6\'ae(LSB)\'ba\'ce\'c5\'cd \'ba\'ce\'c8\'a3\'c8\'ad\'b5\'c7\'be\'ee \'c0\'fa\'c0\'e5\'b5\'c8\'b4\'d9. \'bf\'b9\'b8\'a6 \'b5\'e9\'b8\'e9, \'bc\'fd\'c0\'da 12\'b4\'c2 2\'c1\'f8\'bc\'f6\'b7\'ce \'b3\'aa\'c5\'b8\'b3\'bb\'b8\'e9 1100\'c0\'ce\'b5\'a5 \'ba\'f2 \'bf\'a3\'b5\'f0\'be\'c8\'c0\'ba 1100\'c0\'b8\'b7\'ce, \'b8\'ae\'c6\'b2 \'bf\'a3\'b5\'f0\'be\'c8\'c0\'ba 0011\'b7\'ce \'b0\'a2\'b0\'a2 \'c0\'fa\'c0\'e5\'b5\'c8\'b4\'d9.\par
\par
16.1 System DMA\par
\par
This chapter describes the system direct memory access (DMA_SYSTEM) module.\par
\'c0\'cc \'c0\'e5\'bf\'a1\'bc\'ad\'b4\'c2 \'bd\'c3\'bd\'ba\'c5\'db \'c1\'f7\'c1\'a2 \'b8\'de\'b8\'f0\'b8\'ae \'be\'d7\'bc\'bc\'bd\'ba (DMA_SYSTEM) \'b8\'f0\'b5\'e2\'bf\'a1 \'b4\'eb\'c7\'d8 \'bc\'b3\'b8\'ed\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
NOTE: EVE and VCP are not supported in this family of devices.\par
\'c2\'fc\'b0\'ed : EVE\'bf\'cd VCP\'b4\'c2 \'c0\'e5\'c4\'a1\'c0\'c7 \'b0\'a1\'c1\'b7\'bf\'a1\'bc\'ad \'c1\'f6\'bf\'f8\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.1.1 DMA_SYSTEM Module Overview\par
16.1.1 DMA_SYSTEM \'b8\'f0\'b5\'e2 \'b0\'b3\'bf\'e4\par
\par
The system direct memory access (DMA_SYSTEM) module, also called DMA4, performs highperformance data transfers between memories and peripheral devices without microprocessor unit (MPU) or digital signal processor (DSP) support during transfer.\par
DMA4\'b6\'f3\'b0\'ed\'b5\'b5\'c7\'cf\'b4\'c2 \'bd\'c3\'bd\'ba\'c5\'db \'c1\'f7\'c1\'a2 \'b8\'de\'b8\'f0\'b8\'ae \'be\'d7\'bc\'bc\'bd\'ba (DMA_SYSTEM) \'b8\'f0\'b5\'e2\'c0\'ba \'c0\'fc\'bc\'db \'c1\'df\'bf\'a1 \'b8\'b6\'c0\'cc\'c5\'a9\'b7\'ce \'c7\'c1\'b7\'ce\'bc\'bc\'bc\'ad \'c0\'e5\'c4\'a1 (MPU) \'b6\'c7\'b4\'c2 \'b5\'f0\'c1\'f6\'c5\'d0 \'bd\'c5\'c8\'a3 \'c7\'c1\'b7\'ce\'bc\'bc\'bc\'ad (DSP) \'c1\'f6\'bf\'f8\'be\'f8\'c0\'cc \'b8\'de\'b8\'f0\'b8\'ae\'bf\'cd \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'b0\'a3\'bf\'a1 \'b0\'ed\'bc\'ba\'b4\'c9 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'bc\'db\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
A DMA transfer is programmed through a logical DMA channel, which allows the transfer to be optimally tailored to the requirements of the application.\par
DMA \'c0\'fc\'bc\'db\'c0\'ba \'b3\'ed\'b8\'ae\'c0\'fb DMA \'c3\'a4\'b3\'ce\'c0\'bb \'c5\'eb\'c7\'d8 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'b5\'c7\'b9\'c7\'b7\'ce \'be\'d6\'c7\'c3\'b8\'ae\'c4\'c9\'c0\'cc\'bc\'c7\'c0\'c7 \'bf\'e4\'b1\'b8 \'bb\'e7\'c7\'d7\'bf\'a1 \'b8\'c2\'b0\'d4 \'c0\'fc\'bc\'db\'c0\'bb \'c3\'d6\'c0\'fb\'c0\'b8\'b7\'ce \'c1\'b6\'c1\'a4\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The DMA controller includes the following main features:\par
\par
DMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1\'b4\'c2 \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'ba \'c1\'d6\'bf\'e4 \'b1\'e2\'b4\'c9\'c0\'cc \'c6\'f7\'c7\'d4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  Data transfer support in either direction between:\par
\par
\bullet  \'b4\'d9\'c0\'bd \'c1\'df \'be\'ee\'b6\'b2 \'b9\'e6\'c7\'e2 \'c0\'b8\'b7\'ce\'b5\'e7 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'bc\'db \'c1\'f6\'bf\'f8(\'b4\'d9\'b9\'e6\'b8\'e9 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'bc\'db\'c1\'f6\'bf\'f8) :\par
\par
\endash  Memory and memory\par
- \'b8\'de\'b8\'f0\'b8\'ae \'b9\'d7 \'b8\'de\'b8\'f0\'b8\'ae (\'b8\'de\'b8\'f0\'b8\'ae\'bf\'a1\'bc\'ad \'b8\'de\'b8\'f0\'b8\'ae\'b7\'ce)\par
\par
\endash  Memory and peripheral device\par
- \'b8\'de\'b8\'f0\'b8\'ae \'b9\'d7 \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1 (\'b8\'de\'b8\'f0\'b8\'ae\'bf\'a1\'bc\'ad \'c1\'d6\'ba\'af\'c0\'e5\'c4\'a1\'b7\'ce)\par
\par
\bullet  32 logical DMA channels supporting:\par
\par
\bullet  \'b4\'d9\'c0\'bd\'c0\'bb \'c1\'f6\'bf\'f8\'c7\'cf\'b4\'c2 32 \'b0\'b3\'c0\'c7 \'b3\'ed\'b8\'ae DMA \'c3\'a4\'b3\'ce :\par
\par
\endash  Multiple concurrent transfers\par
- \'bf\'a9\'b7\'af\'b0\'b3\'b8\'a6  \'b5\'bf\'bd\'c3\'bf\'a1 \'c0\'fc\'bc\'db\par
\par
\endash  Independent transfer profile for each channel\par
- \'b0\'a2 \'c3\'a4\'b3\'ce \'ba\'b0 \'b5\'b6\'b8\'b3 \'c0\'fc\'bc\'db \'c7\'c1\'b7\'ce\'c6\'c4\'c0\'cf( \'c7\'c1\'b7\'ce\'c6\'c4\'c0\'cf\'c0\'bb \'b0\'a2 \'c3\'a4\'b3\'ce\'ba\'b0\'b7\'ce \'b5\'b6\'b8\'b3 \'c0\'fc\'bc\'db \'c0\'cc\'b0\'a1\'b4\'c9)\par
\par
\endash  8-bit, 16-bit, or 32-bit data element transfer size\par
- 8 \'ba\'f1\'c6\'ae, 16 \'ba\'f1\'c6\'ae \'b6\'c7\'b4\'c2 32 \'ba\'f1\'c6\'ae \'b5\'a5\'c0\'cc\'c5\'cd \'bf\'e4\'bc\'d2 \'c0\'fc\'bc\'db \'c5\'a9\'b1\'e2 (\'b0\'a2\'ba\'f1\'c6\'ae\'ba\'b0\'b7\'ce \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'bc\'db \'c5\'a9\'b1\'e2\'b8\'a6 \'c1\'b6\'c0\'fd \'c7\'d2 \'bc\'f6 \'c0\'d6\'b4\'d9.)\par
\par
\endash  Software-triggered or hardware-synchronized transfers\par
- \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'c6\'ae\'b8\'ae\'b0\'c5 \'b6\'c7\'b4\'c2 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\par
\par
\endash  Flexible source and destination address generation\par
- \'c0\'af\'bf\'ac\'c7\'d1 \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2 \'bb\'fd\'bc\'ba\par
\par
\endash  Burst read and write - max burst size is 16\par
- \'b9\'f6\'bd\'ba\'c6\'ae \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 - \'c3\'d6\'b4\'eb \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2\'b4\'c2 16\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
\endash  Chained multiple-channel transfers\par
- \'c3\'bc\'c0\'ce \'b4\'d9\'c1\'df \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db(\'bf\'ac\'bc\'e2 \'c0\'fb\'c0\'b8\'b7\'ce \'bf\'a9\'b7\'af \'c3\'a4\'b3\'ce\'bf\'a1 \'c0\'fc\'bc\'db\'c0\'cc \'b0\'a1\'b4\'c9)\par
\par
 \endash  Endianism conversion\par
- \'bf\'a3\'b5\'f0\'be\'c8 \'ba\'af\'c8\'af\par
\par
\endash  Draining\par
- \'b9\'e8\'bc\'f6\par
\par
\endash  Linked-list support for descriptor types 1, 2, and 3\par
- \'b1\'e2\'bc\'fa\'c0\'da \'c0\'af\'c7\'fc 1,2,3 \'b8\'b5\'c5\'a9 \'b8\'f1\'b7\'cf \'c1\'f6\'bf\'f8\par
\par
\bullet  First-come, first-serve DMA scheduling with fixed priority\par
\bullet  \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b0\'ed\'c1\'a4 \'b5\'c8 \'bc\'b1\'c2\'f8\'bc\'f8 DMA \'bd\'ba\'c4\'c9\'c1\'d9\'b8\'b5\par
\par
\bullet  Up to 127 Hardware DMA requests\par
\bullet  \'c3\'d6\'b4\'eb 127 \'b0\'b3\'c0\'c7 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee DMA \'bf\'e4\'c3\'bb\par
\par
\bullet  DMA_CROSSBAR\par
\bullet  DMA_CROSSBAR\par
\par
\bullet  Constant fill\par
\bullet  \'c0\'cf\'c1\'a4 \'c3\'a4\'bf\'ec\'b1\'e2(\'bb\'f3\'bd\'c3 \'b4\'eb\'b1\'e2)\par
\par
\bullet  Transparent copy\par
\bullet\'c5\'f5\'b8\'ed\'c7\'d1 \'ba\'b9\'c1\'a6\'ba\'bb\par
\par
\bullet  Four programmable interrupt request output lines\par
\bullet  \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c0\'cc \'b0\'a1\'b4\'c9\'c7\'d1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bf\'e4\'c3\'bb \'c3\'e2\'b7\'c2 \'b6\'f3\'c0\'ce\'c0\'cc 4\'b0\'b3 \'c0\'d6\'b4\'d9.\par
\par
\bullet  FIFO depth: 256 \'a1\'bf 64-bit\par
\bullet  FIFO \'c5\'a9\'b1\'e2 : 256 \'a1\'bf 64 \'ba\'f1\'c6\'ae\par
\par
\bullet  Data buffering\par
\bullet  \'b5\'a5\'c0\'cc\'c5\'cd \'b9\'f6\'c6\'db\'b8\'b5\par
\par
\bullet  FIFO budget allocation\par
\bullet  FIFO \'bf\'b9\'bb\'ea \'b9\'e8\'ba\'d0\par
\par
\bullet  Power-management support\par
\'c0\'fc\'bf\'f8 \'b0\'fc\'b8\'ae \'c1\'f6\'bf\'f8\par
\par
\bullet  Auto-idle power-saving support\par
\bullet  \'c0\'da\'b5\'bf idle \'c0\'fd\'c0\'fc \'c1\'f6\'bf\'f8\par
\par
The DMA_SYSTEM module has three ports: one read, one write, and one configuration port, and provides multiple logical channel support.\par
DMA_SYSTEM \'b8\'f0\'b5\'e2\'bf\'a1\'b4\'c2 \'c0\'d0\'b1\'e2, \'be\'b2\'b1\'e2 \'b9\'d7 \'b1\'b8\'bc\'ba \'c6\'f7\'c6\'ae\'c0\'c7 \'bc\'bc \'b0\'a1\'c1\'f6 \'c6\'f7\'c6\'ae\'b0\'a1 \'c0\'d6\'c0\'b8\'b8\'e7 \'b4\'d9\'c1\'df \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c1\'f6\'bf\'f8\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
A dynamically allocated FIFO queue memory pool provides buffering  between the read and write ports, which are multithreaded (two threads for the write port and four threads  for the read port);\par
\'b5\'bf\'c0\'fb\'c0\'b8\'b7\'ce \'c7\'d2\'b4\'e7 \'b5\'c8 FIFO \'c5\'a5 \'b8\'de\'b8\'f0\'b8\'ae \'c7\'ae\'c0\'ba \'b4\'d9\'c1\'df \'bd\'ba\'b7\'b9\'b5\'e5 \'b5\'c8 \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae\'bf\'cd \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'bb\'e7\'c0\'cc\'c0\'c7 \'b9\'f6\'c6\'db\'b8\'b5\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9 (\'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'c0\'c7 \'b0\'e6\'bf\'ec \'b5\'ce \'b0\'b3\'c0\'c7 \'bd\'ba\'b7\'b9\'b5\'e5\'bf\'cd \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae\'c0\'c7 \'b0\'e6\'bf\'ec \'b3\'d7 \'b0\'b3\'c0\'c7 \'bd\'ba\'b7\'b9\'b5\'e5).\par
\par
this means that each transaction is flagged by a thread ID (0, 1, 2, or 3) in the request  direction and in the response direction.\par
\'c0\'cc\'b0\'cd\'c0\'ba \'b0\'a2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc \'bf\'e4\'c3\'bb \'b9\'e6\'c7\'e2\'b0\'fa \'c0\'c0\'b4\'e4 \'b9\'e6\'c7\'e2\'c0\'b8\'b7\'ce \'bd\'ba\'b7\'b9\'b5\'e5 ID (0, 1, 2 \'b6\'c7\'b4\'c2 3)\'b7\'ce \'c7\'c3\'b7\'a1\'b1\'d7\'b5\'ca\'c0\'bb \'c0\'c7\'b9\'cc\'c7\'d5\'b4\'cf\'b4\'d9. (\par
\par
This allows the read port to have four outstanding requests at a  time.\par
\'c0\'cc\'b7\'b8\'b0\'d4\'c7\'cf\'b8\'e9 \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae\'b0\'a1 \'c7\'d1 \'b9\'f8\'bf\'a1 4 \'b0\'b3\'c0\'c7 \'b4\'eb\'b1\'e2\'c1\'df\'c0\'ce \'bf\'e4\'c3\'bb\'c0\'bb \'b0\'a1\'c1\'fa \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.(0,1,2,3\'c0\'bb \'b0\'a1\'c1\'f6\'b9\'c7\'b7\'ce\'bd\'e1 4\'b0\'b3\'c0\'c7 \'b4\'eb\'b1\'e2\'c1\'df\'c0\'ce \'bf\'e4\'c3\'bb\'c0\'bb \'b0\'a1\'c1\'fa\'bc\'f6\'c0\'d6\'b4\'d9.)\par
\par
The write port has two threads budget available.\par
\'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'bf\'a1\'b4\'c2 \'b5\'ce \'b0\'b3\'c0\'c7  \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'d1 \'bd\'ba\'b7\'b9\'b5\'e5(\'bf\'b9\'ba\'f1 \'bd\'ba\'b7\'b9\'b5\'e5)\'b8\'a6 \'b0\'a1\'c1\'f6\'b0\'ed \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The MPU (or DSP) configures the DMA_SYSTEM through the L4_CFG interconnect.\par
MPU (\'b6\'c7\'b4\'c2 DSP)\'b4\'c2 L4_CFG \'bb\'f3\'c8\'a3 \'bf\'ac\'b0\'e1\'c0\'bb \'c5\'eb\'c7\'d8 DMA_SYSTEM\'c0\'bb \'b1\'b8\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.1.2 DMA_SYSTEM Controller Environment\par
16.1.2 DMA_SYSTEM \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'c8\'af\'b0\'e6\par
\par
The DMA_SYSTEM controller supports external DMA requests through the dma_evt[4:1] pins (see Table 16-1).\par
DMA_SYSTEM \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 dma_evt [4 : 1] \'c7\'c9\'c0\'bb \'c5\'eb\'c7\'d8 \'bf\'dc\'ba\'ce DMA \'bf\'e4\'c3\'bb\'c0\'bb \'c1\'f6\'bf\'f8\'c7\'d5\'b4\'cf\'b4\'d9 (\'c7\'a5 16-1 \'c2\'fc\'c1\'b6).\par
\par
A logical channel can be configured to respond to an external synchronization request.\par
\'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'ba \'bf\'dc\'ba\'ce \'b5\'bf\'b1\'e2\'c8\'ad \'bf\'e4\'c3\'bb\'bf\'a1 \'c0\'c0\'b4\'e4\'c7\'cf\'b5\'b5\'b7\'cf \'b1\'b8\'bc\'ba \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Figure 16-2 shows an example of how to use the external hardware DMA request pins in the DMA_SYSTEM environment.\par
\'b1\'d7\'b8\'b2 16-2\'b4\'c2 DMA_SYSTEM \'c8\'af\'b0\'e6\'bf\'a1\'bc\'ad \'bf\'dc\'ba\'ce \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee DMA \'bf\'e4\'c3\'bb \'c7\'c9\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\'c0\'c7 \'bf\'b9\'b8\'a6 \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
An external device can use the external DMA request pins to start a logical channel transfer over the general-purpose memory controller (GPMC) interface.\par
\'bf\'dc\'ba\'ce \'c0\'e5\'c4\'a1\'b4\'c2 \'bf\'dc\'ba\'ce DMA \'bf\'e4\'c3\'bb \'c7\'c9\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'b9\'fc\'bf\'eb \'b8\'de\'b8\'f0\'b8\'ae \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af (GPMC) \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'b8\'a6 \'c5\'eb\'c7\'d1 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db\'c0\'bb \'bd\'c3\'c0\'db\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The transfer can be a memory-to-memory transfer in which the source memory is in the external device.\par
\'c0\'fc\'bc\'db\'c0\'ba \'bc\'d2\'bd\'ba \'b8\'de\'b8\'f0\'b8\'ae\'b0\'a1 \'bf\'dc\'ba\'ce \'c0\'e5\'c4\'a1\'bf\'a1\'c0\'d6\'b4\'c2 \'b8\'de\'b8\'f0\'b8\'ae \'b4\'eb \'b8\'de\'b8\'f0\'b8\'ae \'c0\'fc\'bc\'db \'c0\'cf \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9. (\'c0\'fc\'bc\'db\'c7\'d2\'b6\'a7 \'bc\'d2\'bd\'ba\'b8\'de\'b8\'f0\'b8\'ae\'bf\'a1\'bc\'ad \'bf\'dc\'ba\'ce \'b8\'de\'b8\'f0\'b8\'ae \'b0\'a1  \'b8\'de\'b8\'f0\'b8\'ae\'b4\'eb \'b8\'de\'b8\'f0\'b8\'ae \'c0\'fc\'bc\'db\'c0\'cf\'bc\'f6\'c0\'d6\'b4\'d9.)\par
\par
By default, the external DMA request signals are not available on external pins after a cold reset.\par
 \'b1\'e2\'ba\'bb\'c0\'fb\'c0\'b8\'b7\'ce \'bf\'dc\'ba\'ce DMA \'bf\'e4\'c3\'bb \'bd\'c5\'c8\'a3\'b4\'c2 \'c4\'dd\'b5\'e5 \'b8\'ae\'bc\'c2 \'c8\'c4\'bf\'a1 \'bf\'dc\'ba\'ce \'c7\'c9\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
For more information about multiplexing out the two signal lines to pins, see Section 18.4.6.1.1, Pad Configuration Registers in the Chapter 18, Control Module.\par
\'b5\'ce \'b0\'b3\'c0\'c7 \'bd\'c5\'c8\'a3 \'b6\'f3\'c0\'ce\'c0\'bb \'c7\'c9\'c0\'b8\'b7\'ce \'b8\'d6\'c6\'bc\'c7\'c3\'b7\'ba\'bd\'cc\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 18.4.6.1.1, 18 \'c0\'e5, \'c1\'a6\'be\'ee \'b8\'f0\'b5\'e2\'c0\'c7 \'c6\'d0\'b5\'e5 \'b1\'b8\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
All 127 DMA request lines are transition sensitive.\par
\'b8\'f0\'b5\'e7 127 \'b0\'b3\'c0\'c7 DMA \'bf\'e4\'c3\'bb \'b6\'f3\'c0\'ce\'c0\'ba \'c0\'fc\'c8\'af\'bf\'a1 \'b9\'ce\'b0\'a8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
For a transition-sensitive DMA request (see Figure 16-3), the line must be maintained low (asserted) until the first DMA access is complete, after which the line must be maintained high (deasserted) for greater than one clock cycle (DMA_L3_GICLK):\par
\'c6\'ae\'b7\'a3\'c1\'f6\'bc\'c7\'bf\'a1 \'b9\'ce\'b0\'a8\'c7\'d1 DMA \'bf\'e4\'c3\'bb (\'b1\'d7\'b8\'b2 16-3 \'c2\'fc\'c1\'b6)\'c0\'c7 \'b0\'e6\'bf\'ec \'c3\'b9 \'b9\'f8\'c2\'b0 DMA \'be\'d7\'bc\'bc\'bd\'ba\'b0\'a1 \'bf\'cf\'b7\'e1 \'b5\'c9 \'b6\'a7\'b1\'ee\'c1\'f6 \'b6\'f3\'c0\'ce\'c0\'bb \'b7\'ce\'bf\'ec (\'be\'ee\'bc\'b3\'c6\'ae)\'b7\'ce \'c0\'af\'c1\'f6\'c7\'d8\'be\'df\'c7\'cf\'b8\'e7, \'b1\'d7 \'c8\'c4\'bf\'a1 \'b6\'f3\'c0\'ce\'c0\'ba 1 \'c5\'ac\'b7\'b0 \'bb\'e7\'c0\'cc\'c5\'ac \'c0\'cc\'bb\'f3 \'b5\'bf\'be\'c8 \'c7\'cf\'c0\'cc (deasserted)\'b7\'ce \'c0\'af\'c1\'f6\'b5\'c7\'be\'ee\'be\'df\'c7\'d1\'b4\'d9 (DMA_L3_GICLK) :\par
\par
\bullet  When the deassertion time is less than one clock cycle, the DMA_SYSTEM may not detect the deassertion.\par
\bullet  deasserted \'c5\'b8\'c0\'d3\'c0\'cc 1 \'c5\'ac\'b7\'b0 \'bb\'e7\'c0\'cc\'c5\'ac\'ba\'b8\'b4\'d9 \'c0\'db \'c0\'b8\'b8\'e9 DMA_SYSTEM\'c0\'cc deasserted \'b8\'a6 \'b0\'a8\'c1\'f6\'c7\'cf\'c1\'f6 \'b8\'f8\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  When the channel is enabled one cycle after a DMA request is disabled, the channel detects the DMA request and starts the corresponding transfer.\par
\bullet  DMA \'bf\'e4\'c3\'bb\'c0\'cc \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'c8\'c4 1\'bb\'e7\'c0\'cc\'c5\'ac\'c0\'cc \'b5\'b7  \'c0\'cc\'c8\'c4\'bf\'a1  \'c3\'a4\'b3\'ce\'c0\'cc \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9 \'c3\'a4\'b3\'ce\'c0\'ba DMA \'bf\'e4\'c3\'bb\'c0\'bb \'b0\'a8\'c1\'f6\'c7\'cf\'b0\'ed DMA \'bf\'e4\'c3\'bb\'c0\'bb \'c0\'fc\'bc\'db\'c7\'cf\'b1\'e2 \'bd\'c3\'c0\'db\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  When the channel is enabled two cycles after the DMA request is disabled, the channel does not detect the DMA request.\par
\bullet  DMA \'bf\'e4\'c3\'bb\'c0\'cc \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'c8\'c4 2\'bb\'e7\'c0\'cc\'c6\'b2 \'b5\'b7 \'c0\'cc\'c8\'c4\'bf\'a1 \'c3\'a4\'b3\'ce\'c0\'cc \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9 \'c3\'a4\'b3\'ce DMA \'bf\'e4\'b1\'b8\'b8\'a6 \'b0\'a8\'c1\'f6\'c7\'cf\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.1.3 DMA_SYSTEM Module Integration\par
16.1.3 DMA_SYSTEM \'b8\'f0\'b5\'e2 \'c5\'eb\'c7\'d5\par
\par
This section describes the integration of the module in the device, including information about clocks, resets, and hardware requests.\par
\'c0\'cc \'bc\'bd\'bc\'c7\'bf\'a1\'bc\'ad\'b4\'c2 \'c5\'ac\'b6\'f4, \'c0\'e7\'bc\'b3\'c1\'a4 \'b9\'d7 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'bf\'e4\'c3\'bb\'bf\'a1 \'b4\'eb\'c7\'d1 \'c1\'a4\'ba\'b8\'b8\'a6 \'c6\'f7\'c7\'d4\'c7\'cf\'bf\'a9 \'c0\'e5\'c4\'a1\'bf\'a1 \'b8\'f0\'b5\'e2\'c0\'bb \'c5\'eb\'c7\'d5\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\'bf\'a1 \'b4\'eb\'c7\'d8 \'bc\'b3\'b8\'ed\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Figure 16-4 shows the DMA_SYSTEM controller integration.\par
\'b1\'d7\'b8\'b2 16-4\'b4\'c2 DMA_SYSTEM \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'c5\'eb\'c7\'d5\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
NOTE: For more information about the system DMA wake-up generator (WUGEN_DMA_SYSTEM), the master standby/slave idle protocols, and the wake-up request, see Section 3.1.1.1, Clock Management, in Chapter 3, Power, Reset, and Clock Management.\par
\'c1\'d6 : \'bd\'c3\'bd\'ba\'c5\'db DMA \'b1\'fa\'bf\'ec\'b1\'e2 \'bb\'fd\'bc\'ba\'b1\'e2 (WUGEN_DMA_SYSTEM), \'b8\'b6\'bd\'ba\'c5\'cd \'b4\'eb\'b1\'e2 / \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea \'c0\'af\'c8\'de \'c7\'c1\'b7\'ce\'c5\'e4\'c4\'dd \'b9\'d7 \'bf\'fe\'c0\'cc\'c5\'a9 \'be\'f7 \'bf\'e4\'c3\'bb\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 3 \'c0\'e5, \'c0\'fc\'bf\'f8, \'c0\'e7\'bc\'b3\'c1\'a4 \'b9\'d7 3.1.1.1 \'c5\'ac\'b7\'b0 \'b0\'fc\'b8\'ae\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0. \'c5\'ac\'b7\'cf \'b0\'fc\'b8\'ae.\par
\par
Description\par
DMA_L3_GICLK\'bf\'a1 \'b0\'fc\'c7\'d1 \'bc\'b3\'b8\'ed\par
Functional clock for all internal logic and for the two master read and write ports.\par
\'b8\'f0\'b5\'e7 \'b3\'bb\'ba\'ce \'b7\'ce\'c1\'f7\'b0\'fa 2 \'b0\'b3\'c0\'c7 \'b8\'b6\'bd\'ba\'c5\'cd \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'c0\'c7 \'b1\'e2\'b4\'c9 \'c5\'ac\'b6\'f4.\par
\par
For information about the power, reset, and clock management (PRCM) clock gating and management, see Chapter 3, Power, Reset, and Clock Management.\par
\'c0\'fc\'bf\'f8, \'c0\'e7\'bc\'b3\'c1\'a4 \'b9\'d7 \'c5\'ac\'b7\'cf \'b0\'fc\'b8\'ae (PRCM) \'c5\'ac\'b7\'cf \'b0\'d4\'c0\'cc\'c6\'c3 \'b9\'d7 \'b0\'fc\'b8\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 3 \'c0\'e5, \'c0\'fc\'bf\'f8, \'c0\'e7\'bc\'b3\'c1\'a4 \'b9\'d7 \'c5\'ac\'b7\'cf \'b0\'fc\'b8\'ae\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
DMA_L4_GICLK\'bf\'a1\'b0\'fc\'c7\'d1 \'bc\'b3\'b8\'ed\par
Interface clock. It supports the configuration port.\par
\'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba \'c5\'ac\'b7\'b0\'c0\'ba \'b1\'b8\'bc\'ba \'c6\'f7\'c6\'ae\'b8\'a6 \'c1\'f6\'bf\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
For information about PRCM clock gating and management, see Chapter 3, Power, Reset, and Clock Management.\par
PRCM \'c5\'ac\'b7\'cf \'b0\'d4\'c0\'cc\'c6\'c3 \'b9\'d7 \'b0\'fc\'b8\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 3 \'c0\'e5, \'c0\'fc\'bf\'f8, \'c0\'e7\'bc\'b3\'c1\'a4 \'b9\'d7 \'c5\'ac\'b7\'b0 \'b0\'fc\'b8\'ae\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
DMA_RET_RST \'bc\'b3\'b8\'ed\par
Hardware retention reset. It initializes all internal logic of the DMA_SYSTEM module, all global registers, and some of the per-channel registers, implemented in flip-flops.\par
\'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'ba\'b8\'c1\'b8 \'c0\'e7\'bc\'b3\'c1\'a4\'c0\'ba DMA_SYSTEM \'b8\'f0\'b5\'e2\'c0\'c7 \'b8\'f0\'b5\'e7 \'b3\'bb\'ba\'ce \'b3\'ed\'b8\'ae, \'b8\'f0\'b5\'e7 \'c0\'fc\'bf\'aa \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'b9\'d7 \'c7\'c3\'b8\'b3 \'c7\'c3\'b7\'d3\'bf\'a1 \'b1\'b8\'c7\'f6 \'b5\'c8 \'c3\'a4\'b3\'ce \'ba\'b0 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'c1\'df \'c0\'cf\'ba\'ce\'b8\'a6 \'c3\'ca\'b1\'e2\'c8\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
However, all remaining per-channel registers are memory-based, and, therefore, are not reset (have undefined values).\par
\'b1\'d7\'b7\'af\'b3\'aa \'c3\'a4\'b3\'ce \'b8\'f0\'b5\'e7 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'b8\'de\'b8\'f0\'b8\'ae \'b1\'e2\'b9\'dd\'c0\'cc\'b9\'c7\'b7\'ce \'c0\'e7\'bc\'b3\'c1\'a4\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9 (\'b0\'aa\'c0\'cc \'c1\'a4\'c0\'c7\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'bd).\par
\par
Thus, when programming a channel for the first time, all bits that have undefined reset values must be configured before enabling the channel.\par
 \'b5\'fb\'b6\'f3\'bc\'ad \'c3\'b3\'c0\'bd\'c0\'b8\'b7\'ce \'c3\'a4\'b3\'ce\'c0\'bb \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c7\'d2 \'b6\'a7 \'c1\'a4\'c0\'c7\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'ba \'c0\'e7\'bc\'b3\'c1\'a4 \'b0\'aa\'c0\'cc\'c0\'d6\'b4\'c2 \'b8\'f0\'b5\'e7 \'ba\'f1\'c6\'ae\'b4\'c2 \'c3\'a4\'b3\'ce\'c0\'bb \'c8\'b0\'bc\'ba\'c8\'ad\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 \'b1\'b8\'bc\'ba\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.(\'c3\'a4\'b3\'ce\'c0\'bb \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c7\'d2\'b6\'a7 \'c1\'a4\'c0\'c7 \'b5\'c7\'c1\'f6 \'be\'ca\'b4\'c2 \'ba\'f1\'c6\'ae\'b4\'c2 \'c3\'a4\'b3\'ce\'c0\'bb \'c8\'b0\'bc\'ba\'c8\'ad \'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 \'bc\'b3\'c1\'a4\'c7\'d8\'be\'df\'c7\'d1\'b4\'d9.)\par
\par
For information about PRCM reset sources and distribution, see Chapter 3, Power, Reset, and Clock Management.\par
PRCM \'c0\'e7\'bc\'b3\'c1\'a4 \'bc\'d2\'bd\'ba \'b9\'d7 \'b9\'e8\'c6\'f7\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 3 \'c0\'e5, \'c0\'fc\'bf\'f8, \'c0\'e7\'bc\'b3\'c1\'a4 \'b9\'d7 \'c5\'ac\'b7\'cf \'b0\'fc\'b8\'ae\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
Table 16-4. DMA_SYSTEM Hardware Requests\par
DMA_SYSTEM interrupt request 0. For information about the MPU_INTC, see Section 17.3.1 Interrupt Requests to MPU_INTC.\par
DMA_SYSTEM \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bf\'e4\'c3\'bb 0. MPU INTC\'bf\'a1 \'b4\'eb\'c7\'d1 \'c1\'a4\'ba\'b8\'b4\'c2 17.3.1 \'c0\'fd MPI_INIT\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bf\'e4\'c3\'bb\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
\'c5\'d7\'c0\'cc\'ba\'ed\'bf\'a1 \'b0\'fc\'c7\'d1 \'be\'cb\'b8\'b2 \'b9\'d7 \'c1\'d6\'c0\'c7\par
NOTE: The \ldblquote Default Mapping\rdblquote  column in Table 16-4 Hardware Requests shows the default mapping of module IRQ source signals.\par
\'c2\'fc\'b0\'ed : \'c7\'a5 16-4 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'bf\'e4\'c3\'bb\'c0\'c7 "\'b1\'e2\'ba\'bb \'b8\'c5\'c7\'ce"\'bf\'ad\'bf\'a1\'b4\'c2 \'b8\'f0\'b5\'e2 IRQ \'bc\'d2\'bd\'ba \'bd\'c5\'c8\'a3\'c0\'c7 \'b1\'e2\'ba\'bb \'b8\'c5\'c7\'ce\'c0\'cc \'b3\'aa\'bf\'cd \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
These IRQ source signals can also be mapped to other lines of each device Interrupt controller through the IRQ_CROSSBAR or DMA_CROSSBAR modules.\par
\'c0\'cc IRQ \'bc\'d2\'bd\'ba \'bd\'c5\'c8\'a3\'b4\'c2 IRQ_CROSSBAR \'b6\'c7\'b4\'c2 DMA_CROSSBAR \'b8\'f0\'b5\'e2\'c0\'bb \'c5\'eb\'c7\'d8 \'b0\'a2 \'c0\'e5\'c4\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 \'b4\'d9\'b8\'a5 \'b6\'f3\'c0\'ce\'bf\'a1 \'b8\'c5\'c7\'ce \'b5\'c9 \'bc\'f6\'b5\'b5 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
For more information about the IRQ_CROSSBAR and DMA_CROSSBAR modules, see sections: Section 18.4.6.4 IRQ_CROSSBAR  Module Functional Description and DMA_CROSSBAR Module Functional Description, in Chapter 18Control Module.\par
IRQ_CROSSBAR \'b9\'d7 DMA_CROSSBAR \'b8\'f0\'b5\'e2\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba \'bc\'bd\'bc\'c7 18.4.6.4 \'bc\'bd\'bc\'c7 18 CONTROL \'b8\'f0\'b5\'e2\'c0\'c7 IRQ_CROSSBAR \'b8\'f0\'b5\'e2 \'b1\'e2\'b4\'c9 \'bc\'b3\'b8\'ed \'b9\'d7 DMA_CROSSBAR \'b8\'f0\'b5\'e2 \'b1\'e2\'b4\'c9 \'bc\'b3\'b8\'ed \'bc\'bd\'bc\'c7\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
For more information about the device interrupt controllers, refer to Chapter 17 Interrupt Controllers in the device TRM.\par
\'c0\'e5\'c4\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba \'c0\'e5\'c4\'a1 TRM\'c0\'c7 17 \'c0\'e5 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
NOTE: For a description of the interrupt source, see Section 16.1.4.2, DMA_SYSTEM Controller Interrupt Requests.\par
\'c2\'fc\'b0\'ed : \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bc\'d2\'bd\'ba\'bf\'a1 \'b4\'eb\'c7\'d1 \'bc\'b3\'b8\'ed\'c0\'ba \'bc\'bd\'bc\'c7 16.1.4.2, DMA_SYSTEM \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bf\'e4\'c3\'bb\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.1.3.1 DMA Requests to the DMA_SYSTEM Controller\par
16.1.3.1 DMA_SYSTEM \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'b4\'eb\'c7\'d1 DMA \'bf\'e4\'c3\'bb\par
\par
Table 16-5 lists the default DMA sources for the DMA_SYSTEM controller.\par
\par
In addition, the DMA_SYSTEM  inputs (DMA_SYSTEM_DREQ_[126:0]) can alternatively be sourced through the associated  DMA_CROSSBAR from one of the 256 multiplexed device DMA sources listed in Table 16-6.\par
DMA_SYSTEM \'c0\'d4\'b7\'c2 (DMA_SYSTEM_DREQ_ [126 : 0])\'b4\'c2 \'c7\'a5 16-6\'bf\'a1 \'c7\'a5\'bd\'c3\'b5\'c8 256 \'b0\'b3\'c0\'c7 \'b4\'d9\'c1\'df\'c8\'ad \'c0\'e5\'c4\'a1(\'b8\'d6\'c6\'bc \'c7\'c3\'b7\'ba\'bd\'cc) DMA \'bc\'d2\'bd\'ba \'c1\'df \'c7\'cf\'b3\'aa\'bf\'a1\'bc\'ad \'b0\'fc\'b7\'c3\'b5\'c8 DMA_CROSSBAR\'c0\'bb \'c5\'eb\'c7\'d8 \'c1\'a6\'b0\'f8 \'b9\'de\'c0\'bb \'bc\'f6 \'c0\'d6\'b4\'d9.\par
\par
The  CTRL_CORE_DMA_SYSTEM_DREQ_y_z registers (where y and z are indexes of DMA_SYSTEM input  lines) in the Control Module are used to select between the default DMA sources and the multiplexed  DMA sources.\par
\par
\'c1\'a6\'be\'ee \'b8\'f0\'b5\'e2\'c0\'c7 CTRL_CORE_DMA_SYSTEM_DREQ_y_z \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (\'bf\'a9\'b1\'e2\'bc\'ad y\'bf\'cd z\'b4\'c2 DMA_SYSTEM \'c0\'d4\'b7\'c2 \'b6\'f3\'c0\'ce\'c0\'c7 \'c0\'ce\'b5\'a6\'bd\'ba \'c0\'d3)\'b4\'c2 \'b1\'e2\'ba\'bb DMA \'bc\'d2\'bd\'ba\'bf\'cd \'b4\'d9\'c1\'df\'c8\'ad \'b5\'c8 DMA \'bc\'d2\'bd\'ba\'b8\'a6 \'bc\'b1\'c5\'c3\'c7\'cf\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Table 16-5. DMA_SYSTEM Default Request Mapping Default DMA Source Description\par
\par
Reserved by default but can be remapped to a valid DMA source\par
\'b1\'e2\'ba\'bb\'c0\'fb\'c0\'b8\'b7\'ce \'bf\'b9\'be\'e0\'b5\'c7\'be\'ee \'c0\'d6\'c1\'f6\'b8\'b8 \'c0\'af\'c8\'bf\'c7\'d1 DMA \'bc\'d2\'bd\'ba\'b7\'ce \'b9\'d9\'b2\'dc \'bc\'f6 \'c0\'d6\'c0\'bd\par
\par
system expansion: \'bd\'c3\'bd\'ba\'c5\'db \'c8\'ae\'c0\'e5\par
\par
GPMC data transmit request from prefetch engine\par
\'c7\'c1\'b8\'ae \'c6\'e4\'c4\'a1 \'bf\'a3\'c1\'f8\'bf\'a1\'bc\'ad GPMC \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\par
\par
16.1.3.2 Mapping of DMA Requests to DMA_CROSSBAR Inputs\par
16.1.3.2 DMA_CROSSBAR \'c0\'d4\'b7\'c2\'bf\'a1 \'b4\'eb\'c7\'d1 DMA \'bf\'e4\'c3\'bb\'c0\'c7 \'b8\'c5\'c7\'ce\par
\par
NOTE: For information about the DMA_CROSSBAR module, refer to Section 18.4.6.5,\par
DMA_CROSSBAR Module Functional Description in Chapter 18, Control Module.\par
\'c2\'fc\'b0\'ed : DMA_CROSSBAR \'b8\'f0\'b5\'e2\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 18.4.6.5 \'c0\'fd, 18 \'c0\'e5, \'c1\'a6\'be\'ee \'b8\'f0\'b5\'e2\'c0\'c7 DMA_CROSSBAR \'b8\'f0\'b5\'e2 \'b1\'e2\'b4\'c9 \'bc\'b3\'b8\'ed\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
Table 16-6 shows the mapping of device DMA requests to DMA_CROSSBAR inputs.\par
\'c7\'a5 16-6\'bf\'a1\'bc\'ad\'b4\'c2 DMA_CROSSBAR \'c0\'d4\'b7\'c2\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'e5\'c4\'a1 DMA \'bf\'e4\'c3\'bb \'b8\'c5\'c7\'ce\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
Description\par
\par
Table 16-6. Connection of The Device DREQs to The DMA_CROSSBAR Inputs\par
\'c7\'a5 16-6. DMA_CROSSBAR \'c0\'d4\'b7\'c2\'bf\'a1 \'c0\'e5\'c4\'a1 DREQ \'bf\'ac\'b0\'e1\par
\par
External DMA request 0 (system expansion) - coming from SOC\par
IOs.\par
\'bf\'dc\'ba\'ce DMA \'bf\'e4\'c3\'bb 0 (\'bd\'c3\'bd\'ba\'c5\'db \'c8\'ae\'c0\'e5) - SOC IO\'bf\'a1\'bc\'ad\'bf\'c9\'b4\'cf\'b4\'d9.\par
Level sensitive only: \'b7\'b9\'ba\'a7 \'b9\'ce\'b0\'a8\'b5\'b5\'b8\'b8?\par
\par
The line trigger signal to synchronize a memory to memory  logical channel in the DMA4 (system DMA) is generated by the  Display Controller IP.\par
DMA4 (\'bd\'c3\'bd\'ba\'c5\'db DMA)\'c0\'c7 \'b8\'de\'b8\'f0\'b8\'ae \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'bf\'a1 \'b8\'de\'b8\'f0\'b8\'ae\'b8\'a6 \'b5\'bf\'b1\'e2\'c8\'ad\'c7\'cf\'b4\'c2 \'b6\'f3\'c0\'ce \'c6\'ae\'b8\'ae\'b0\'c5 \'bd\'c5\'c8\'a3\'b4\'c2 \'b5\'f0\'bd\'ba\'c7\'c3\'b7\'b9\'c0\'cc \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af IP\'bf\'a1 \'c0\'c7\'c7\'d8 \'bb\'fd\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
DMA request coming from CT_TBR in DEBUGSS (used to be  External DMA request 2 - coming from SOC IOs)\par
DEBUGSS\'c0\'c7 CT_TBR\'bf\'a1\'bc\'ad \'b3\'aa\'bf\'c0\'b4\'c2 DMA \'bf\'e4\'c3\'bb (\'bf\'dc\'ba\'ce DMA \'bf\'e4\'c3\'bb 2 \'bf\'b4\'c0\'bd - SOC IO\'bf\'a1\'bc\'ad \'c1\'a6\'b0\'f8\'b5\'ca)\par
\par
16.1.4 DMA_SYSTEM Functional Description\par
16.1.4 DMA_SYSTEM \'b1\'e2\'b4\'c9 \'bc\'b3\'b8\'ed\par
\par
The DMA_SYSTEM module provides high-performance data transfers between memories and peripheral devices with low processor use.\par
DMA_SYSTEM \'b8\'f0\'b5\'e2\'c0\'ba \'b3\'b7\'c0\'ba \'c7\'c1\'b7\'ce\'bc\'bc\'bc\'ad \'bb\'e7\'bf\'eb\'c0\'b8\'b7\'ce \'b8\'de\'b8\'f0\'b8\'ae\'bf\'cd \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'b0\'a3\'bf\'a1 \'b0\'ed\'bc\'ba\'b4\'c9 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'bc\'db\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
A DMA transfer is programmed through a logical DMA channel, which allows the transfer to be optimally tailored to the requirements of the application.\par
DMA \'c0\'fc\'bc\'db\'c0\'ba \'b3\'ed\'b8\'ae\'c0\'fb DMA \'c3\'a4\'b3\'ce\'c0\'bb \'c5\'eb\'c7\'d8 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'b5\'c7\'b9\'c7\'b7\'ce \'be\'d6\'c7\'c3\'b8\'ae\'c4\'c9\'c0\'cc\'bc\'c7\'c0\'c7 \'bf\'e4\'b1\'b8 \'bb\'e7\'c7\'d7\'bf\'a1 \'b8\'c2\'b0\'d4 \'c0\'fc\'bc\'db\'c0\'bb \'c3\'d6\'c0\'fb\'c0\'b8\'b7\'ce \'c1\'b6\'c1\'a4\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Figure 16-5 shows the DMA_SYSTEM controller top-level block diagram.\par
\'b1\'d7\'b8\'b2 16-5\'b4\'c2 DMA_SYSTEM \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 \'c3\'d6\'bb\'f3\'c0\'a7 \'ba\'ed\'b7\'cf \'b4\'d9\'c0\'cc\'be\'ee\'b1\'d7\'b7\'a5\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
16.1.4.1 DMA_SYSTEM Controller Power Management\par
16.1.4.1 DMA_SYSTEM \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'c0\'fc\'bf\'f8 \'b0\'fc\'b8\'ae\par
\par
Table 16-7 describes power-management features available for the DMA_SYSTEM controller.\par
\'c7\'a5 16-7\'bf\'a1\'bc\'ad\'b4\'c2 DMA_SYSTEM \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6\'c0\'d6\'b4\'c2 \'c0\'fc\'bf\'f8 \'b0\'fc\'b8\'ae \'b1\'e2\'b4\'c9\'bf\'a1 \'b4\'eb\'c7\'d8 \'bc\'b3\'b8\'ed\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
NOTE:\par
\bullet  For information about source clock gating and sleep/wake-up transitions, see secton Section 3.1.1.1 Clock Management, in Chapter 3, Power, Reset, and Clock Management.\par
\'b3\'eb\'c6\'ae:\par
\bullet  \'bc\'d2\'bd\'ba \'c5\'ac\'b7\'cf \'b0\'d4\'c0\'cc\'c6\'c3 \'b9\'d7 \'bd\'bd\'b8\'b3 / \'bf\'fe\'c0\'cc\'c5\'a9 \'be\'f7 \'c0\'fc\'c8\'af\'bf\'a1 \'b4\'eb\'c7\'d1 \'c1\'a4\'ba\'b8\'b4\'c2 \'bc\'bd\'bc\'c7 3, \'c0\'fc\'b7\'c2, \'b8\'ae\'bc\'c2 \'b9\'d7 \'c5\'ac\'b7\'cf \'b0\'fc\'b8\'ae\'c0\'c7 \'bc\'bd\'bc\'c7 3.1.1.1 \'c5\'ac\'b7\'b0 \'b0\'fc\'b8\'ae \'c0\'fd\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
\bullet  For a description of the EnaWakeUp, IdleMode, ClockActivity, and StandbyMode features, see Section 3.1.1.1.2 Module Level Clock Management, in Chapter 3, Power, Reset, and Clock Management\par
\bullet  EnaWakeUp, IdleMode, ClockActivity \'b9\'d7 StandbyMode \'b1\'e2\'b4\'c9\'bf\'a1 \'b4\'eb\'c7\'d1 \'bc\'b3\'b8\'ed\'c0\'ba 3 \'c0\'e5, \'c0\'fc\'bf\'f8, \'c0\'e7\'bc\'b3\'c1\'a4 \'b9\'d7 \'c5\'ac\'b7\'cf \'b0\'fc\'b8\'ae\'c0\'c7 3.1.1.1.2 \'b8\'f0\'b5\'e2 \'bc\'f6\'c1\'d8 \'c5\'ac\'b7\'cf \'b0\'fc\'b8\'ae \'b4\'dc\'bf\'f8\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
CAUTION\par
\par
\'c1\'d6\'c0\'c7\par
\par
Because the PRCM module cannot read CLOCKACTIVITY settings through hardware, software must ensure consistent programming between the SDMA_CLOCKACTIVITY and DMA_SYSTEM clock PRCM control bits.\par
PRCM \'b8\'f0\'b5\'e2\'c0\'ba \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee\'b8\'a6 \'c5\'eb\'c7\'d8 CLOCKACTIVITY \'bc\'b3\'c1\'a4\'c0\'bb \'c0\'d0\'c0\'bb \'bc\'f6 \'be\'f8\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'b4\'c2 SDMA_CLOCKACTIVITY \'b9\'d7 DMA_SYSTEM \'c5\'ac\'b7\'cf PRCM \'c1\'a6\'be\'ee \'ba\'f1\'c6\'ae \'b0\'a3\'c0\'c7 \'c0\'cf\'b0\'fc\'b5\'c8 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c0\'bb \'ba\'b8\'c0\'e5\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
For a description of the ClockActivity feature, see Section 3.1.1.1.2, Module Level Clock Management, in Chapter 3, Power, Reset, and Clock Management.\par
ClockActivity \'b1\'e2\'b4\'c9\'bf\'a1 \'b4\'eb\'c7\'d1 \'bc\'b3\'b8\'ed\'c0\'ba 3 \'c0\'e5, \'c0\'fc\'bf\'f8, \'c0\'e7\'bc\'b3\'c1\'a4 \'b9\'d7 \'c5\'ac\'b7\'b0 \'b0\'fc\'b8\'ae\'c0\'c7 \'bc\'bd\'bc\'c7 3.1.1.1.2, \'b8\'f0\'b5\'e2 \'b7\'b9\'ba\'a7 \'c5\'ac\'b7\'b0 \'b0\'fc\'b8\'ae\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.1.4.2 DMA_SYSTEM Controller Interrupt Requests\par
16.1.4.2 DMA_SYSTEM \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bf\'e4\'c3\'bb\par
\par
DMA4 has four interrupt lines (Lj, where j = 0, 1, 2, 3).\par
DMA4\'bf\'a1\'b4\'c2 4 \'b0\'b3\'c0\'c7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'b6\'f3\'c0\'ce (Lj, \'bf\'a9\'b1\'e2\'bc\'ad j\'b4\'c2 0, 1, 2, 3)\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Each logical channel can request an interrupt over any line.\par
 \'b0\'a2 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'ba \'b8\'f0\'b5\'e7 \'c8\'b8\'bc\'b1\'bf\'a1\'bc\'ad \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'bf\'e4\'c3\'bb\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The attachment of a channel interrupt event to one of these four external lines is programmable.\par
\'c0\'cc 4 \'b0\'b3\'c0\'c7 \'bf\'dc\'c0\'e5 \'b6\'f3\'c0\'ce \'c1\'df \'c7\'cf\'b3\'aa\'bf\'a1 \'c3\'a4\'b3\'ce \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'c3\'b7\'ba\'ce \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Software determines whether it attaches a channel interrupt to a single IRQ line or to multiple IRQ lines.\par
\'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'b4\'c2 \'c3\'a4\'b3\'ce \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'b4\'dc\'c0\'cf IRQ \'b6\'f3\'c0\'ce \'b6\'c7\'b4\'c2 \'bf\'a9\'b7\'af IRQ \'b6\'f3\'c0\'ce\'bf\'a1 \'bf\'ac\'b0\'e1\'c7\'d2\'c1\'f6 \'bf\'a9\'ba\'ce\'b8\'a6 \'b0\'e1\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
There are two different registers per interrupt line:\par
\'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'b6\'f3\'c0\'ce\'b8\'b6\'b4\'d9 \'b5\'ce \'b0\'b3\'c0\'c7 \'bc\'ad\'b7\'ce \'b4\'d9\'b8\'a5 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  The DMA4_IRQSTATUS_Lj CH_31_0_Lj field shows the status of the different sources of interrupt.\par
\bullet  DMA4_IRQSTATUS_Lj CH_31_0_Lj \'c7\'ca\'b5\'e5\'b4\'c2 \'bc\'ad\'b7\'ce \'b4\'d9\'b8\'a5 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bc\'d2\'bd\'ba\'c0\'c7 \'bb\'f3\'c5\'c2\'b8\'a6 \'c7\'a5\'bd\'c3\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
If the DMA4_IRQENABLE_Lj bit is 1, channel i is the source of interrupt in line j.\par
DMA4_IRQENABLE_Lj \'ba\'f1\'c6\'ae\'b0\'a1 1 \'c0\'ce \'b0\'e6\'bf\'ec, \'c3\'a4\'b3\'ce i\'b4\'c2 \'b6\'f3\'c0\'ce j\'c0\'c7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bc\'d2\'bd\'ba\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
In contrast to the DMA4_CSRi registers, the DMA4_IRQSTATUS_Lj registers are updated regardless of the corresponding bits in the DMA4_IRQENABLE_Lj registers.\par
DMA4_CSRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'cd \'b4\'de\'b8\'ae, DMA4_IRQSTATUS_Lj \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 DMA4_IRQENABLE_Lj \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'c7\'d8\'b4\'e7 \'ba\'f1\'c6\'ae\'bf\'cd \'b0\'fc\'b0\'e8\'be\'f8\'c0\'cc \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  The DMA4_IRQENABLE_Lj CH_31_0_Lj_EN field masks/unmasks the channel interrupt.\par
\bullet  DMA4_IRQENABLE_Lj CH_31_0_Lj_EN \'c7\'ca\'b5\'e5\'b4\'c2 \'c3\'a4\'b3\'ce \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'b8\'b6\'bd\'ba\'c5\'a9 / \'b8\'b6\'bd\'ba\'c5\'a9 \'c7\'d8\'c1\'a6\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
If the DMA4_IRQENABLE_Lj bit is set to 0, channel interrupt i of the line j is masked.\par
DMA4_IRQENABLE_Lj \'ba\'f1\'c6\'ae\'b0\'a1 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'c7\'b8\'e9, \'b6\'f3\'c0\'ce j\'c0\'c7 \'c3\'a4\'b3\'ce \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae i\'b4\'c2 \'b8\'b6\'bd\'ba\'c5\'a9\'b5\'c8\'b4\'d9.\par
\par
Each logical channel can generate a number of different interrupt events when enabled (that is, set to 1) in the DMA4_CICRi register.\par
\'b0\'a2 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'ba DMA4_CICRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1\'bc\'ad \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9 (\'c1\'ef, 1\'b7\'ce \'bc\'b3\'c1\'a4 \'b5\'c9 \'b6\'a7) \'bf\'a9\'b7\'af \'b0\'a1\'c1\'f6 \'b4\'d9\'b8\'a5 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Each status bit is updated in the DMA4_CSRi register only when the corresponding enable bit is enabled in the DMA4_CICRi register.\par
\'b0\'a2 \'bb\'f3\'c5\'c2 \'ba\'f1\'c6\'ae\'b4\'c2 \'c7\'d8\'b4\'e7 \'c8\'b0\'bc\'ba\'c8\'ad \'ba\'f1\'c6\'ae\'b0\'a1 DMA4_CICRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1\'bc\'ad \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'b0\'e6\'bf\'ec\'bf\'a1\'b8\'b8 DMA4_CSRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1\'bc\'ad \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
To determine an interrupt source when an interrupt rises on an interrupt line Lj:\par
\'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'b6\'f3\'c0\'ce Lj\'bf\'a1\'bc\'ad \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'bb\'f3\'bd\'c2 \'c7\'d2 \'b6\'a7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bc\'d2\'bd\'ba\'b8\'a6 \'b0\'e1\'c1\'a4\'c7\'cf\'b7\'c1\'b8\'e9 :\par
\par
\bullet  Identify the channel (LCHi) generating the interrupt.\par
\bullet  \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'cf\'b4\'c2 \'c3\'a4\'b3\'ce (LCHi)\'c0\'bb \'bd\'c4\'ba\'b0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Read DMA4_IRQSTATUS_Lj.LCHi (LCH0 to LCH31).\par
DMA4_IRQSTATUS_Lj.LCHi (LCH0 ~ LCH31)\'b8\'a6 \'c0\'d0\'b4\'c2\'b4\'d9.\par
\par
If LCHi = 1, channel i is the originator of the interrupt.\par
LCHi = 1\'c0\'cc\'b8\'e9 \'c3\'a4\'b3\'ce i\'b0\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'c0\'c7 \'b9\'df\'bd\'c5\'c0\'da\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
\bullet  Identify the interrupt event.\par
\bullet  \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'bd\'c4\'ba\'b0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.1.4.2.1 Interrupt Generation\par
16.1.4.2.1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bb\'fd\'bc\'ba\par
\par
The DMA_SYSTEM module has four interrupt request output lines, DMA_SYSTEM_IRQ_0 to DMA_SYSTEM_IRQ_3.\par
DMA_SYSTEM \'b8\'f0\'b5\'e2\'bf\'a1\'b4\'c2 4 \'b0\'b3\'c0\'c7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bf\'e4\'c3\'bb \'c3\'e2\'b7\'c2 \'b6\'f3\'c0\'ce \'c0\'ce DMA_SYSTEM_IRQ_0 ~ DMA_SYSTEM_IRQ_3\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
One or more logical channels can be programmed to generate an interrupt request on any of these lines when any one of the maskable DMA events listed in Table 16-9 occurs.\par
\'c7\'a5 16-9\'bf\'a1 \'b3\'aa\'bf\'ad\'b5\'c8 \'b8\'b6\'bd\'ba\'c5\'a9 \'b0\'a1\'b4\'c9 DMA \'c0\'cc\'ba\'a5\'c6\'ae \'c1\'df \'c7\'cf\'b3\'aa\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'d2 \'b6\'a7 \'c0\'cc\'b7\'af\'c7\'d1 \'b6\'f3\'c0\'ce \'c1\'df \'c7\'cf\'b3\'aa\'bf\'a1\'bc\'ad \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bf\'e4\'c3\'bb\'c0\'bb \'bb\'fd\'bc\'ba\'c7\'cf\'b5\'b5\'b7\'cf \'c7\'cf\'b3\'aa \'c0\'cc\'bb\'f3\'c0\'c7 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'bb \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The logical DMA channels that generate an interrupt on a particular IRQ output are specified through the DMA4_IRQENABLE_Lj register (where j is the IRQ number: 0, 1, 2, or 3).\par
\'c6\'af\'c1\'a4 IRQ \'c3\'e2\'b7\'c2\'bf\'a1\'bc\'ad \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'cf\'b4\'c2 \'b3\'ed\'b8\'ae DMA \'c3\'a4\'b3\'ce\'c0\'ba DMA4_IRQENABLE_Lj \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (\'bf\'a9\'b1\'e2\'bc\'ad j\'b4\'c2 IRQ \'b9\'f8\'c8\'a3 : 0, 1, 2 \'b6\'c7\'b4\'c2 3)\'b8\'a6 \'c5\'eb\'c7\'d8 \'c1\'f6\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The events that generate an interrupt for a particular channel can be configured through the channel DMA4_CICRi register.\par
\'c6\'af\'c1\'a4 \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'cf\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'c3\'a4\'b3\'ce DMA4_CICRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 \'b1\'b8\'bc\'ba \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
When an interrupt is detected, the logical DMA channel generating the event can first be identified by reading the DMA4_IRQSTATUS_Lj register.\par
\'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'b0\'a8\'c1\'f6\'b5\'c7\'b8\'e9 DMA4_IRQSTATUS_Lj \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c0\'d0\'be\'ee \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'cf\'b4\'c2 \'b3\'ed\'b8\'ae DMA \'c3\'a4\'b3\'ce\'c0\'bb \'b8\'d5\'c0\'fa \'bd\'c4\'ba\'b0 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The event causing the interrupt then can be identified by reading the interrupt status via the relevant DMA channel DMA4_CSRi register.\par
\'b1\'d7\'b7\'b1 \'b4\'d9\'c0\'bd \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'c0\'af\'b9\'df\'c7\'cf\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'b0\'fc\'b7\'c3 DMA \'c3\'a4\'b3\'ce DMA4_CSRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bb\'f3\'c5\'c2\'b8\'a6 \'c0\'d0\'c0\'bd\'c0\'b8\'b7\'ce\'bd\'e1 \'bd\'c4\'ba\'b0 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.1.4.3 Logical Channel Transfer Overview\par
16.1.4.3 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db \'b0\'b3\'bf\'e4\par
\par
As Figure 16-5 shows, the DMA_SYSTEM module has one read port and one write port operating independently of one another.\par
 \'b1\'d7\'b8\'b2 16-5\'bf\'a1\'bc\'ad \'ba\'b8\'b5\'ed\'c0\'cc DMA_SYSTEM \'b8\'f0\'b5\'e2\'bf\'a1\'b4\'c2 \'bc\'ad\'b7\'ce \'b5\'b6\'b8\'b3\'c0\'fb\'c0\'b8\'b7\'ce \'c0\'db\'b5\'bf\'c7\'cf\'b4\'c2 \'c7\'cf\'b3\'aa\'c0\'c7 \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae\'bf\'cd \'c7\'cf\'b3\'aa\'c0\'c7 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Buffering is provided between the read and write ports through a FIFO queue memory pool that is shared dynamically between the active logical channels.\par
\'b9\'f6\'c6\'db\'b8\'b5\'c0\'ba \'c8\'b0\'bc\'ba \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'b0\'a3\'bf\'a1 \'b5\'bf\'c0\'fb\'c0\'b8\'b7\'ce \'b0\'f8\'c0\'af\'b5\'c7\'b4\'c2 FIFO \'c5\'a5 \'b8\'de\'b8\'f0\'b8\'ae \'c7\'ae\'c0\'bb \'c5\'eb\'c7\'d8 \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'b0\'a3\'bf\'a1 \'c1\'a6\'b0\'f8\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  Logical channel synchronization A logical channel is described as hardware-synchronized when the DMA transfers are triggered by DMA requests from a hardware device.\par
\bullet  \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'b5\'bf\'b1\'e2\'c8\'ad \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'ba \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'c0\'e5\'c4\'a1\'c0\'c7 DMA \'bf\'e4\'c3\'bb\'bf\'a1 \'c0\'c7\'c7\'d8 DMA \'c0\'fc\'bc\'db\'c0\'cc \'c6\'ae\'b8\'ae\'b0\'c5 \'b5\'c9 \'b6\'a7 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad\'b7\'ce \'bc\'b3\'b8\'ed\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Alternatively, a logical channel is described as nonsynchronized when the DMA transfer is triggered by software.\par
\'b4\'eb\'be\'c8\'c0\'b8\'b7\'ce, \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'ba DMA \'c0\'fc\'bc\'db\'c0\'cc \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'bf\'a1 \'c0\'c7\'c7\'d8 \'c6\'ae\'b8\'ae\'b0\'c5 \'b5\'c9 \'b6\'a7 \'ba\'f1\'b5\'bf\'b1\'e2\'b7\'ce \'b1\'e2\'bc\'fa\'b5\'c8\'b4\'d9.\par
\par
\bullet  Logical channel activation A logical channel becomes active as follows:\par
\bullet  \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c8\'b0\'bc\'ba\'c8\'ad \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'ba \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'cc \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\endash  For hardware-synchronized transfers, when the logical channel is enabled and the hardware DMA request line is asserted\par
- \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'cc \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b0\'ed \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee DMA \'bf\'e4\'c3\'bb \'b6\'f3\'c0\'ce\'c0\'cc \'c7\'a5\'b8\'ed \'b5\'c9 \'b6\'a7\par
\par
\endash  For software-triggered (nonsynchronized) transfers, as soon as software enables the logical channel\par
- \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'b0\'a1 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 \'c1\'ef\'bd\'c3 \'c6\'ae\'b8\'ae\'b0\'c5 (\'ba\'f1\'b5\'bf\'b1\'e2) \'c0\'fc\'bc\'db\par
\par
\bullet  Logical channel transfer composition\par
\bullet  \'b3\'ed\'b8\'ae\'c0\'fb \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db \'b1\'b8\'bc\'ba\par
\par
A DMA transfer is divided automatically into a number of transactions.\par
DMA \'c0\'fc\'bc\'db\'c0\'ba \'bf\'a9\'b7\'af \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'b8\'b7\'ce \'c0\'da\'b5\'bf \'ba\'d0\'c7\'d2\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 Depending on the logical channel context configured, the transfer size, start address alignment, addressing mode, and configured maximum burst size, each transaction can be a single access or a burst of accesses\par
  \'b1\'b8\'bc\'ba\'b5\'c8 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c4\'c1\'c5\'d8\'bd\'ba\'c6\'ae, \'c0\'fc\'bc\'db \'c5\'a9\'b1\'e2, \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2 \'c1\'a4\'b7\'c4, \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5 \'b9\'d7 \'b1\'b8\'bc\'ba\'b5\'c8 \'c3\'d6\'b4\'eb \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2\'bf\'a1 \'b5\'fb\'b6\'f3 \'b0\'a2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'ba \'b4\'dc\'c0\'cf \'be\'d7\'bc\'bc\'bd\'ba \'b6\'c7\'b4\'c2 \'b9\'f6\'bd\'ba\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba\'b0\'a1 \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9\par
\par
\bullet  Logical channel scheduling\par
\bullet  \'b3\'ed\'b8\'ae\'c0\'fb \'c3\'a4\'b3\'ce \'bd\'ba\'c4\'c9\'c1\'d9\'b8\'b5\par
\par
When several logical channels are active at the same time, schedulers manage the read and write ports.\par
\'bf\'a9\'b7\'af \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'cc \'b5\'bf\'bd\'c3\'bf\'a1 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9 \'bd\'ba\'c4\'c9\'c1\'d9\'b7\'af\'b4\'c2 \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'b8\'a6 \'b0\'fc\'b8\'ae\'c7\'d5\'b4\'cf\'b4\'d9\par
\par
The scheduling of logical channel transfers is similar for both read and write ports.\par
\'b3\'ed\'b8\'ae\'c0\'fb \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db\'c0\'c7 \'bd\'ba\'c4\'c9\'c1\'d9\'b8\'b5\'c0\'ba \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'b8\'f0\'b5\'ce\'bf\'a1\'bc\'ad \'ba\'f1\'bd\'c1\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
 When a logical channel becomes active, it is added to the tail of a scheduling queue.\par
\'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'cc \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9 \'bd\'ba\'c4\'c9\'c1\'d9\'b8\'b5 \'c5\'a5\'c0\'c7 \'b3\'a1\'bf\'a1 \'c3\'df\'b0\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 If more than one logical channel becomes active at the same time, the one with the lower number is queued first.\par
\'b5\'d1 \'c0\'cc\'bb\'f3\'c0\'c7 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'cc \'b5\'bf\'bd\'c3\'bf\'a1 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9 \'b3\'b7\'c0\'ba \'b9\'f8\'c8\'a3\'c0\'c7 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'cc \'b8\'d5\'c0\'fa \'b4\'eb\'b1\'e2\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
This mechanism provides a first-come, first-serve scheduling scheme between the concurrently active logical channels.\par
\'c0\'cc \'b8\'de\'c4\'bf\'b4\'cf\'c1\'f2\'c0\'ba \'b5\'bf\'bd\'c3 \'c8\'b0\'bc\'ba \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'b0\'a3\'bf\'a1 \'bc\'b1\'c2\'f8\'bc\'f8 \'bd\'ba\'c4\'c9\'c1\'ec\'b8\'b5 \'b9\'e6\'bd\'c4\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
In addition, each read and write port has a high-priority queue and a low-priority queue.\par
\'b6\'c7\'c7\'d1 \'b0\'a2 \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'bf\'a1\'b4\'c2 \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'b4\'eb\'b1\'e2\'bf\'ad\'b0\'fa \'b3\'b7\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The priority bits (WRITE_PRIORITY and READ_ PRIORITY) in the logical channel DMA4_CCRi register determine whether a logical channel is queued as high or low priority.\par
\'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce DMA4_CCRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'ba\'f1\'c6\'ae (WRITE_PRIORITY \'b9\'d7 READ_PRIORITY)\'b4\'c2 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'cc \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'b6\'c7\'b4\'c2 \'b3\'b7\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b7\'ce \'b4\'eb\'b1\'e2 \'c1\'df\'c0\'ce\'c1\'f6 \'bf\'a9\'ba\'ce\'b8\'a6 \'b0\'e1\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
A software-configurable 8-bit priority counter gives weighting to the priority write queue.\par
\'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'b7\'ce \'b1\'b8\'bc\'ba \'b0\'a1\'b4\'c9\'c7\'d1 8 \'ba\'f1\'c6\'ae \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c4\'ab\'bf\'ee\'c5\'cd\'b4\'c2 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'be\'b2\'b1\'e2 \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'b0\'a1\'c1\'df\'c4\'a1\'b8\'a6 \'ba\'ce\'bf\'a9\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
For every N (1 to 255) schedules from the priority write queue, one is scheduled from the regular write queue.\par
\'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'be\'b2\'b1\'e2 \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'c7 \'b8\'f0\'b5\'e7 N (1 - 255) \'c0\'cf\'c1\'a4\'bf\'a1 \'b4\'eb\'c7\'d8 \'c7\'cf\'b3\'aa\'b4\'c2 \'c0\'cf\'b9\'dd \'be\'b2\'b1\'e2 \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'bf\'b9\'be\'e0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
A channel that is scheduled goes to the end of the queue after it completes its turn on the port.\par
\'bd\'ba\'c4\'c9\'c1\'d9 \'b5\'c8 \'c3\'a4\'b3\'ce\'c0\'ba \'c6\'f7\'c6\'ae\'b8\'a6 \'c4\'d2 \'c8\'c4\'bf\'a1 \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'c7 \'b3\'a1\'c0\'b8\'b7\'ce\'b0\'a9\'b4\'cf\'b4\'d9.\par
\par
The relative weighting of the scheduling of the high-priority queue to the low priority queue is programmable from 1:1 to 1:256 through the DMA global channel register using the DMA4_GCR[23:16] ARBITRATION_RATE bit field.\par
\'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c5\'a5\'c0\'c7 \'bd\'ba\'c4\'c9\'c1\'d9\'b8\'b5\'b0\'fa \'b3\'b7\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c5\'a5\'c0\'c7 \'bb\'f3\'b4\'eb\'c0\'fb \'b0\'a1\'c1\'df\'c4\'a1\'b4\'c2 DMA4_GCR [23:16] ARBITRATION_RATE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 DMA \'b1\'db\'b7\'ce\'b9\'fa \'c3\'a4\'b3\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 1 : 1\'bf\'a1\'bc\'ad 1 : 256\'b1\'ee\'c1\'f6 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
NOTE: The DMA4_GCR[23:16] ARBITRATION_RATE bit field does not depend on the DMA4_GCR[13:12] HI_THREAD_RESERVED bit field.\par
\'c2\'fc\'b0\'ed : DMA4_GCR [23:16] ARBITRATION_RATE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b4\'c2 DMA4_GCR [13:12] HI_THREAD_RESERVED \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c1\'be\'bc\'d3\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The ARBITRATION_RATE bit field depends on the DMA4_CCRi[26] WRITE_PRIORITY bit and the DMA4_CCRi[6] READ_PRIORITY bit.\par
ARBITRATION_RATE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b4\'c2 DMA4_CCRi [26] WRITE_PRIORITY \'ba\'f1\'c6\'ae\'bf\'cd DMA4_CCRi [6] READ_PRIORITY \'ba\'f1\'c6\'ae\'bf\'a1 \'c0\'c7\'c1\'b8\'c7\'d1\'b4\'d9.\par
\par
\bullet  Read/write port access scheduling policy\par
\'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba \'bd\'ba\'c4\'c9\'c1\'d9\'b8\'b5 \'c1\'a4\'c3\'a5\par
\par
When either the read or write port becomes available, the port access scheduler selects the next logical channel for which to perform a DMA transaction from either the high- or low-priority queue.\par
\'c0\'d0\'b1\'e2 \'b6\'c7\'b4\'c2 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'b0\'a1 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9 \'c7\'d8\'c1\'f6\'b8\'e9 \'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba \'bd\'ba\'c4\'c9\'c1\'d9\'b7\'af\'b4\'c2 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c5\'a5 \'b6\'c7\'b4\'c2 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'b7\'c0\'ba \'c5\'a5\'bf\'a1\'bc\'ad DMA \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'bb \'bc\'f6\'c7\'e0 \'c7\'d2 \'b4\'d9\'c0\'bd \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'bb \'bc\'b1\'c5\'c3\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
When the current DMA transaction (single or burst access) is complete and the full DMA transfer is not finished, the logical channel returns to the tail of the queue.\par
\'c7\'f6\'c0\'e7 DMA \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7 (\'b4\'dc\'c0\'cf \'b6\'c7\'b4\'c2 \'b9\'f6\'bd\'ba\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba)\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'b0\'ed \'c0\'fc\'c3\'bc DMA \'c0\'fc\'bc\'db\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'cc \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'c7 \'b2\'bf\'b8\'ae\'b7\'ce \'b5\'c7\'b5\'b9\'be\'c6\'b0\'a9\'b4\'cf\'b4\'d9.\par
\par
Because the port access scheduling is on a per-transaction basis, a logical channel can be queued repeatedly this way several times during its block transfer.\par
\'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba \'bd\'ba\'c4\'c9\'c1\'d9\'b8\'b5\'c0\'ba \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7 \'b4\'dc\'c0\'a7\'b7\'ce \'bc\'f6\'c7\'e0\'b5\'c7\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'b3\'ed\'b8\'ae\'c0\'fb \'c3\'a4\'b3\'ce\'c0\'ba \'ba\'ed\'b7\'cf \'c0\'fc\'bc\'db \'c1\'df\'bf\'a1 \'bf\'a9\'b7\'af \'b9\'f8 \'c0\'cc\'b7\'af\'c7\'d1 \'b9\'e6\'bd\'c4\'c0\'b8\'b7\'ce \'b9\'dd\'ba\'b9\'c0\'fb\'c0\'b8\'b7\'ce \'c5\'a5\'bf\'a1 \'b4\'eb\'b1\'e2 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The DMA_SYSTEM module can have up to four outstanding read transactions and two outstanding write transactions in the system interconnect;\par
DMA_SYSTEM \'b8\'f0\'b5\'e2\'c0\'ba \'bd\'c3\'bd\'ba\'c5\'db \'bb\'f3\'c8\'a3 \'bf\'ac\'b0\'e1\'bf\'a1\'bc\'ad \'c3\'d6\'b4\'eb 4 \'b0\'b3\'c0\'c7 \'b9\'cc\'c7\'d8\'b0\'e1 \'c0\'d0\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'b0\'fa 2 \'b0\'b3\'c0\'c7 \'b9\'cc\'c7\'d8\'b0\'e1 \'be\'b2\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'bb \'b0\'a1\'c1\'fa \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
four read and two write thread IDs exist.\par
4 \'b0\'b3\'c0\'c7 \'c0\'d0\'b1\'e2 \'bd\'ba\'b7\'b9\'b5\'e5 ID\'bf\'cd 2 \'b0\'b3\'c0\'c7 \'be\'b2\'b1\'e2 \'bd\'ba\'b7\'b9\'b5\'e5 ID\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
For an arbitration cycle to occur, these two conditions must be met:\par
\'c1\'df\'c0\'e7 \'bb\'e7\'c0\'cc\'c5\'ac \'c0\'cc\'b9\'df\'bb\'fd\'c7\'cf\'b7\'c1\'b8\'e9 \'b4\'d9\'c0\'bd \'b5\'ce \'c1\'b6\'b0\'c7\'c0\'cc \'c3\'e6\'c1\'b7\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  At least one channel is requesting\par
\'c0\'fb\'be\'ee\'b5\'b5 \'c7\'cf\'b3\'aa\'c0\'c7 \'c3\'a4\'b3\'ce\'c0\'cc \'bf\'e4\'c3\'bb \'c1\'df\'c0\'cc\'bf\'a9\'be\'df \'c7\'d1\'b4\'d9.\par
\par
\bullet  At least one free thread ID is available\par
\'c0\'fb\'be\'ee\'b5\'b5 \'c7\'cf\'b3\'aa\'c0\'c7 \'b9\'ab\'b7\'e1 \'bd\'ba\'b7\'b9\'b5\'e5 ID\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'be\'ee\'be\'df \'c7\'d1\'b4\'d9.\par
\par
On an arbitration cycle, the scheduler grants the highest priority channel that has an active request, allocates the thread ID, and tags this thread as busy.\par
\'c1\'df\'c0\'e7 \'bb\'e7\'c0\'cc\'c5\'ac\'bf\'a1\'bc\'ad \'bd\'ba\'c4\'c9\'c1\'d9\'b7\'af\'b4\'c2 \'c8\'b0\'bc\'ba \'bf\'e4\'c3\'bb\'c0\'cc\'c0\'d6\'b4\'c2 \'b0\'a1\'c0\'e5 \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c3\'a4\'b3\'ce\'c0\'bb \'ba\'ce\'bf\'a9\'c7\'cf\'b0\'ed \'bd\'ba\'b7\'b9\'b5\'e5 ID\'b8\'a6 \'c7\'d2\'b4\'e7\'c7\'cf\'b8\'e7\'c0\'cc \'bd\'ba\'b7\'b9\'b5\'e5\'bf\'a1 \'c5\'eb\'c8\'ad \'c1\'df\'c0\'b8\'b7\'ce \'c5\'c2\'b1\'d7\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
At a given time, a channel cannot be allocated for more than one thread ID.\par
\'c1\'d6\'be\'ee\'c1\'f8 \'bd\'c3\'b0\'a3\'bf\'a1 \'c7\'cf\'b3\'aa \'c0\'cc\'bb\'f3\'c0\'c7 \'bd\'ba\'b7\'b9\'b5\'e5 ID\'bf\'a1 \'c3\'a4\'b3\'ce\'c0\'bb \'c7\'d2\'b4\'e7 \'c7\'d2 \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
NOTE: If more than one channel is active, each channel is given a thread ID for the current service only, not for the whole channel transfer.\par
\'c2\'fc\'b0\'ed : \'b5\'d1 \'c0\'cc\'bb\'f3\'c0\'c7 \'c3\'a4\'b3\'ce\'c0\'cc \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'be\'ee\'c0\'d6\'b4\'c2 \'b0\'e6\'bf\'ec, \'b0\'a2 \'c3\'a4\'b3\'ce\'bf\'a1\'b4\'c2 \'c0\'fc\'c3\'bc \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db\'c0\'cc \'be\'c6\'b4\'d1 \'c7\'f6\'c0\'e7 \'bc\'ad\'ba\'f1\'bd\'ba\'bf\'a1 \'b4\'eb\'c7\'d1 \'bd\'ba\'b7\'b9\'b5\'e5 ID \'b8\'b8 \'c1\'a6\'b0\'f8\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
When only one channel is enabled, only one thread is allocated for the channel.\par
\'c7\'cf\'b3\'aa\'c0\'c7 \'c3\'a4\'b3\'ce \'b8\'b8 \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'b0\'e6\'bf\'ec \'c7\'d8\'b4\'e7 \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d8 \'c7\'cf\'b3\'aa\'c0\'c7 \'bd\'ba\'b7\'b9\'b5\'e5 \'b8\'b8 \'c7\'d2\'b4\'e7\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
In such a situation the channel can have maximum of four outstanding commands (without getting the responses) without rescheduling the channel at the end of each transaction.\par
\'c0\'cc\'b7\'af\'c7\'d1 \'bb\'f3\'c8\'b2\'bf\'a1\'bc\'ad \'c3\'a4\'b3\'ce\'c0\'ba \'b0\'a2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc \'b3\'a1\'b3\'af \'b6\'a7 \'c3\'a4\'b3\'ce\'c0\'bb \'b4\'d9\'bd\'c3 \'bd\'ba\'c4\'c9\'c1\'d9\'c7\'cf\'c1\'f6 \'be\'ca\'b0\'ed \'c0\'c0\'b4\'e4\'c0\'bb \'be\'f2\'c1\'f6 \'be\'ca\'b0\'ed \'c3\'d6\'b4\'eb 4 \'b0\'b3\'c0\'c7 \'b9\'cc\'c7\'d8\'b0\'e1 \'b8\'ed\'b7\'c9\'c0\'bb \'b0\'a1\'c1\'fa \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Each command can be either single access (8-bit, 16-bit or 32-bit) or burst access (2 \'a1\'bf M, 4 \'a1\'bf M, 8 \'a1\'bf M or 16 \'a1\'bf M, where M can be 8, 16, or 32 bits).\par
\'b0\'a2 \'b8\'ed\'b7\'c9\'c0\'ba \'b4\'dc\'c0\'cf \'be\'d7\'bc\'bc\'bd\'ba (8 \'ba\'f1\'c6\'ae, 16 \'ba\'f1\'c6\'ae \'b6\'c7\'b4\'c2 32 \'ba\'f1\'c6\'ae) \'b6\'c7\'b4\'c2 \'b9\'f6\'bd\'ba\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba (2 \'a1\'bf M, 4 \'a1\'bf M, 8 \'a1\'bf M \'b6\'c7\'b4\'c2 16 \'a1\'bf M, M\'c0\'ba 8, 16 \'b6\'c7\'b4\'c2 32 \'ba\'f1\'c6\'ae\'b0\'a1 \'b5\'c9 \'bc\'f6 \'c0\'d6\'c0\'bd) .\par
\par
When nonburst alignment is at the beginning of the transfer, the channel is rescheduled for each smaller access until burst-aligned.\par
\'ba\'f1 \'b9\'f6\'bd\'ba\'c6\'ae \'c1\'a4\'b7\'c4\'c0\'cc \'c0\'fc\'bc\'db \'bd\'c3\'c0\'db\'bf\'a1\'c0\'d6\'c0\'bb \'b6\'a7 \'c3\'a4\'b3\'ce\'c0\'ba \'b9\'f6\'bd\'ba\'c6\'ae \'c1\'a4\'b7\'c4 \'b5\'c9 \'b6\'a7\'b1\'ee\'c1\'f6 \'c0\'db\'c0\'ba \'be\'d7\'bc\'bc\'bd\'ba\'b8\'b6\'b4\'d9 \'b4\'d9\'bd\'c3 \'bd\'ba\'c4\'c9\'c1\'d9\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
When the end of the transfer is not burst-aligned, the channel is rescheduled for each of the remaining smaller accesses.\par
\'c0\'fc\'bc\'db\'c0\'c7 \'b3\'a1\'c0\'cc \'b9\'f6\'bd\'ba\'c6\'ae \'c1\'a4\'b7\'c4\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 \'b3\'aa\'b8\'d3\'c1\'f6 \'c0\'db\'c0\'ba \'be\'d7\'bc\'bc\'bd\'ba \'b0\'a2\'b0\'a2\'bf\'a1 \'b4\'eb\'c7\'d8 \'c3\'a4\'b3\'ce\'c0\'cc \'b4\'d9\'bd\'c3 \'bf\'b9\'be\'e0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
For a logical channel transfer completion, when the last access is written to the destination, the logical channel becomes inactive.\par
\'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1\'c0\'c7 \'b0\'e6\'bf\'ec \'b8\'b6\'c1\'f6\'b8\'b7 \'be\'d7\'bc\'bc\'bd\'ba\'b0\'a1 \'b4\'eb\'bb\'f3\'bf\'a1 \'b1\'e2\'b7\'cf \'b5\'c9 \'b6\'a7 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'ba \'ba\'f1\'c8\'b0\'bc\'ba \'bb\'f3\'c5\'c2\'b0\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
If enabled, an interrupt request is generated (see Section 16.1.4.2.1, Interrupt Generation).\par
\'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bf\'e4\'c3\'bb\'c0\'cc \'bb\'fd\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9 (16.1.4.2.1 \'c0\'fd, \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bb\'fd\'bc\'ba \'c2\'fc\'c1\'b6).\par
\par
16.1.4.4 FIFO Queue Memory Pool\par
\par
16.1.4.4 FIFO \'c5\'a5 \'b8\'de\'b8\'f0\'b8\'ae \'c7\'ae\par
\par
A FIFO queue memory pool provides buffering between the read and write ports.\par
FIFO \'c5\'a5 \'b8\'de\'b8\'f0\'b8\'ae \'c7\'ae\'c0\'ba \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'b0\'a3\'bf\'a1 \'b9\'f6\'c6\'db\'b8\'b5\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9\par
\par
The hardware allocates the space dynamically to a number of FIFO queues, and each queue is associated with an active logical channel.\par
\'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee\'b4\'c2 \'b0\'f8\'b0\'a3\'c0\'bb \'b4\'d9\'bc\'f6\'c0\'c7 FIFO \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'b5\'bf\'c0\'fb\'c0\'b8\'b7\'ce \'c7\'d2\'b4\'e7\'c7\'cf\'b0\'ed, \'b0\'a2 \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'ba \'c8\'b0\'bc\'ba \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
To avoid a memory pool overflow, if there are fewer entries in the FIFO queue memory pool than are required for the maximum configured source burst size of the next logical channel to be scheduled, the logical channel is returned to the tail of the queue, and the port access scheduler continues to search the queue until it finds a logical channel that can be scheduled.\par
\'b8\'de\'b8\'f0\'b8\'ae \'c7\'ae \'bf\'c0\'b9\'f6 \'c7\'c3\'b7\'ce\'bf\'ec\'b8\'a6 \'c7\'c7\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8, \'bd\'ba\'c4\'c9\'c1\'d9\'b8\'b5 \'b5\'c9 \'b4\'d9\'c0\'bd \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'c7 \'c3\'d6\'b4\'eb \'b1\'b8\'bc\'ba\'b5\'c8 \'bc\'d2\'bd\'ba \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2\'ba\'b8\'b4\'d9 FIFO \'c5\'a5 \'b8\'de\'b8\'f0\'b8\'ae \'c7\'ae\'bf\'a1 \'b4\'f5 \'c0\'fb\'c0\'ba \'bf\'a3\'c6\'ae\'b8\'ae\'b0\'a1\'c0\'d6\'b4\'c2 \'b0\'e6\'bf\'ec, \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'ba \'c5\'a5\'c0\'c7 \'b3\'a1\'b1\'ee\'c1\'f6 \'b8\'ae\'c5\'cf\'b5\'c7\'b0\'ed, \'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba \'bd\'ba\'c4\'c9\'c1\'d9\'b7\'af\'b4\'c2 \'bd\'ba\'c4\'c9\'c1\'d9 \'b5\'c9 \'bc\'f6\'c0\'d6\'b4\'c2 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'bb \'c3\'a3\'c0\'bb \'b6\'a7\'b1\'ee\'c1\'f6 \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'bb \'b0\'e8\'bc\'d3 \'b0\'cb\'bb\'f6\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The maximum FIFO depth that can be allocated to each individual logical channel can be limited globally through the DMA4_GCR[7:0] MAX_CHANNEL_FIFO_DEPTH bit field.\par
\'b0\'a2 \'b0\'b3\'ba\'b0 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'bf\'a1 \'c7\'d2\'b4\'e7 \'c7\'d2 \'bc\'f6\'c0\'d6\'b4\'c2 \'c3\'d6\'b4\'eb FIFO \'b1\'ed\'c0\'cc\'b4\'c2 DMA4_GCR [7 : 0] MAX_CHANNEL_FIFO_DEPTH \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b8\'a6 \'c5\'eb\'c7\'d8 \'c0\'fc\'c3\'bc\'c0\'fb\'c0\'b8\'b7\'ce \'c1\'a6\'c7\'d1 \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
This value should be configured to allow a fair allocation of the memory pool between the active channels.\par
\'c0\'cc \'b0\'aa\'c0\'ba \'c8\'b0\'bc\'ba \'c3\'a4\'b3\'ce\'b0\'a3\'bf\'a1 \'b8\'de\'b8\'f0\'b8\'ae \'c7\'ae\'c0\'c7 \'b0\'f8\'c1\'a4\'c7\'d1 \'c7\'d2\'b4\'e7\'c0\'bb \'c7\'e3\'bf\'eb\'c7\'cf\'b5\'b5\'b7\'cf \'b1\'b8\'bc\'ba\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
A logical channel is scheduled if it has not yet reached its allocation limit, even if the access to be performed will exceed this limit.\par
 \'b3\'ed\'b8\'ae\'c0\'fb \'c3\'a4\'b3\'ce\'c0\'ba \'bc\'f6\'c7\'e0 \'c7\'d2 \'be\'d7\'bc\'bc\'bd\'ba\'b0\'a1\'c0\'cc \'c1\'a6\'c7\'d1\'c0\'bb \'c3\'ca\'b0\'fa\'c7\'cf\'b4\'f5\'b6\'f3\'b5\'b5 \'c7\'d2\'b4\'e7 \'c1\'a6\'c7\'d1\'bf\'a1 \'be\'c6\'c1\'f7 \'b5\'b5\'b4\'de\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'ba \'b0\'e6\'bf\'ec \'bf\'b9\'be\'e0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
This means that the effective number of entries used by a particular logical channel is limited to the configured maximum entries per channel + channel maximum configured burst size (in words) 1.\par
\'c1\'ef, \'c6\'af\'c1\'a4 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 \'c0\'af\'c8\'bf \'c7\'d7\'b8\'f1 \'bc\'f6\'b4\'c2 \'c3\'a4\'b3\'ce\'b4\'e7 \'b1\'b8\'bc\'ba\'b5\'c8 \'c3\'d6\'b4\'eb \'c7\'d7\'b8\'f1 \'bc\'f6 + \'c3\'a4\'b3\'ce \'c3\'d6\'b4\'eb \'b1\'b8\'bc\'ba \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2 (\'b4\'dc\'be\'ee \'bc\'f6) 1\'b7\'ce \'c1\'a6\'c7\'d1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.1.4.5 Addressing Modes\par
16.1.4.5 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5\par
\par
A DMA transfer block consists of a number of frames (FN).\par
DMA \'c0\'fc\'bc\'db \'ba\'ed\'b7\'cf\'c0\'ba \'bf\'a9\'b7\'af \'c7\'c1\'b7\'b9\'c0\'d3 (FN)\'c0\'b8\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Each frame consists of a number of elements (EN), and each element can have a size of 8, 16, or 32 bits (ES), as follows:\par
\'b0\'a2 \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'ba \'bf\'a9\'b7\'af \'bf\'e4\'bc\'d2 (EN)\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'c7\'b8\'e7 \'b0\'a2 \'bf\'e4\'bc\'d2\'b4\'c2 \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'cc 8, 16 \'b6\'c7\'b4\'c2 32 \'ba\'f1\'c6\'ae (ES)\'c0\'c7 \'c5\'a9\'b1\'e2\'b8\'a6 \'b0\'a1\'c1\'fa \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
transfer block size = FN \'a1\'bf EN \'a1\'bf ES\par
\'c0\'fc\'bc\'db \'ba\'ed\'b7\'cf \'bb\'e7\'c0\'cc\'c1\'ee = FN \'a1\'bf EN \'a1\'bf ES\par
\par
The FN, EN, and ES are common for the source and destination.\par
FN, EN \'b9\'d7 ES\'b4\'c2 \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3\'bf\'a1 \'b0\'f8\'c5\'eb\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
However, the way in which the data is represented (addressing profile/mode) is independently programmable for the source and destination devices, using one of these four addressing modes:\par
\'b1\'d7\'b7\'af\'b3\'aa \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c7\'a5\'c7\'f6\'b5\'c7\'b4\'c2 \'b9\'e6\'bd\'c4 (\'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'c7\'c1\'b7\'ce\'c6\'c4\'c0\'cf / \'b8\'f0\'b5\'e5)\'c0\'ba \'b4\'d9\'c0\'bd \'b3\'d7 \'b0\'a1\'c1\'f6 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5 \'c1\'df \'c7\'cf\'b3\'aa\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3 \'c0\'e5\'c4\'a1\'bf\'a1 \'b4\'eb\'c7\'d8 \'b5\'b6\'b8\'b3\'c0\'fb\'c0\'b8\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  Constant: The address remains the same for consecutive element accesses.\par
\bullet  \'bb\'f3\'bc\'f6 : \'c1\'d6\'bc\'d2\'b4\'c2 \'bf\'ac\'bc\'d3 \'bf\'e4\'bc\'d2 \'be\'d7\'bc\'bc\'bd\'ba\'bf\'a1 \'b4\'eb\'c7\'d8 \'b5\'bf\'c0\'cf\'c7\'cf\'b0\'d4 \'c0\'af\'c1\'f6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  Post-increment: The address increases by the ES, even across consecutive frames.\par
\bullet  \'bb\'e7\'c8\'c4 \'c1\'f5\'b0\'a1 (Post-increment) : \'bf\'ac\'bc\'d3\'c0\'fb\'c0\'ce \'c7\'c1\'b7\'b9\'c0\'d3\'bf\'a1\'bc\'ad\'b5\'b5 ES\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'d6\'bc\'d2\'b0\'a1 \'c1\'f5\'b0\'a1\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Single-index: The address increases by the ES plus the element index (EI) value minus 1 (even across consecutive frames).\par
\bullet  \'b4\'dc\'c0\'cf \'c0\'ce\'b5\'a6\'bd\'ba : \'c1\'d6\'bc\'d2\'b0\'a1 ES\'bf\'a1 \'b4\'f5\'c7\'d8 \'bf\'e4\'bc\'d2 \'c0\'ce\'b5\'a6\'bd\'ba (EI) \'b0\'aa\'bf\'a1\'bc\'ad 1\'c0\'bb \'bb\'ab \'b0\'aa (\'bf\'ac\'bc\'d3 \'c7\'c1\'b7\'b9\'c0\'d3\'bf\'a1\'bc\'ad\'b5\'b5)\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
\bullet  Double-index: The address increases by the ES plus the EI value minus 1 within a frame.\par
When a full frame is transferred, the address increases by the ES plus the frame index (FI) value minus 1.\par
\bullet  \'c0\'cc\'c1\'df \'c0\'ce\'b5\'a6\'bd\'ba : ES \'c7\'c1\'b7\'b9\'c0\'d3\'bf\'a1\'bc\'ad EI \'b0\'aa 1\'c0\'bb \'bb\'ab \'c1\'d6\'bc\'d2\'b0\'a1 \'c1\'f5\'b0\'a1\'c7\'d5\'b4\'cf\'b4\'d9.\par
\'c0\'fc\'c3\'bc \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'cc \'c0\'fc\'bc\'db\'b5\'c7\'b8\'e9 ES + \'c7\'c1\'b7\'b9\'c0\'d3 \'c0\'ce\'b5\'a6\'bd\'ba (FI) \'b0\'aa\'bf\'a1\'bc\'ad 1\'c0\'bb \'bb\'ab \'c1\'d6\'bc\'d2\'b0\'a1 \'c1\'f5\'b0\'a1\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The ES, EI, and FI values are expressed in bytes.\par
ES, EI \'b9\'d7 FI \'b0\'aa\'c0\'ba \'b9\'d9\'c0\'cc\'c6\'ae\'b7\'ce \'c7\'a5\'bd\'c3\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The EI and FI values can be positive or negative.\par
EI \'b9\'d7 FI \'b0\'aa\'c0\'ba \'be\'e7\'bc\'f6 \'b6\'c7\'b4\'c2 \'c0\'bd\'bc\'f6 \'c0\'cf \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
When calculating the EI and FI values, it is critical to note that, after an element is accessed, the logical channel address pointer equals the address of the last byte (highest address) of the accessed element.\par
EI \'b9\'d7 FI \'b0\'aa\'c0\'bb \'b0\'e8\'bb\'ea\'c7\'d2 \'b6\'a7 \'bf\'e4\'bc\'d2\'bf\'a1 \'be\'d7\'bc\'bc\'bd\'ba \'c7\'d1 \'c8\'c4 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c1\'d6\'bc\'d2 \'c6\'f7\'c0\'ce\'c5\'cd\'b0\'a1 \'be\'d7\'bc\'bc\'bd\'ba \'b5\'c8 \'bf\'e4\'bc\'d2\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'b9\'d9\'c0\'cc\'c6\'ae (\'c3\'d6\'bb\'f3\'c0\'a7 \'c1\'d6\'bc\'d2)\'c0\'c7 \'c1\'d6\'bc\'d2\'bf\'cd \'b0\'b0\'be\'c6\'be\'df\'c7\'d1\'b4\'d9\'b4\'c2 \'c1\'a1\'bf\'a1 \'c0\'af\'c0\'c7\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The correct value for the EI or FI must be such that, when added to the logical channel address pointer, it results in the address of the first byte (lowest address) of the next element to be accessed.\par
EI \'b6\'c7\'b4\'c2 FI\'bf\'a1 \'b4\'eb\'c7\'d1 \'bf\'c3\'b9\'d9\'b8\'a5 \'b0\'aa\'c0\'ba \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c1\'d6\'bc\'d2 \'c6\'f7\'c0\'ce\'c5\'cd\'bf\'a1 \'c3\'df\'b0\'a1 \'b5\'c9 \'b6\'a7 \'be\'d7\'bc\'bc\'bd\'ba \'b5\'c9 \'b4\'d9\'c0\'bd \'bf\'e4\'bc\'d2\'c0\'c7 \'c3\'b9 \'b9\'f8\'c2\'b0 \'b9\'d9\'c0\'cc\'c6\'ae (\'c3\'d6\'c7\'cf\'c0\'a7 \'c1\'d6\'bc\'d2)\'c0\'c7 \'c1\'d6\'bc\'d2\'b0\'a1\'b5\'c7\'b5\'b5\'b7\'cf\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The EI and FI values must be configured so that the address of each element in the transfer is aligned on an ES boundary.\par
\'c0\'fc\'bc\'db\'c0\'c7 \'b0\'a2 \'bf\'e4\'bc\'d2\'c0\'c7 \'c1\'d6\'bc\'d2\'b0\'a1 ES \'b0\'e6\'b0\'e8\'bf\'a1 \'c1\'a4\'b7\'c4\'b5\'c7\'b5\'b5\'b7\'cf EI \'b9\'d7 FI \'b0\'aa\'c0\'bb \'b1\'b8\'bc\'ba\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Consequently, the single-index addressing mode with EI = 1 or double-index addressing mode with EI = 1 and FI = 1 is equivalent to post-increment addressing.\par
\'b0\'e1\'b0\'fa\'c0\'fb\'c0\'b8\'b7\'ce, EI = 1 \'b6\'c7\'b4\'c2 EI = 1 \'b9\'d7 FI = 1 \'c0\'ce \'c0\'cc\'c1\'df \'bb\'f6\'c0\'ce \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5\'b8\'a6 \'b0\'ae\'b4\'c2 \'b4\'dc\'c0\'cf \'bb\'f6\'c0\'ce \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5\'b4\'c2 \'bb\'e7\'c8\'c4 \'c1\'f5\'b0\'a1 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4\'b0\'fa \'b5\'bf\'c0\'cf\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
NOTE: The source and destination start addresses must also be aligned on an ES boundary.\par
\'c2\'fc\'b0\'ed : \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'b4\'c2 ES \'b0\'e6\'b0\'e8\'bf\'a1 \'c1\'a4\'b7\'c4\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
When the address of an element to be accessed is not aligned on an ES boundary, the transfer is stopped and a misaligned address error interrupt occurs, if enabled (see Section 16.1.4.2.1, Interrupt Generation).\par
\'be\'d7\'bc\'bc\'bd\'ba \'c7\'d2 \'bf\'e4\'bc\'d2\'c0\'c7 \'c1\'d6\'bc\'d2\'b0\'a1 ES \'b0\'e6\'b0\'e8 \'bb\'f3\'bf\'a1 \'c1\'a4\'b7\'c4\'b5\'c7\'be\'ee \'c0\'d6\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9, \'c0\'fc\'bc\'db\'c0\'cc \'c1\'df\'c1\'f6\'b5\'c7\'b0\'ed \'c0\'df\'b8\'f8 \'c1\'a4\'b7\'c4 \'b5\'c8 \'c1\'d6\'bc\'d2 \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'d1\'b4\'d9. (16.1.4.2.1 \'c0\'fd, \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bb\'fd\'bc\'ba \'c2\'fc\'c1\'b6)\par
\par
The DMA4_CFNi register configures the FN in a block.\par
DMA4_CFNi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'ba\'ed\'b7\'cf\'bf\'a1\'bc\'ad FN\'c0\'bb \'b1\'b8\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The DMA4_CENi register configures the EN.\par
DMA4_CENi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 EN\'c0\'bb \'b1\'b8\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The DMA4_CSDPi register configures the ES.\par
DMA4_CSDPi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 ES\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9\par
\par
The DMA4_CSSAi and DMA4_CDSAi registers configure the source and destination start addresses.\par
DMA4_CSSAi \'b9\'d7 DMA4_CDSAi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The DMA4_CCRi register configures the source and destination addressing modes.\par
DMA4_CCRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'bc\'d2\'bd\'ba \'b9\'d7 \'b8\'f1\'c0\'fb\'c1\'f6 \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'d1\'b4\'d9.\par
\par
The DMA4_CSEIi, DMA4_CSFIi, DMA4_CDEIi, and DMA4_CDFIi registers configure the source EI, source FI, destination EI, and destination FI, respectively.\par
DMA4_CSEIi, DMA4_CSFIi, DMA4_CDEIi \'b9\'d7 DMA4_CDFIi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'b0\'a2\'b0\'a2 \'bc\'d2\'bd\'ba EI, \'bc\'d2\'bd\'ba FI, \'b4\'eb\'bb\'f3 EI \'b9\'d7 \'b4\'eb\'bb\'f3 FI\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The addressing profiles are expressed as equations as follows:\par
\'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'c7\'c1\'b7\'ce\'c6\'c4\'c0\'cf\'c0\'ba \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'ba \'b9\'e6\'c1\'a4\'bd\'c4\'c0\'b8\'b7\'ce \'c7\'a5\'c7\'f6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Equation 1. Constant addressing:\par
\'b9\'e6\'c1\'a4\'bd\'c4 1. \'c0\'cf\'c1\'a4\'c7\'d1 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 :\par
A(n + 1) = A(n)\par
\par
NOTE: Constant addressing mode with DMA4 to/from DDR memory is not supported on the device.\par
\'c2\'fc\'b0\'ed : DMA4\'bf\'a1\'bc\'ad DDR \'b8\'de\'b8\'f0\'b8\'ae\'b7\'ce\'c0\'c7 \'c1\'f6\'bc\'d3\'c0\'fb\'c0\'ce \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5\'b4\'c2 \'c0\'e5\'c4\'a1\'bf\'a1\'bc\'ad \'c1\'f6\'bf\'f8\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
To fill the DDR memory with a single value, the constant fill feature of the DMA4 must be used, instead of a constant-addressing mode transfer.\par
\'b4\'dc\'c0\'cf \'b0\'aa\'c0\'b8\'b7\'ce DDR \'b8\'de\'b8\'f0\'b8\'ae\'b8\'a6 \'c3\'a4\'bf\'ec\'b7\'c1\'b8\'e9 \'bb\'f3\'bc\'f6 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5 \'c0\'fc\'bc\'db \'b4\'eb\'bd\'c5 DMA4\'c0\'c7 \'c0\'cf\'c1\'a4 \'c3\'a4\'bf\'ec\'b1\'e2 \'b1\'e2\'b4\'c9\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Equation 2. Post-increment addressing:\par
A(n + 1) = A(n) + ES\par
\'b5\'ee\'bd\'c4 2. \'bb\'e7\'c8\'c4 \'c1\'f5\'ba\'d0 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 :\par
A (n + 1) = A (n) + ES\par
\par
Equation 3. Single-indexed addressing:\par
A(n + 1) = A(n) + ES + (EI 1)\par
\'b5\'ee\'bd\'c4 3. \'b4\'dc\'c0\'cf \'bb\'f6\'c0\'ce \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 :\par
A (n + 1) = A (n) + ES + (EI1)\par
\par
Equation 4. Double-indexed addressing:\par
When not at the end of a frame or transfer (that is, when the element counter \'a1\'c1 0):\par
A(n + 1) = A(n) + ES + (EI 1)\par
\'b5\'ee\'bd\'c4 4. \'c0\'cc\'c1\'df \'bb\'f6\'c0\'ce \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 :\par
\'c7\'c1\'b7\'b9\'c0\'d3 \'b6\'c7\'b4\'c2 \'c0\'fc\'bc\'db\'c0\'cc \'b3\'a1\'b3\'aa\'c1\'f6 \'be\'ca\'c0\'ba \'b0\'e6\'bf\'ec (\'c1\'ef, \'bf\'e4\'bc\'d2 \'c4\'ab\'bf\'ee\'c5\'cd \'a1\'c1 0 \'c0\'ce \'b0\'e6\'bf\'ec) :\par
A (n + 1) = A (n) + ES + (EI1)\par
\par
When at the end of a frame but not at the end of the transfer (that is, when the element counter = 0 and the frame counter \'a1\'c1 0):\par
A(n + 1) = A(n) + ES + (FI 1)\par
\'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'b3\'a1\'c0\'cc\'c1\'f6\'b8\'b8 \'c0\'fc\'bc\'db \'b8\'b6\'c1\'f6\'b8\'b7\'bf\'a1 \'be\'f8\'c0\'bb \'b6\'a7 (\'c1\'ef, \'bf\'e4\'bc\'d2 \'c4\'ab\'bf\'ee\'c5\'cd = 0\'c0\'cc\'b0\'ed \'c7\'c1\'b7\'b9\'c0\'d3 \'c4\'ab\'bf\'ee\'c5\'cd\'b0\'a1 0\'c0\'cc \'be\'c6\'b4\'d1 \'b0\'e6\'bf\'ec) :\par
A (n + 1) = A (n) + ES + (FI1)\par
\par
Calculate the element and frame index as follows:\par
Equation 5. EIement index\par
EI = [(Stride EI 1) * ES] + 1\par
\'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'cc \'bf\'e4\'bc\'d2 \'b9\'d7 \'c7\'c1\'b7\'b9\'c0\'d3 \'c0\'ce\'b5\'a6\'bd\'ba\'b8\'a6 \'b0\'e8\'bb\'ea\'c7\'d5\'b4\'cf\'b4\'d9.\par
\'b5\'ee\'bd\'c4 5. EIEMENT \'c1\'f6\'bc\'f6\par
EI = [(\'ba\'b8\'c6\'f8 EI1) * ES] + 1\par
\par
Equation 6. Frame index\par
FI = [(Stride FI 1) * ES] + 1\par
where:\par
A(n): Byte address of the element n within the transfer.\par
ES is in bytes, ES\{1, 2, 4\}.\par
\'b5\'ee\'bd\'c4 6. \'c7\'c1\'b7\'b9\'c0\'d3 \'c0\'ce\'b5\'a6\'bd\'ba\par
FI = [(\'ba\'b8\'c6\'f8 FI 1) * ES] + 1\par
A (n) : \'c0\'fc\'bc\'db \'b3\'bb\'c0\'c7 \'bf\'e4\'bc\'d2 n\'c0\'c7 \'b9\'d9\'c0\'cc\'c6\'ae \'c1\'d6\'bc\'d2.\par
ES\'b4\'c2 \'b9\'d9\'c0\'cc\'c6\'ae, ES \{1, 2, 4\}\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
EI is in bytes, specified in a configuration register, 32768 EI 32767.\par
EI\'b4\'c2 \'b1\'b8\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (32768 EI 32767)\'bf\'a1 \'c1\'f6\'c1\'a4\'b5\'c8 \'b9\'d9\'c0\'cc\'c6\'ae \'b4\'dc\'c0\'a7\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Stride EI: The difference in the number of elements between the start of the current element n to the start of next element, n+1.\par
\'ba\'b8\'c6\'f8 EI : \'c7\'f6\'c0\'e7 \'bf\'e4\'bc\'d2 n\'c0\'c7 \'bd\'c3\'c0\'db\'b0\'fa \'b4\'d9\'c0\'bd \'bf\'e4\'bc\'d2 n + 1 \'bb\'e7\'c0\'cc\'c0\'c7 \'bf\'e4\'bc\'d2 \'bc\'f6\'c0\'c7 \'c2\'f7\'c0\'cc.\par
\par
Element counter: A counter that is (re)initiated with the number of elements per frame or per transfer.\par
\'bf\'e4\'bc\'d2 \'c4\'ab\'bf\'ee\'c5\'cd : \'c7\'c1\'b7\'b9\'c0\'d3 \'b4\'e7 \'b6\'c7\'b4\'c2 \'c0\'fc\'bc\'db \'b4\'e7 \'bf\'e4\'bc\'d2 \'bc\'f6\'b7\'ce (\'b4\'d9\'bd\'c3) \'bd\'c3\'c0\'db\'b5\'c7\'b4\'c2 \'c4\'ab\'bf\'ee\'c5\'cd\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Decreased by 1 for each element transferred.\par
\'c0\'fc\'bc\'db \'b5\'c8 \'b0\'a2 \'bf\'e4\'bc\'d2\'bf\'a1 \'b4\'eb\'c7\'d8 1 \'be\'bf \'b0\'a8\'bc\'d2\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The initial value is configured in the register DMA channel element number, DMA4_CENi.\par
\'c3\'ca\'b1\'e2 \'b0\'aa\'c0\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd DMA \'c3\'a4\'b3\'ce \'bf\'e4\'bc\'d2 \'b9\'f8\'c8\'a3 DMA4_CENi\'bf\'a1 \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
FI is in bytes, specified in a configuration register, 2147483648 FI 2147483647.\par
FI\'b4\'c2 \'b1\'b8\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (2147483648 FI 2147483647)\'bf\'a1 \'c1\'f6\'c1\'a4\'b5\'c8 \'b9\'d9\'c0\'cc\'c6\'ae \'b4\'dc\'c0\'a7\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Stride FI: The difference in the number of elements between the start of the last element of the current frame and the beginning of the first element of the next frame.\par
\'ba\'b8\'c6\'f8 FI : \'c7\'f6\'c0\'e7 \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'bf\'e4\'bc\'d2 \'bd\'c3\'c0\'db\'b0\'fa \'b4\'d9\'c0\'bd \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'c3\'b9 \'b9\'f8\'c2\'b0 \'bf\'e4\'bc\'d2 \'bd\'c3\'c0\'db \'bb\'e7\'c0\'cc\'c0\'c7 \'bf\'e4\'bc\'d2 \'bc\'f6 \'c2\'f7\'c0\'cc.\par
\par
Frame counter: A counter that is (re)initiated with the FN per transfer.\par
\'c7\'c1\'b7\'b9\'c0\'d3 \'c4\'ab\'bf\'ee\'c5\'cd : \'c0\'fc\'bc\'db \'b4\'e7 FN\'c0\'b8\'b7\'ce (\'b4\'d9\'bd\'c3) \'bd\'c3\'c0\'db\'b5\'c7\'b4\'c2 \'c4\'ab\'bf\'ee\'c5\'cd\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Decreased by 1 for each frame transferred.\par
\'c0\'fc\'bc\'db \'b5\'c8 \'b0\'a2 \'c7\'c1\'b7\'b9\'c0\'d3 \'b4\'e7 1 \'be\'bf \'b0\'a8\'bc\'d2\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The initial value is configured in the register DMA channel frame number, DMA4_CFNi.\par
\'c3\'ca\'b1\'e2 \'b0\'aa\'c0\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd DMA \'c3\'a4\'b3\'ce \'c7\'c1\'b7\'b9\'c0\'d3 \'b9\'f8\'c8\'a3 DMA4_CFNi\'bf\'a1 \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Figure 16-6 shows how a stride EI and FI are defined.\par
\'b1\'d7\'b8\'b2 16-6\'c0\'ba \'ba\'b8\'c6\'f8 EI\'bf\'cd FI\'b0\'a1 \'be\'ee\'b6\'bb\'b0\'d4 \'c1\'a4\'c0\'c7\'b5\'c7\'b4\'c2\'c1\'f6 \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
When handling complex configurations, using strides can make it easier to calculate EI and FI because you can calculate in elements instead of bytes.\par
\'ba\'b9\'c0\'e2\'c7\'d1 \'b1\'b8\'bc\'ba\'c0\'bb \'c3\'b3\'b8\'ae \'c7\'d2 \'b6\'a7 \'bd\'ba\'c6\'ae\'b6\'f3\'c0\'cc\'b5\'e5\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 \'b9\'d9\'c0\'cc\'c6\'ae \'b4\'eb\'bd\'c5 \'bf\'e4\'bc\'d2\'b7\'ce \'b0\'e8\'bb\'ea\'c7\'d2 \'bc\'f6 \'c0\'d6\'c0\'b8\'b9\'c7\'b7\'ce EI \'b9\'d7 FI\'b8\'a6 \'bd\'b1\'b0\'d4 \'b0\'e8\'bb\'ea\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
(This approach is used in the 90-degree clockwise image rotation example shown in Figure 16-10.) The double-index addressing example shown in Figure 16-6 uses ES = 4, EN = 2, EI = 5, FI = 5 and FN = 2.\par
(\'c0\'cc \'b9\'e6\'b9\'fd\'c0\'ba \'b1\'d7\'b8\'b2 16-10\'bf\'a1 \'c7\'a5\'bd\'c3\'b5\'c8 90\'b5\'b5 \'bd\'c3\'b0\'e8 \'b9\'e6\'c7\'e2 \'c0\'cc\'b9\'cc\'c1\'f6 \'c8\'b8\'c0\'fc \'bf\'b9\'c1\'a6\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.)\'b1\'d7\'b8\'b2 16-6\'bf\'a1 \'c7\'a5\'bd\'c3\'b5\'c8 \'c0\'cc\'c1\'df \'bb\'f6\'c0\'ce \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'bf\'b9\'b4\'c2 ES = 4, EN = 2, EI = 5, FI = 5 \'b9\'d7 FN = 2\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Figure 16-6 through Figure 16-9 show examples of addressing mode configurations.\par
\'b1\'d7\'b8\'b2 16-6 ~ \'b1\'d7\'b8\'b2 16-9\'b4\'c2 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5 \'b1\'b8\'bc\'ba\'c0\'c7 \'bf\'b9\'b8\'a6 \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
Table 16-10 lists parameter values for the examples.\par
\'c7\'a5 16-10\'c0\'ba \'bf\'b9\'c1\'a6\'bf\'a1 \'b4\'eb\'c7\'d1 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'b0\'aa\'c0\'bb \'b3\'aa\'bf\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Table 16-10. Parameter Values for Addressing Mode Examples (a), (b), and (c)\par
\'c7\'a5 16-10. \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5 \'bf\'b9\'c1\'a6 (a), (b) \'b9\'d7 (c)\'c0\'c7 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'b0\'aa\par
\par
Double indexing can occur on source (read) or destination (write).\par
\'c0\'cc\'c1\'df \'c0\'ce\'b5\'a6\'bd\'cc\'c0\'ba \'bc\'d2\'bd\'ba (\'c0\'d0\'b1\'e2) \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3 (\'be\'b2\'b1\'e2)\'bf\'a1\'bc\'ad \'b9\'df\'bb\'fd\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Equations for rotation of xx degrees on destination are obtained by taking equations for rotation of (360 \endash  xx) degrees on source, and swapping the width (x) and height (y) of the image in them.\par
\'b4\'eb\'bb\'f3\'bf\'a1\'bc\'ad xx \'b0\'a2\'b5\'b5\'b8\'a6 \'c8\'b8\'c0\'fc\'c7\'cf\'b4\'c2 \'b9\'e6\'c1\'a4\'bd\'c4\'c0\'ba \'bc\'d2\'bd\'ba\'bf\'a1\'bc\'ad (360-xx)\'b5\'b5 \'c8\'b8\'c0\'fc\'bf\'a1 \'b4\'eb\'c7\'d1 \'b9\'e6\'c1\'a4\'bd\'c4\'c0\'bb \'c3\'eb\'c7\'cf\'bf\'a9 \'c0\'cc\'b9\'cc\'c1\'f6\'c0\'c7 \'b3\'ca\'ba\'f1 (x)\'bf\'cd \'b3\'f4\'c0\'cc (y)\'b8\'a6 \'b9\'d9\'b2\'e3\'bc\'ad \'b1\'b8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The opposite is also true.\par
\'b1\'d7 \'b9\'dd\'b4\'eb\'b5\'b5 \'b8\'b6\'c2\'f9\'b0\'a1\'c1\'f6\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Table 16-11 lists the equations for 90-, 180-, and 270-degree rotations.\par
\'c7\'a5 16-11\'bf\'a1\'b4\'c2 90\'b5\'b5, 180\'b5\'b5 \'b9\'d7 270\'b5\'b5 \'c8\'b8\'c0\'fc\'bf\'a1 \'b4\'eb\'c7\'d1 \'b9\'e6\'c1\'a4\'bd\'c4\'c0\'cc \'b3\'aa\'bf\'cd \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Table 16-11. Equations for Rotation\par
\'c7\'a5 16-11. \'c8\'b8\'c0\'fc\'c0\'bb\'c0\'a7\'c7\'d1 \'b9\'e6\'c1\'a4\'bd\'c4\par
\par
Table 16-12 and Figure 16-10 show the configuration required to perform a 90-degree clockwise rotation of a 240 \'a1\'bf 160 pixel, 32-bit image.\par
\'c7\'a5 16-12 \'b9\'d7 \'b1\'d7\'b8\'b2 16-10\'c0\'ba 240 \'a1\'bf 160 \'c7\'c8\'bc\'bf, 32 \'ba\'f1\'c6\'ae \'c0\'cc\'b9\'cc\'c1\'f6\'c0\'c7 90\'b5\'b5 \'bd\'c3\'b0\'e8 \'b9\'e6\'c7\'e2 \'c8\'b8\'c0\'fc\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'cf\'b4\'c2 \'b5\'a5 \'c7\'ca\'bf\'e4\'c7\'d1 \'b1\'b8\'bc\'ba\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
The EI, frame size, and FI values are configured so that the image is rotated line-by-line starting at the left end of the top line.\par
EI, \'c7\'c1\'b7\'b9\'c0\'d3 \'c5\'a9\'b1\'e2 \'b9\'d7 FI \'b0\'aa\'c0\'ba \'c0\'cc\'b9\'cc\'c1\'f6\'b0\'a1 \'b8\'c7 \'c0\'a7 \'c1\'d9\'c0\'c7 \'bf\'de\'c2\'ca \'b3\'a1\'bf\'a1\'bc\'ad \'bd\'c3\'c0\'db\'c7\'cf\'bf\'a9 \'c1\'d9 \'b4\'dc\'c0\'a7\'b7\'ce \'c8\'b8\'c0\'fc\'b5\'c7\'b5\'b5\'b7\'cf \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
NOTE: The FI value for the destination is negative so that the first pixel of each subsequent line of the source image is written to the correct location at the destination.\par
\'c2\'fc\'b0\'ed : \'b4\'eb\'bb\'f3\'c0\'c7 FI \'b0\'aa\'c0\'ba \'c0\'bd\'bc\'f6\'c0\'cc\'b9\'c7\'b7\'ce \'bf\'f8\'ba\'bb \'c0\'cc\'b9\'cc\'c1\'f6\'c0\'c7 \'b0\'a2 \'c8\'c4\'bc\'d3 \'c7\'e0\'c0\'c7 \'c3\'b9 \'b9\'f8\'c2\'b0 \'c7\'c8\'bc\'bf\'c0\'cc \'b4\'eb\'bb\'f3\'c0\'c7 \'bf\'c3\'b9\'d9\'b8\'a5 \'c0\'a7\'c4\'a1\'bf\'a1 \'b1\'e2\'b7\'cf\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Equation 5 and Equation 6 calculate the destination, FI and EI.\par
\'b9\'e6\'c1\'a4\'bd\'c4 5\'bf\'cd \'b9\'e6\'c1\'a4\'bd\'c4 6\'c0\'ba \'b8\'f1\'c0\'fb\'c1\'f6 FI\'bf\'cd EI\'b8\'a6 \'b0\'e8\'bb\'ea\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The example assumes that the image lines are stored at consecutive addresses in memory, meaning that both EI and FI on the source side are 1.\par
\'c0\'cc \'bf\'b9\'bf\'a1\'bc\'ad\'b4\'c2 \'c0\'cc\'b9\'cc\'c1\'f6 \'b6\'f3\'c0\'ce\'c0\'cc \'b8\'de\'b8\'f0\'b8\'ae\'c0\'c7 \'bf\'ac\'bc\'d3\'c0\'fb\'c0\'ce \'c1\'d6\'bc\'d2\'bf\'a1 \'c0\'fa\'c0\'e5\'b5\'c7\'be\'ee \'c0\'d6\'b4\'d9\'b0\'ed \'b0\'a1\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9. \'c1\'ef, \'bc\'d2\'bd\'ba\'b8\'e9\'c0\'c7 EI\'bf\'cd FI\'b0\'a1 \'b8\'f0\'b5\'ce 1\'c0\'cc\'b6\'f3\'b4\'c2 \'b0\'cd\'c0\'bb \'c0\'c7\'b9\'cc\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Rotations:\par
\'c8\'b8\'c0\'fc :\par
\par
Section 16.1.5.7, 90-Degree Clockwise Image Rotation, describes how to program an example of a 90- degree clockwise image rotation.\par
\'bc\'bd\'bc\'c7 16.1.5.7, 90\'b5\'b5 \'bd\'c3\'b0\'e8 \'b9\'e6\'c7\'e2 \'c0\'cc\'b9\'cc\'c1\'f6 \'c8\'b8\'c0\'fc\'c0\'ba 90\'b5\'b5 \'bd\'c3\'b0\'e8 \'b9\'e6\'c7\'e2 \'c0\'cc\'b9\'cc\'c1\'f6 \'c8\'b8\'c0\'fc\'c0\'c7 \'bf\'b9\'b8\'a6 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\'c0\'bb \'bc\'b3\'b8\'ed\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Observe that:\par
\par
\bullet  One pixel = one element\par
\bullet  \'c7\'cf\'b3\'aa\'c0\'c7 \'c7\'c8\'bc\'bf = \'c7\'cf\'b3\'aa\'c0\'c7 \'bf\'e4\'bc\'d2\par
\par
\bullet  One line = one DMA frame\par
\bullet  \'c7\'d1 \'c1\'d9 = \'c7\'cf\'b3\'aa\'c0\'c7 DMA \'c7\'c1\'b7\'b9\'c0\'d3\par
\par
\bullet  Pixel size = element size = ES\par
\bullet  \'c7\'c8\'bc\'bf \'c5\'a9\'b1\'e2 = \'bf\'e4\'bc\'d2 \'c5\'a9\'b1\'e2 = ES\par
\par
16.1.4.6 Packed Accesses\par
16.1.4.6 \'be\'d0\'c3\'e0 \'b5\'c8 \'be\'d7\'bc\'bc\'bd\'ba\par
\par
To pack data means to group data to match the bus size, thus optimizing a transfer.\par
\'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b9\'ad\'c0\'b8\'b7\'c1\'b8\'e9 \'b9\'f6\'bd\'ba \'c5\'a9\'b1\'e2\'bf\'cd \'c0\'cf\'c4\'a1\'c7\'cf\'b5\'b5\'b7\'cf \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b1\'d7\'b7\'ec\'c8\'ad\'c7\'cf\'bf\'a9 \'c0\'fc\'bc\'db\'c0\'bb \'c3\'d6\'c0\'fb\'c8\'ad\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'bb \'c0\'c7\'b9\'cc\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
When the logical channel ES is less than the DMA module read/write port size, and the addressing profile supports it (postincrement mode or single- or double-index mode with EI = 1), the number of elements to transfer in each read/write port access can be maximized by specifying that the source or destination is packed through the channel DMA4_CSDPi register.\par
\'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce ES\'b0\'a1 DMA \'b8\'f0\'b5\'e2 \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'c5\'a9\'b1\'e2\'ba\'b8\'b4\'d9 \'c0\'db\'b0\'ed \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'c7\'c1\'b7\'ce\'c6\'c4\'c0\'cf\'b8\'a6 \'c1\'f6\'bf\'f8\'c7\'cf\'b8\'e9 (EI = 1 \'c0\'ce \'b4\'dc\'c0\'cf \'b6\'c7\'b4\'c2 \'c0\'cc\'c1\'df \'c0\'ce\'b5\'a6\'bd\'ba \'b8\'f0\'b5\'e5\'c0\'c7 \'c8\'c4\'c4\'a1 \'c1\'f5\'b0\'a1 \'b8\'f0\'b5\'e5) \'b0\'a2 \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'c5\'a9\'b1\'e2\'bf\'a1\'bc\'ad \'c0\'fc\'bc\'db\'c7\'d2 \'bf\'e4\'bc\'d2 \'bc\'f6\'b4\'c2 \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3\'c0\'cc \'c3\'a4\'b3\'ce DMA4_CSDPi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 \'c6\'d0\'c5\'b7\'b5\'c7\'b5\'b5\'b7\'cf \'c1\'f6\'c1\'a4\'c7\'cf\'bf\'a9 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba\'b8\'a6 \'c3\'d6\'b4\'eb\'c8\'ad \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Thus:\par
\'b1\'d7\'b7\'af\'b9\'c7\'b7\'ce:\par
\par
\bullet  For a read/write port size of 32 bits, the source or destination can be configured as packed for transfer ESs of 8 bits (four elements per access) and 16 bits (two elements per access).\par
\bullet  32 \'ba\'f1\'c6\'ae\'c0\'c7 \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'c5\'a9\'b1\'e2\'c0\'c7 \'b0\'e6\'bf\'ec \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3\'c0\'bb 8 \'ba\'f1\'c6\'ae (\'be\'d7\'bc\'bc\'bd\'ba \'b4\'e7 \'b3\'d7 \'b0\'b3\'c0\'c7 \'bf\'e4\'bc\'d2) \'b9\'d7 16 \'ba\'f1\'c6\'ae (\'be\'d7\'bc\'bc\'bd\'ba \'b4\'e7 \'b5\'ce \'b0\'b3\'c0\'c7 \'bf\'e4\'bc\'d2)\'c0\'c7 \'c0\'fc\'bc\'db ES \'bf\'eb\'c0\'b8\'b7\'ce \'be\'d0\'c3\'e0\'c7\'cf\'bf\'a9 \'b1\'b8\'bc\'ba \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  For a read/write port size of 64 bits, the source or destination can be configured as packed for transfer ESs of 8 bits (eight elements per access), 16 bits (four elements per access), and 32 bits (two elements per access).\par
\bullet  64 \'ba\'f1\'c6\'ae\'c0\'c7 \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'c5\'a9\'b1\'e2\'c0\'c7 \'b0\'e6\'bf\'ec \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3\'c0\'bb 8 \'ba\'f1\'c6\'ae (\'be\'d7\'bc\'bc\'bd\'ba \'b4\'e7 8 \'b0\'b3 \'bf\'e4\'bc\'d2), 16 \'ba\'f1\'c6\'ae (\'be\'d7\'bc\'bc\'bd\'ba \'b4\'e7 4 \'b0\'b3 \'bf\'e4\'bc\'d2) \'b9\'d7 32 \'ba\'f1\'c6\'ae (\'be\'d7\'bc\'bc\'bd\'ba \'b4\'e7 2 \'b0\'b3 \'bf\'e4\'bc\'d2)\'c0\'c7 \'c0\'fc\'bc\'db ES \'bf\'eb\'c0\'b8\'b7\'ce \'be\'d0\'c3\'e0\'c7\'cf\'bf\'a9 \'b1\'b8\'bc\'ba \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9 ).\par
\par
Depending on the start address and transfer length, the first or last packed access can be only partially filled.\par
\'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2 \'b9\'d7 \'c0\'fc\'bc\'db \'b1\'e6\'c0\'cc\'bf\'a1 \'b5\'fb\'b6\'f3 \'c3\'b3\'c0\'bd \'b6\'c7\'b4\'c2 \'b8\'b6\'c1\'f6\'b8\'b7\'c0\'b8\'b7\'ce \'be\'d0\'c3\'e0 \'b5\'c8 \'be\'d7\'bc\'bc\'bd\'ba\'b4\'c2 \'ba\'ce\'ba\'d0\'c0\'fb\'c0\'b8\'b7\'ce \'b8\'b8 \'c3\'a4\'bf\'ef \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
This is indicated to the source or destination using the byte-enable signals.\par
\'c0\'cc\'b0\'cd\'c0\'ba \'b9\'d9\'c0\'cc\'c6\'ae \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed \'bd\'c5\'c8\'a3\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b8\'f1\'c0\'fb\'c1\'f6\'bf\'a1 \'c7\'a5\'bd\'c3\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.1.4.7 Burst Transactions\par
16.1.4.7 \'b9\'f6\'bd\'ba\'c6\'ae \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\par
\par
Transfer performance can be improved so that the source or destination and addressing profile supports it.\par
\'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3\'b0\'fa \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'c7\'c1\'b7\'ce\'c6\'c4\'c0\'cf\'c0\'cc \'c1\'f6\'bf\'f8\'c7\'cf\'b5\'b5\'b7\'cf \'c0\'fc\'bc\'db \'bc\'ba\'b4\'c9\'c0\'bb \'c7\'e2\'bb\'f3\'bd\'c3\'c5\'b3 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
This can be achieved by configuring the logical channel to perform burst transactions consisting of multiple instead of single accesses.\par
\'c0\'cc\'b4\'c2 \'b4\'dc\'c0\'cf \'be\'d7\'bc\'bc\'bd\'ba \'b4\'eb\'bd\'c5 \'b4\'d9\'c1\'df \'be\'d7\'bc\'bc\'bd\'ba\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'c8 \'b9\'f6\'bd\'ba\'c6\'ae \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'cf\'b5\'b5\'b7\'cf \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'bb \'b1\'b8\'bc\'ba\'c7\'cf\'bf\'a9 \'bc\'f6\'c7\'e0 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The channel can be programmed to use burst sizes equal to 16, 32, or 64 bytes through the DMA4_CSDPi register, with the read burst size programmable independently of the write burst size.\par
\'c3\'a4\'b3\'ce\'c0\'ba DMA4_CSDPi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 16, 32 \'b6\'c7\'b4\'c2 64 \'b9\'d9\'c0\'cc\'c6\'ae\'bf\'cd \'b5\'bf\'c0\'cf\'c7\'d1 \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b5\'b5\'b7\'cf \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'c0\'b8\'b8\'e7 \'c0\'d0\'b1\'e2 \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2\'b4\'c2 \'be\'b2\'b1\'e2 \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2\'bf\'cd \'b5\'b6\'b8\'b3\'c0\'fb\'c0\'b8\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Typically, the optimal burst size is 64 bytes (16 accesses for a 32-bit read/write port size or 8 accesses for a 64-bit read/write port size).\par
\'c0\'cf\'b9\'dd\'c0\'fb\'c0\'b8\'b7\'ce \'c3\'d6\'c0\'fb\'c0\'c7 \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2\'b4\'c2 64 \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'d4\'b4\'cf\'b4\'d9 (32 \'ba\'f1\'c6\'ae \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'c5\'a9\'b1\'e2\'c0\'c7 \'b0\'e6\'bf\'ec 16 \'b0\'b3 \'be\'d7\'bc\'bc\'bd\'ba \'b6\'c7\'b4\'c2 64 \'ba\'f1\'c6\'ae \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'c5\'a9\'b1\'e2\'c0\'c7 \'b0\'e6\'bf\'ec 8 \'b0\'b3 \'be\'d7\'bc\'bc\'bd\'ba).\par
\par
To obtain the maximum benefit from burst transactions, the source and destination start addresses must be aligned with the burst size.\par
\'b9\'f6\'bd\'ba\'c6\'ae \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'bb \'c3\'d6\'b4\'eb\'b7\'ce \'c8\'b0\'bf\'eb \'c7\'d2\'b7\'c1\'b8\'e9 \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'b0\'a1 \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2\'bf\'cd \'c1\'a4\'b7\'c4\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
If this is not the case, the start of the transfer can consist of a number of smaller (single or burst) transactions until the first burst size boundary is reached.\par
\'b1\'d7\'b7\'b8\'c1\'f6 \'be\'ca\'c0\'ba \'b0\'e6\'bf\'ec \'c3\'b9 \'b9\'f8\'c2\'b0 \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2 \'b0\'e6\'b0\'e8\'bf\'a1 \'b5\'b5\'b4\'de \'c7\'d2 \'b6\'a7\'b1\'ee\'c1\'f6 \'c0\'fc\'bc\'db \'bd\'c3\'c0\'db\'c0\'bb \'bf\'a9\'b7\'af \'b0\'b3\'c0\'c7 \'c0\'db\'c0\'ba (\'b4\'dc\'c0\'cf \'b6\'c7\'b4\'c2 \'b9\'f6\'bd\'ba\'c6\'ae) \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'b8\'b7\'ce \'b1\'b8\'bc\'ba \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Similarly, if the end of the transfer is not aligned on a burst size boundary, the final part of the transfer can consist of a number of smaller transactions.\par
\'b8\'b6\'c2\'f9\'b0\'a1\'c1\'f6\'b7\'ce, \'c0\'fc\'bc\'db\'c0\'c7 \'b3\'a1\'c0\'cc \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2 \'b0\'e6\'b0\'e8\'bf\'a1 \'c1\'a4\'b7\'c4\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'ba \'b0\'e6\'bf\'ec \'c0\'fc\'bc\'db\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'ba\'ce\'ba\'d0\'c0\'ba \'bf\'a9\'b7\'af \'b0\'b3\'c0\'c7 \'c0\'db\'c0\'ba \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'b8\'b7\'ce \'b1\'b8\'bc\'ba \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
NOTE: If post-incrementing is used, data must be packed to DMA data-port width, to use burst.\par
\'c2\'fc\'b0\'ed : \'bb\'e7\'c8\'c4 \'c1\'f5\'b0\'a1\'b0\'a1 \'bb\'e7\'bf\'eb\'b5\'c7\'b8\'e9 \'b9\'f6\'bd\'ba\'c6\'ae\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b7\'c1\'b8\'e9 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 DMA \'b5\'a5\'c0\'cc\'c5\'cd \'c6\'f7\'c6\'ae \'b3\'ca\'ba\'f1\'b7\'ce \'c3\'a4\'bf\'f6\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.1.4.8 Endianism Conversion\par
16.1.4.8 \'bf\'a3\'b5\'f0\'be\'c8 \'ba\'af\'c8\'af\par
\par
The source and destination are each specified as little-endian or big-endian through the DMA4_CSDPi register for the particular logical channel.\par
\'bc\'d2\'bd\'ba \'b9\'d7 \'b8\'f1\'c0\'fb\'c1\'f6\'b4\'c2 \'b0\'a2\'b0\'a2 \'c6\'af\'c1\'a4 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d1 DMA4_CSDPi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 \'b8\'ae\'c6\'b2 \'bf\'a3\'b5\'f0\'be\'c8 \'b6\'c7\'b4\'c2 \'ba\'f2 \'bf\'a3\'b5\'f0\'be\'c8\'c0\'b8\'b7\'ce \'c1\'f6\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
If the endianism of the source and destination differ, and if the logical channel ES is less than the DMA_SYSTEM module read/write port size, an endianism conversion is applied to the data before it is written to the destination.\par
\'bc\'d2\'bd\'ba\'bf\'cd \'b8\'f1\'c0\'fb\'c1\'f6\'c0\'c7 \'bf\'a3\'b5\'f0\'be\'c8\'c0\'cc \'b4\'d9\'b8\'a3\'b0\'c5 \'b3\'aa \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce ES\'b0\'a1 DMA_SYSTEM \'b8\'f0\'b5\'e2 \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'c5\'a9\'b1\'e2\'ba\'b8\'b4\'d9 \'c0\'db \'c0\'b8\'b8\'e9 \'b8\'f1\'c0\'fb\'c1\'f6\'bf\'a1 \'b1\'e2\'b7\'cf\'b5\'c7\'b1\'e2 \'c0\'fc\'bf\'a1 \'bf\'a3\'b5\'f0\'be\'c8 \'ba\'af\'c8\'af\'c0\'cc \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'a1 \'c0\'fb\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
When transferring data between a source and a destination with different endianism, it is important to specify an ES that equals the type of data being transferred to preserve the correct data image at the destination.\par
\'b4\'d9\'b8\'a5 \'bf\'a3\'b5\'f0\'be\'c8\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'bf\'f8\'ba\'bb\'b0\'fa \'b4\'eb\'bb\'f3\'b0\'a3\'bf\'a1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fc\'bc\'db\'c7\'d2 \'b6\'a7 \'b4\'eb\'bb\'f3\'bf\'a1\'bc\'ad \'bf\'c3\'b9\'d9\'b8\'a5 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'cc\'b9\'cc\'c1\'f6\'b8\'a6 \'ba\'b8\'c1\'b8\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'c0\'fc\'bc\'db\'b5\'c7\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd \'c7\'fc\'bd\'c4\'b0\'fa \'b5\'bf\'c0\'cf\'c7\'d1 ES\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'c1\'df\'bf\'e4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
In the system, endianism conversion can be performed in more than one place.\par
\'bd\'c3\'bd\'ba\'c5\'db\'bf\'a1\'bc\'ad \'bf\'a3\'b5\'f0\'be\'c8 \'ba\'af\'c8\'af\'c0\'ba \'bf\'a9\'b7\'af \'b0\'f7\'bf\'a1\'bc\'ad \'bc\'f6\'c7\'e0 \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
It is possible to instruct the source and/or destination to lock the endianism (that is, to not perform a conversion) through the logical DMA channel DMA4_CSDPi register.\par
\'b3\'ed\'b8\'ae DMA \'c3\'a4\'b3\'ce DMA4_CSDPi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 \'bc\'d2\'bd\'ba \'b9\'d7 / \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3\'bf\'a1 \'bf\'a3\'b5\'f0\'be\'c8\'c0\'bb \'c0\'e1\'b1\'d7\'b5\'b5\'b7\'cf (\'c1\'ef, \'ba\'af\'c8\'af\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'cf\'c1\'f6 \'be\'ca\'b5\'b5\'b7\'cf) \'c1\'f6\'bd\'c3 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
NOTE: Because the device is little-endian by construction, the DMA_SYSTEM endianism registers must never be set to big-endian.\par
\'c2\'fc\'b0\'ed : \'c0\'e5\'c4\'a1\'b0\'a1 \'b1\'b8\'bc\'ba\'bf\'a1 \'c0\'c7\'c7\'d1 \'b8\'ae\'c6\'b2 \'bf\'a3\'b5\'f0\'be\'c8\'c0\'cc\'b9\'c7\'b7\'ce DMA_SYSTEM \'bf\'a3\'b5\'f0\'be\'c8 \'b4\'cf\'bd\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'ba\'f2 \'bf\'a3\'b5\'f0\'be\'c8\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d8\'bc\'ad\'b4\'c2 \'be\'c8\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
If DMA_SYSTEM is used to execute endian conversion by setting the source and destination to different endianism values, it is important to consider that the L3_MAIN interconnect also executes endian conversion if the DMA_SYSTEM and the source or destination have a different data bus width.\par
DMA_SYSTEM\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'bc\'d2\'bd\'ba\'bf\'cd \'b4\'eb\'bb\'f3\'c0\'bb \'b4\'d9\'b8\'a5 \'bf\'a3\'b5\'f0\'be\'c8 \'b0\'aa\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d8\'bc\'ad \'bf\'a3\'b5\'f0\'be\'c8 \'ba\'af\'c8\'af\'c0\'bb \'bd\'c7\'c7\'e0\'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec DMA_SYSTEM\'b0\'fa \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3\'c0\'cc \'b4\'d9\'b8\'a5 \'b5\'a5\'c0\'cc\'c5\'cd \'b9\'f6\'bd\'ba \'b3\'ca\'ba\'f1\'b8\'a6 \'b0\'ae\'b4\'c2 \'b0\'e6\'bf\'ec L3_MAIN \'bb\'f3\'c8\'a3 \'bf\'ac\'b0\'e1\'c0\'cc \'bf\'a3\'b5\'f0\'be\'c8 \'ba\'af\'c8\'af\'b5\'b5 \'bd\'c7\'c7\'e0\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'b8\'b7\'ce \'b0\'a3\'c1\'d6\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'c1\'df\'bf\'e4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.1.4.9 Transfer Synchronization\par
16.1.4.9 \'c0\'fc\'bc\'db \'b5\'bf\'b1\'e2\'c8\'ad\par
\par
A logical channel can be programmed for software-triggered or hardware synchronized transfers.\par
\'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'c6\'ae\'b8\'ae\'b0\'c5 \'b6\'c7\'b4\'c2 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'bb \'c0\'a7\'c7\'d8 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'bb \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.1.4.9.1 Software Synchronization\par
16.1.4.9.1 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad\par
\par
A transfer is software-triggered when the logical channel is set up and started by software.\par
\'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'cc \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'bf\'a1 \'c0\'c7\'c7\'d8 \'bc\'b3\'c1\'a4\'b5\'c7\'b0\'ed \'bd\'c3\'c0\'db\'b5\'c7\'b8\'e9 \'c0\'fc\'bc\'db\'c0\'ba \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'c6\'ae\'b8\'ae\'b0\'c5\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
To specify a software-triggered transfer, set the channel DMA DMA4_CCRi[4:0] and DMA4_CCRi[20:19] bit fields to 0.\par
\'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db\'c0\'bb \'c1\'f6\'c1\'a4\'c7\'cf\'b7\'c1\'b8\'e9 \'c3\'a4\'b3\'ce DMA DMA4_CCRi [4 : 0] \'b9\'d7 DMA4_CCRi [20:19] \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b8\'a6 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
The transfer starts as soon as the DMA DMA4_CCRi[7] bit is set (when it enters the scheduling process).\par
DMA DMA4_CCRi [7] \'ba\'f1\'c6\'ae\'b0\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'b8\'e9 (\'c0\'fc\'bc\'db \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b0\'a1 \'bd\'c3\'c0\'db\'b5\'c9 \'b6\'a7) \'c0\'fc\'bc\'db\'c0\'cc \'bd\'c3\'c0\'db\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.1.4.9.2 Hardware Synchronization\par
16.1.4.9.2 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad\par
\par
A transfer is hardware-synchronized if the logical channel activation is driven by hardware requests from the source or destination target.\par
\'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c8\'b0\'bc\'ba\'c8\'ad\'b0\'a1 \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3\'c0\'c7 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'bf\'e4\'c3\'bb\'bf\'a1 \'c0\'c7\'c7\'d8 \'b1\'b8\'b5\'bf\'b5\'c7\'b4\'c2 \'b0\'e6\'bf\'ec \'c0\'fc\'bc\'db\'c0\'ba \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee\'bf\'cd \'b5\'bf\'b1\'e2\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
A hardware-synchronized transfer is specified by configuring the DMA request line number in the channel DMA4_CCRi register to a value that corresponds to the DMA request line from the source or destination that generates the DMA requests.\par
\'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'ba DMA \'bf\'e4\'c3\'bb\'c0\'bb \'bb\'fd\'bc\'ba\'c7\'cf\'b4\'c2 \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b8\'f1\'c0\'fb\'c1\'f6\'c0\'c7 DMA \'bf\'e4\'c3\'bb \'b6\'f3\'c0\'ce\'bf\'a1 \'c7\'d8\'b4\'e7\'c7\'cf\'b4\'c2 \'b0\'aa\'c0\'b8\'b7\'ce \'c3\'a4\'b3\'ce DMA4_CCRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 DMA \'bf\'e4\'c3\'bb \'b6\'f3\'c0\'ce \'b9\'f8\'c8\'a3\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'cf\'bf\'a9 \'c1\'f6\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The DMA request numbers to be configured are specified in the DMA request mapping (see Table 16-9).\par
\'b1\'b8\'bc\'ba \'c7\'d2 DMA \'bf\'e4\'c3\'bb \'b9\'f8\'c8\'a3\'b4\'c2 DMA \'bf\'e4\'c3\'bb \'b8\'c5\'c7\'ce\'bf\'a1 \'c1\'f6\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9 (\'c7\'a5 16-9 \'c2\'fc\'c1\'b6).\par
\par
Specify the DMA request number in the DMA4_CCRi[4:0] SYNCHRO_CONTROL and DMA4_CCRi[20:19] SYNCHRO_CONTROL_UPPER bit fields.\par
DMA4_CCRi [4 : 0] SYNCHRO_CONTROL \'b9\'d7 DMA4_CCRi [20:19] SYNCHRO_CONTROL_UPPER \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 DMA \'bf\'e4\'c3\'bb \'b9\'f8\'c8\'a3\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
After the DMA4_CCRi[7] ENABLE bit is set, the logical channel becomes enabled but not activated (it does not enter the scheduling process), which means that channel registers are not updated until the first DMA request is received.\par
DMA4_CCRi [7] ENABLE \'ba\'f1\'c6\'ae\'b0\'a1 \'bc\'bc\'c6\'ae \'b5\'c8 \'c8\'c4, \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'ba \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'c1\'f6\'b8\'b8 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'c1\'f6 \'be\'ca\'b0\'ed (\'bd\'ba\'c4\'c9\'c1\'d9\'b8\'b5 \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'ba\'b8\'a6 \'bd\'c3\'c0\'db\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'bd), \'c0\'cc\'b4\'c2 \'c3\'b9 \'b9\'f8\'c2\'b0 DMA \'bf\'e4\'c3\'bb\'c0\'cc \'bc\'f6\'bd\'c5 \'b5\'c9 \'b6\'a7\'b1\'ee\'c1\'f6 \'c3\'a4\'b3\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b0\'a1 \'b0\'bb\'bd\'c5\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'bd\'c0\'bb \'c0\'c7\'b9\'cc\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
NOTE: The channel synchronization control registers are 1-based.\par
\'c2\'fc\'b0\'ed : \'c3\'a4\'b3\'ce \'b5\'bf\'b1\'e2\'c8\'ad \'c1\'a6\'be\'ee \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 1 \'b1\'e2\'b9\'dd\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
For example, to enable the S_DMA_1 request, the DMA4_CCRi[4:0] SYNCHRO_CONTROL bit field must be set to 0x2 (DMA request number + 1).\par
\'bf\'b9\'b8\'a6 \'b5\'e9\'be\'ee, S_DMA_1 \'bf\'e4\'c3\'bb\'c0\'bb \'b0\'a1\'b4\'c9\'c7\'cf\'b0\'d4\'c7\'cf\'b7\'c1\'b8\'e9 DMA4_CCRi [4 : 0] SYNCHRO_CONTROL \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b8\'a6 0x2 (DMA \'bf\'e4\'c3\'bb \'b9\'f8\'c8\'a3 + 1)\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
NOTE: A DMA request line must not be shared between concurrently enabled DMA channels.\par
\'c2\'fc\'b0\'ed : DMA \'bf\'e4\'c3\'bb \'c1\'d9\'c0\'ba \'b5\'bf\'bd\'c3\'bf\'a1 \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 DMA \'c3\'a4\'b3\'ce\'b0\'a3\'bf\'a1 \'b0\'f8\'c0\'af\'b5\'c7\'be\'ee\'bc\'ad\'b4\'c2 \'be\'c8\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
However, a DMA request line can be shared among several chained logical channels.\par
\'b1\'d7\'b7\'af\'b3\'aa DMA \'bf\'e4\'c3\'bb \'b6\'f3\'c0\'ce\'c0\'ba \'bf\'a9\'b7\'af \'b0\'b3\'c0\'c7 \'bf\'ac\'b0\'e1\'b5\'c8 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'b0\'a3\'bf\'a1 \'b0\'f8\'c0\'af \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
For hardware synchronization, the amount of data to be transferred for each assertion of the DMA request line is configured through the frame synchronization (FS) and block synchronization (BS) bits in the logical channel DMA4_CCRi register and the DMA4_CCRi[5] FS and DMA4_CCRi18BSbitsrespectively.\par
\'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad\'c0\'c7 \'b0\'e6\'bf\'ec, DMA \'bf\'e4\'c3\'bb \'b6\'f3\'c0\'ce\'c0\'c7 \'b0\'a2 \'be\'ee\'bc\'b3 \'bc\'c7\'c0\'bb \'c0\'a7\'c7\'d8 \'c0\'fc\'bc\'db\'b5\'c7\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'be\'e7\'c0\'ba \'b3\'ed\'b8\'ae\'c0\'fb \'c3\'a4\'b3\'ce DMA4_CCRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'cd DMA4_CCRi [5] FS \'b9\'d7 DMA4_CCRi[18] BS \'ba\'f1\'c6\'ae \'b0\'a2\'b0\'a2\'c0\'c7 \'c7\'c1\'b7\'b9\'c0\'d3 \'b5\'bf\'b1\'e2\'c8\'ad (FS) \'b9\'d7 \'ba\'ed\'b7\'cf \'b5\'bf\'b1\'e2\'c8\'ad (BS) \'ba\'f1\'c6\'ae\'b8\'a6 \'c5\'eb\'c7\'d8 \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9 .\par
\par
The amount of data can be any of the following:\par
\'b5\'a5\'c0\'cc\'c5\'cd \'be\'e7\'c0\'ba \'b4\'d9\'c0\'bd \'c1\'df \'c7\'cf\'b3\'aa \'c0\'cf \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  A single element transfer: A complete element defined by data type. For example, 8/16/32 bits are\par
transferred in response to a DMA request.\par
\bullet  \'b4\'dc\'c0\'cf \'bf\'e4\'bc\'d2 \'c0\'fc\'bc\'db : \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'af\'c7\'fc\'ba\'b0\'b7\'ce \'c1\'a4\'c0\'c7 \'b5\'c8 \'bf\'cf\'c0\'fc\'c7\'d1 \'bf\'e4\'bc\'d2. \'bf\'b9\'b8\'a6 \'b5\'e9\'be\'ee 8/16/32 \'ba\'f1\'c6\'ae\'b4\'c2 DMA \'bf\'e4\'b1\'b8\'bf\'a1 \'c0\'c0\'b4\'e4\'c7\'cf\'bf\'a9 \'c0\'fc\'bc\'db\'b5\'c8\'b4\'d9.\par
\par
\bullet  A full frame: A complete frame of several elements is transferred in response to a DMA request.\par
\bullet  \'c0\'fc\'c3\'bc \'c7\'c1\'b7\'b9\'c0\'d3 : DMA \'bf\'e4\'c3\'bb\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'c0\'b4\'e4\'c0\'b8\'b7\'ce \'bf\'a9\'b7\'af \'bf\'e4\'bc\'d2\'c0\'c7 \'c0\'fc\'c3\'bc \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'cc \'c0\'fc\'bc\'db\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  A full block (a full channel transfer): A complete block of several frames is transferred in response to a DMA request.\par
\bullet  \'c0\'fc\'c3\'bc \'ba\'ed\'b7\'cf (\'c0\'fc\'c3\'bc \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db) : DMA \'bf\'e4\'c3\'bb\'bf\'a1 \'c0\'c0\'b4\'e4\'c7\'cf\'bf\'a9 \'bf\'a9\'b7\'af \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'c0\'fc\'c3\'bc \'ba\'ed\'b7\'cf\'c0\'cc \'c0\'fc\'bc\'db\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  A full packet (a full channel transfer): A complete packet of several elements is transferred in response\par
to a DMA request.\par
\bullet  \'c0\'fc\'c3\'bc \'c6\'d0\'c5\'b6 (\'c0\'fc\'c3\'bc \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db) : DMA \'bf\'e4\'c3\'bb\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'c0\'b4\'e4\'c0\'b8\'b7\'ce \'bf\'a9\'b7\'af \'bf\'e4\'bc\'d2\'c0\'c7 \'c0\'fc\'c3\'bc \'c6\'d0\'c5\'b6\'c0\'cc \'c0\'fc\'bc\'db\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Packets allow the size of each part of the full DMA transfer to be configured independently of the organization of the data to be transferred (typically a number of elements).\par
\'c6\'d0\'c5\'b6\'c0\'ba \'c0\'fc\'c3\'bc DMA \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'a2 \'ba\'ce\'ba\'d0\'c0\'c7 \'c5\'a9\'b1\'e2\'b8\'a6 \'c0\'fc\'bc\'db\'c7\'d2 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b1\'b8\'bc\'ba (\'c0\'cf\'b9\'dd\'c0\'fb\'c0\'b8\'b7\'ce \'b8\'b9\'c0\'ba \'bf\'e4\'bc\'d2)\'b0\'fa \'ba\'b0\'b5\'b5\'b7\'ce \'b1\'b8\'bc\'ba \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
This can be useful when the source or destination has a buffer (such as a FIFO queue) with a size unrelated to the frame size of the transfer.\par
\'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3\'bf\'a1 \'c0\'fc\'bc\'db \'c7\'c1\'b7\'b9\'c0\'d3 \'c5\'a9\'b1\'e2\'bf\'cd \'b0\'fc\'b7\'c3\'be\'f8\'b4\'c2 \'c5\'a9\'b1\'e2\'b8\'a6 \'b0\'ae\'b4\'c2 \'b9\'f6\'c6\'db (\'bf\'b9 : FIFO \'b4\'eb\'b1\'e2\'bf\'ad)\'b0\'a1\'c0\'d6\'b4\'c2 \'b0\'e6\'bf\'ec \'c0\'af\'bf\'eb \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The packet size then can be set to the size of the buffer.\par
\'c6\'d0\'c5\'b6 \'c5\'a9\'b1\'e2\'b4\'c2 \'b9\'f6\'c6\'db\'c0\'c7 \'c5\'a9\'b1\'e2\'b7\'ce \'bc\'b3\'c1\'a4 \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Packet transfer must be used only where the source or destination is addressed in constant addressing mode, because FI registers are reused to specify the packet size.\par
FI \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'c6\'d0\'c5\'b6 \'c5\'a9\'b1\'e2\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'b4\'d9\'bd\'c3 \'bb\'e7\'bf\'eb\'b5\'c7\'b9\'c7\'b7\'ce \'bf\'f8\'ba\'bb \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3\'c0\'cc \'bb\'f3\'bc\'f6 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5\'b7\'ce \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4\'b5\'c8 \'b0\'e6\'bf\'ec\'bf\'a1\'b8\'b8 \'c6\'d0\'c5\'b6 \'c0\'fc\'bc\'db\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
To support the burst mode, the logical channel must also be configured in target-port packed access mode.\par
\'b9\'f6\'bd\'ba\'c6\'ae \'b8\'f0\'b5\'e5\'b8\'a6 \'c1\'f6\'bf\'f8\'c7\'cf\'b7\'c1\'b8\'e9 \'b3\'ed\'b8\'ae\'c0\'fb \'c3\'a4\'b3\'ce\'c0\'bb \'b4\'eb\'bb\'f3 \'c6\'f7\'c6\'ae \'be\'d0\'c3\'e0 \'be\'d7\'bc\'bc\'bd\'ba \'b8\'f0\'b5\'e5\'b7\'ce \'b1\'b8\'bc\'ba\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The packet size is configured based on the DMA4_CCRi[24] SEL_SRC_DST_SYNC bit through either the channel DMA4_CDFIi register (source synchronized) or the DMA4_CSFIi register (destination synchronized).\par
\'c6\'d0\'c5\'b6 \'c5\'a9\'b1\'e2\'b4\'c2 \'c3\'a4\'b3\'ce DMA4_CDFIi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (\'bc\'d2\'bd\'ba \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'ca) \'b6\'c7\'b4\'c2 DMA4_CSFIi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (\'b4\'eb\'bb\'f3 \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'ca)\'b8\'a6 \'c5\'eb\'c7\'d8 DMA4_CCRi [24] SEL_SRC_DST_SYNC \'ba\'f1\'c6\'ae\'b8\'a6 \'b1\'e2\'b9\'dd\'c0\'b8\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
When the logical channel transfer block is not an exact multiple of the packet size, the final packet consists of the remaining elements in the transfer, using burst or single accesses to complete the block transfer.\par
\'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db \'ba\'ed\'b7\'cf\'c0\'cc \'c6\'d0\'c5\'b6 \'c5\'a9\'b1\'e2\'c0\'c7 \'c1\'a4\'c8\'ae\'c7\'d1 \'b9\'e8\'bc\'f6\'b0\'a1 \'be\'c6\'b4\'d1 \'b0\'e6\'bf\'ec, \'c3\'d6\'c1\'be \'c6\'d0\'c5\'b6\'c0\'ba \'ba\'ed\'b7\'cf \'c0\'fc\'bc\'db\'c0\'bb \'bf\'cf\'b7\'e1\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'b9\'f6\'bd\'ba\'c6\'ae \'b6\'c7\'b4\'c2 \'b4\'dc\'c0\'cf \'be\'d7\'bc\'bc\'bd\'ba\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'c0\'fc\'bc\'db\'c0\'c7 \'b3\'aa\'b8\'d3\'c1\'f6 \'bf\'e4\'bc\'d2\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The maximum transfer size, regardless of the packet size, is always as follows:\par
\'c6\'d0\'c5\'b6 \'c5\'a9\'b1\'e2\'bf\'a1 \'b0\'fc\'b0\'e8\'be\'f8\'c0\'cc \'c3\'d6\'b4\'eb \'c0\'fc\'bc\'db \'c5\'a9\'b1\'e2\'b4\'c2 \'c7\'d7\'bb\'f3 \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Block_size = Number_of_Frame_in_Block * Number_of_Element_in_Frame * Element_Size\par
\par
\bullet  Synchronized at the source\par
\bullet  \'bc\'d2\'bd\'ba\'bf\'a1\'bc\'ad \'b5\'bf\'b1\'e2\'c8\'ad\par
\par
The DMA module optimizes the transfer with respect to the number and size of burst transactions for the given source and destination addressing profiles and configured maximum burst sizes.\par
DMA \'b8\'f0\'b5\'e2\'c0\'ba \'c1\'d6\'be\'ee\'c1\'f8 \'bc\'d2\'bd\'ba \'b9\'d7 \'b8\'f1\'c0\'fb\'c1\'f6 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'c7\'c1\'b7\'ce\'c6\'c4\'c0\'cf \'b9\'d7 \'b1\'b8\'bc\'ba\'b5\'c8 \'c3\'d6\'b4\'eb \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2\'bf\'a1 \'b4\'eb\'c7\'d1 \'b9\'f6\'bd\'ba\'c6\'ae \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'c7 \'bc\'f6\'bf\'cd \'c5\'a9\'b1\'e2\'bf\'a1 \'b5\'fb\'b6\'f3 \'c0\'fc\'bc\'db\'c0\'bb \'c3\'d6\'c0\'fb\'c8\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
When writing to the destination is slower than reading from the source, data is buffered in the channel FIFO queue.\par
\'b4\'eb\'bb\'f3\'bf\'a1 \'b4\'eb\'c7\'d1 \'be\'b2\'b1\'e2\'b0\'a1 \'bc\'d2\'bd\'ba\'bf\'a1\'bc\'ad \'c0\'d0\'b1\'e2\'ba\'b8\'b4\'d9 \'b4\'c0\'b8\'ae\'b8\'e9 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c3\'a4\'b3\'ce FIFO \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'b9\'f6\'c6\'db\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
If the transfer is packet-synchronized at the source, the end-of-packet interrupt is disabled (see Section 16.1.4.13, Reprogramming an Active Channel).\par
\'c0\'fc\'bc\'db\'c0\'cc \'bc\'d2\'bd\'ba\'bf\'a1\'bc\'ad \'c6\'d0\'c5\'b6 \'b5\'bf\'b1\'e2\'c8\'ad\'b5\'c7\'b8\'e9 \'c6\'d0\'c5\'b6 \'b3\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9 (16.1.4.13, \'c8\'b0\'bc\'ba \'c3\'a4\'b3\'ce \'b4\'d9\'bd\'c3 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c2\'fc\'c1\'b6).\par
\par
For a source synchronized transfer, buffering can be enabled or disabled by setting the DMA4_CCRi[25] BUFFERING_DISABLE bit.\par
\'bc\'d2\'bd\'ba \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec, DMA4_CCRi [25] BUFFERING_DISABLE \'ba\'f1\'c6\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bf\'a9 \'b9\'f6\'c6\'db\'b8\'b5\'c0\'bb \'c8\'b0\'bc\'ba\'c8\'ad \'b6\'c7\'b4\'c2 \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
For a packet source synchronization with buffering disabled and the packed/burst across the packet boundary, the last packed/burst write transaction is split in optimized smaller accesses to complete the packet transfer size.\par
\'b9\'f6\'c6\'db\'b8\'b5\'c0\'cc \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'c6\'d0\'c5\'b6 \'bc\'d2\'bd\'ba \'b5\'bf\'b1\'e2\'c8\'ad\'bf\'cd \'c6\'d0\'c5\'b6 \'b0\'e6\'b0\'e8\'b8\'a6 \'c5\'eb\'c7\'d1 \'be\'d0\'c3\'e0 / \'b9\'f6\'bd\'ba\'c6\'ae\'c0\'c7 \'b0\'e6\'bf\'ec \'b8\'b6\'c1\'f6\'b8\'b7 \'c6\'d0\'c5\'b6 / \'b9\'f6\'bd\'ba\'c6\'ae \'be\'b2\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc \'c3\'d6\'c0\'fb\'c8\'ad \'b5\'c8 \'c0\'db\'c0\'ba \'be\'d7\'bc\'bc\'bd\'ba\'b7\'ce \'ba\'d0\'c7\'d2\'b5\'c7\'be\'ee \'c6\'d0\'c5\'b6 \'c0\'fc\'bc\'db \'c5\'a9\'b1\'e2\'b8\'a6 \'bf\'cf\'b7\'e1\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
However, for a packet source synchronized transfer with buffering enabled and with the packed/burst across the packet boundary, the DMA module waits for the next DMA request(s) to read enough data to issue an atomic packed/burst write transaction (assuming that the address is packed/burst aligned).\par
\'b1\'d7\'b7\'af\'b3\'aa, \'b9\'f6\'c6\'db\'b8\'b5\'c0\'cc \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed\'b5\'c7\'b0\'ed \'c6\'d0\'c5\'b6 \'b0\'e6\'b0\'e8\'b8\'a6 \'c5\'eb\'c7\'d8 \'c6\'d0\'c5\'b7 \'b5\'c8 / \'b9\'f6\'bd\'ba\'c6\'ae\'b8\'a6 \'b0\'ae\'b4\'c2 \'c6\'d0\'c5\'b6 \'bc\'d2\'bd\'ba \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'bf\'a1 \'b4\'eb\'c7\'d8, DMA \'b8\'f0\'b5\'e2\'c0\'ba \'b4\'d9\'c0\'bd DMA \'bf\'e4\'c3\'bb\'c0\'cc \'c3\'e6\'ba\'d0\'c7\'d1 \'c6\'d0\'c5\'b7 \'b5\'c8 / \'b9\'f6\'bd\'ba\'c6\'ae \'be\'b2\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'bb \'b9\'df\'c7\'e0\'c7\'cf\'b1\'e2\'bf\'a1 \'c3\'e6\'ba\'d0\'c7\'d1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'d0\'b1\'e2\'b8\'a6 \'b1\'e2\'b4\'d9\'b8\'b0\'b4\'d9 ( \'c1\'d6\'bc\'d2\'b4\'c2 \'c6\'d0\'c5\'b7 / \'b9\'f6\'bd\'ba\'c6\'ae \'c1\'a4\'b7\'c4 \'b5\'ca).\par
\par
NOTE: Buffering is not performed between frames, even if it is enabled.\par
\'c2\'fc\'b0\'ed : \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'b0\'e6\'bf\'ec\'bf\'a1\'b5\'b5 \'c7\'c1\'b7\'b9\'c0\'d3\'b0\'a3\'bf\'a1 \'b9\'f6\'c6\'db\'b8\'b5\'c0\'cc \'bc\'f6\'c7\'e0\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
If the packed/burst is across the frame boundary, the last packed/burst write transaction is split in optimized smaller accesses to complete the frame transfer size.\par
\'c6\'d0\'c5\'b7 \'b5\'c8 / \'b9\'f6\'bd\'ba\'c6\'ae\'b0\'a1 \'c7\'c1\'b7\'b9\'c0\'d3 \'b0\'e6\'b0\'e8\'b8\'a6 \'b3\'d1\'c0\'b8\'b8\'e9 \'b8\'b6\'c1\'f6\'b8\'b7 \'c6\'d0\'c5\'b7 / \'b9\'f6\'bd\'ba\'c6\'ae \'be\'b2\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc \'c3\'d6\'c0\'fb\'c8\'ad \'b5\'c8 \'c0\'db\'c0\'ba \'be\'d7\'bc\'bc\'bd\'ba\'b7\'ce \'ba\'d0\'c7\'d2\'b5\'c7\'be\'ee \'c7\'c1\'b7\'b9\'c0\'d3 \'c0\'fc\'bc\'db \'c5\'a9\'b1\'e2\'b8\'a6 \'bf\'cf\'b7\'e1\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Synchronized at the destination\par
\bullet  \'b8\'f1\'c0\'fb\'c1\'f6\'bf\'a1\'bc\'ad \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'ca\par
\par
The performance of a hardware-synchronized transfer can be improved by using the prefetch mode.\par
\'c7\'c1\'b8\'ae \'c6\'e4\'c4\'a1 \'b8\'f0\'b5\'e5\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'c7 \'bc\'ba\'b4\'c9\'c0\'bb \'c7\'e2\'bb\'f3\'bd\'c3\'c5\'b3 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
enabled through the channel DMA4_CCRi[23] PREFETCH bit.\par
\'c3\'a4\'b3\'ce DMA4_CCRi [23] PREFETCH \'ba\'f1\'c6\'ae\'b8\'a6 \'c5\'eb\'c7\'d8 \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed\'b5\'c8\'b4\'d9.\par
\par
Data is prefetched on the read port side before the DMA request received and buffered in the FIFO queue.\par
\'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2 DMA \'bf\'e4\'c3\'bb\'c0\'cc FIFO \'c5\'a5\'bf\'a1\'bc\'ad \'bc\'f6\'bd\'c5\'b5\'c7\'b0\'ed \'b9\'f6\'c6\'db\'b8\'b5\'b5\'c7\'b1\'e2 \'c0\'fc\'bf\'a1 \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae \'c3\'f8\'bf\'a1\'bc\'ad \'bc\'b1 \'c0\'ce\'c3\'e2\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Up to a full transfer block can be prefetched, although this can be limited by the specified maximum channel FIFO queue depth (see Section 16.1.4.4, FIFO Queue Memory Pool).\par
\'c1\'f6\'c1\'a4\'b5\'c8 \'c3\'d6\'b4\'eb \'c3\'a4\'b3\'ce FIFO \'c5\'a5 \'b1\'ed\'c0\'cc (16.1.4.4, FIFO \'c5\'a5 \'b8\'de\'b8\'f0\'b8\'ae \'c7\'ae \'c2\'fc\'c1\'b6)\'b7\'ce \'c1\'a6\'c7\'d1 \'b5\'c9 \'bc\'f6 \'c0\'d6\'c1\'f6\'b8\'b8 \'c0\'fc\'c3\'bc \'c0\'fc\'bc\'db \'ba\'ed\'b7\'cf\'b1\'ee\'c1\'f6 \'c7\'c1\'b8\'ae \'c6\'e4\'c4\'a1 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Buffering disable is not allowed for a destination-synchronized transfer.\par
\'b9\'f6\'c6\'db\'b8\'b5 \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad\'b4\'c2 \'b4\'eb\'bb\'f3 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'bf\'a1\'b4\'c2 \'c7\'e3\'bf\'eb\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
NOTE: Behavior is undefined when prefetch is enabled and a transfer is synchronized to the source.\par
\'c2\'fc\'b0\'ed : \'c7\'c1\'b8\'ae \'c6\'e4\'c4\'a1\'b0\'a1 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b0\'ed \'c0\'fc\'bc\'db\'c0\'cc \'bc\'d2\'bd\'ba\'bf\'a1 \'b5\'bf\'b1\'e2\'c8\'ad\'b5\'c7\'b8\'e9 \'b5\'bf\'c0\'db\'c0\'cc \'c1\'a4\'c0\'c7\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Regardless of whether buffering is enabled, the last transaction in the frame or in the block is write nonposted (WNP) even if the write mode is specified as write last nonposted (WLNP; the DMA4_CSDPi[17:16] WRITE_MODE bit field = 0x2).\par
\'b9\'f6\'c6\'db\'b8\'b5\'c0\'cc \'c8\'b0\'bc\'ba\'c8\'ad \'bf\'a9\'ba\'ce\'bf\'a1 \'b0\'fc\'b0\'e8\'be\'f8\'c0\'cc \'be\'b2\'b1\'e2 \'b8\'f0\'b5\'e5\'b0\'a1 \'b8\'b6\'c1\'f6\'b8\'b7 \'ba\'f1\'c6\'f7\'c0\'e5 \'be\'b2\'b1\'e2 (WLNP, DMA4_CSDPi [17:16] WRITE_MODE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5 = 0x2)\'b7\'ce \'c1\'f6\'c1\'a4\'b5\'c7\'be\'ee \'c0\'d6\'be\'ee\'b5\'b5 \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'cc\'b3\'aa \'ba\'ed\'b7\'cf\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'ba WNP (Nonposted Write)\'c0\'cc\'b4\'d9 .\par
\par
 However, in a packet synchronization mode, the last transaction of each packet in the transfer is WNP only if the buffering disable is on (even if the write mode is specified as WLNP).\par
  \'b1\'d7\'b7\'af\'b3\'aa \'c6\'d0\'c5\'b6 \'b5\'bf\'b1\'e2\'c8\'ad \'b8\'f0\'b5\'e5\'bf\'a1\'bc\'ad \'b9\'f6\'c6\'db\'b8\'b5 \'bb\'e7\'bf\'eb \'be\'c8 \'c7\'d4\'c0\'cc \'c4\'d1\'c1\'ae\'c0\'d6\'b4\'c2 \'b0\'e6\'bf\'ec\'bf\'a1\'b8\'b8 (\'be\'b2\'b1\'e2 \'b8\'f0\'b5\'e5\'b0\'a1 WLNP\'b7\'ce \'c1\'f6\'c1\'a4\'b5\'c7\'be\'ee \'c0\'d6\'be\'ee\'b5\'b5) \'c0\'fc\'bc\'db\'bd\'c3 \'b0\'a2 \'c6\'d0\'c5\'b6\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc WNP\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Regardless of whether buffering is enabled, the packet interrupt is not generated in the packet source synchronized mode.\par
\'b9\'f6\'c6\'db\'b8\'b5\'c0\'cc \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'be\'fa\'b4\'c2\'c1\'f6 \'bf\'a9\'ba\'ce\'bf\'a1 \'b0\'fc\'b0\'e8\'be\'f8\'c0\'cc \'c6\'d0\'c5\'b6 \'bc\'d2\'bd\'ba \'b5\'bf\'b1\'e2\'c8\'ad \'b8\'f0\'b5\'e5\'bf\'a1\'bc\'ad\'b4\'c2 \'c6\'d0\'c5\'b6 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'bb\'fd\'bc\'ba\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
CAUTION\par
The DMA4_CCRi[25] BUFFERING_DISABLE bit must be filled with an allowed value, as specified in Table 16-13.\par
\'c1\'d6\'c0\'c7\par
DMA4_CCRi [25] BUFFERING_DISABLE \'ba\'f1\'c6\'ae\'b4\'c2 \'c7\'a5 16-13\'bf\'a1 \'c1\'f6\'c1\'a4\'b5\'c8\'b4\'eb\'b7\'ce \'c7\'e3\'bf\'eb \'b5\'c8 \'b0\'aa\'c0\'b8\'b7\'ce \'c3\'a4\'bf\'f6\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Synchronized transfer monitoring using CDAC (DMA4_CDACi):\par
\bullet  CDAC (DMA4_CDACi)\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d1 \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'c0\'fc\'bc\'db \'b8\'f0\'b4\'cf\'c5\'cd\'b8\'b5 :\par
\par
Context is restored only when the channel becomes active on a DMA request (not at software enable).\par
\'c4\'c1\'c5\'d8\'bd\'ba\'c6\'ae\'b4\'c2 DMA \'bf\'e4\'c3\'bb\'bf\'a1\'bc\'ad \'c3\'a4\'b3\'ce\'c0\'cc \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c9 \'b6\'a7\'b8\'b8 \'ba\'b9\'bf\'f8\'b5\'cb\'b4\'cf\'b4\'d9 (\'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9 \'bb\'f3\'c5\'c2\'b0\'a1 \'be\'c6\'b4\'d4).\par
\par
The channel is software-enabled first, and then a DMA request is asserted followed by the first context restore.\par
\'b8\'d5\'c0\'fa \'c3\'a4\'b3\'ce\'c0\'cc \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'b8\'a6 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'cf\'b0\'d4 \'c7\'d1 \'b4\'d9\'c0\'bd DMA \'bf\'e4\'c3\'bb\'c0\'cc \'be\'ee\'bc\'b3 \'bc\'c7\'b5\'c7\'b0\'ed \'c3\'b9 \'b9\'f8\'c2\'b0 \'c4\'c1\'c5\'d8\'bd\'ba\'c6\'ae \'ba\'b9\'bf\'f8\'c0\'cc \'bc\'f6\'c7\'e0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The CDAC register is writable; thus, the CDAC can be initialized to monitor the transfer and determine whether the transfer is started (for more information, see Section 16.1.5.4, Synchronized Transfer Monitoring Using CDAC).\par
CDAC \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'be\'b2\'b1\'e2 \'b0\'a1\'b4\'c9\'c7\'d5\'b4\'cf\'b4\'d9. \'b5\'fb\'b6\'f3\'bc\'ad CDAC\'b4\'c2 \'c0\'fc\'bc\'db\'c0\'bb \'b8\'f0\'b4\'cf\'c5\'cd\'b8\'b5\'c7\'cf\'b0\'ed \'c0\'fc\'bc\'db\'c0\'cc \'bd\'c3\'c0\'db\'b5\'c7\'be\'fa\'b4\'c2\'c1\'f6 \'bf\'a9\'ba\'ce\'b8\'a6 \'b0\'e1\'c1\'a4\'c7\'cf\'b5\'b5\'b7\'cf \'c3\'ca\'b1\'e2\'c8\'ad \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9 (\'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba \'bc\'bd\'bc\'c7 16.1.5.4, CDAC\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d1 \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'c0\'fc\'bc\'db \'b8\'f0\'b4\'cf\'c5\'cd\'b8\'b5 \'c2\'fc\'c1\'b6).\par
\par
NOTE: For 16-bit transactions, start reading from or writing to the LSByte first to enable the register update.\par
\'c2\'fc\'b0\'ed : 16 \'ba\'f1\'c6\'ae \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'c7 \'b0\'e6\'bf\'ec LSByte\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'d0\'b1\'e2 \'b6\'c7\'b4\'c2 \'be\'b2\'b1\'e2\'b8\'a6 \'b8\'d5\'c0\'fa \'bd\'c3\'c0\'db\'c7\'cf\'bf\'a9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b8\'a6 \'c8\'b0\'bc\'ba\'c8\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
This is not an issue for 32-bit read-write transactions.\par
\'c0\'cc\'b0\'cd\'c0\'ba 32 \'ba\'f1\'c6\'ae \'c0\'d0\'b1\'e2 - \'be\'b2\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'c7 \'b0\'e6\'bf\'ec\'bf\'a1\'b4\'c2 \'b9\'ae\'c1\'a6\'b0\'a1\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.1.4.10 Thread Budget Allocation\par
16.1.4.10 \'bd\'ba\'b7\'b9\'b5\'e5 \'bf\'b9\'bb\'ea \'c7\'d2\'b4\'e7\par
\par
When several concurrent channels are latency critical and hardware synchronized, a specific latency cannot be ensured until the target is served.\par
\'bf\'a9\'b7\'af \'b0\'b3\'c0\'c7 \'b5\'bf\'bd\'c3 \'c3\'a4\'b3\'ce\'c0\'ba \'b4\'eb\'b1\'e2 \'bd\'c3\'b0\'a3\'c0\'cc \'c1\'df\'bf\'e4\'c7\'d1\'b5\'a5 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee\'b0\'a1 \'b5\'bf\'b1\'e2\'c8\'ad\'b5\'c7\'b8\'e9 \'b4\'eb\'bb\'f3\'c0\'cc \'c1\'a6\'b0\'f8 \'b5\'c9 \'b6\'a7\'b1\'ee\'c1\'f6 \'c6\'af\'c1\'a4 \'b4\'eb\'b1\'e2 \'bd\'c3\'b0\'a3\'c0\'bb \'ba\'b8\'c0\'e5 \'c7\'d2 \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
This situation occurs when the number of concurrent channels is greater than the number of available threads.\par
\'c0\'cc \'bb\'f3\'c8\'b2\'c0\'ba \'b5\'bf\'bd\'c3 \'c3\'a4\'b3\'ce \'bc\'f6\'b0\'a1 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'d1 \'bd\'ba\'b7\'b9\'b5\'e5 \'bc\'f6\'ba\'b8\'b4\'d9 \'c5\'ac \'b6\'a7 \'b9\'df\'bb\'fd\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
NOTE: Four threads are available on the read port, and two threads are available on the write port.\par
\'c2\'fc\'b0\'ed : \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae\'bf\'a1\'b4\'c2 4 \'b0\'b3\'c0\'c7 \'bd\'ba\'b7\'b9\'b5\'e5\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'c0\'b8\'b8\'e7 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'bf\'a1\'b4\'c2 2 \'b0\'b3\'c0\'c7 \'bd\'ba\'b7\'b9\'b5\'e5\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
For a hardware-synchronized transfer (memory to peripheral), a minimum bandwidth for a latency-critical transfer must be ensured to avoid collisions between two hardware requests.\par
\'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db (\'b8\'de\'b8\'f0\'b8\'ae\'bf\'a1\'bc\'ad \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1)\'c0\'c7 \'b0\'e6\'bf\'ec \'b5\'ce \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'bf\'e4\'c3\'bb \'b0\'a3\'c0\'c7 \'c3\'e6\'b5\'b9\'c0\'bb \'c7\'c7\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'b4\'eb\'b1\'e2 \'bd\'c3\'b0\'a3\'c0\'cc \'c1\'df\'bf\'e4\'c7\'d1 \'c0\'fc\'bc\'db\'c0\'bb\'c0\'a7\'c7\'d1 \'c3\'d6\'bc\'d2 \'b4\'eb\'bf\'aa\'c6\'f8\'c0\'cc \'ba\'b8\'c0\'e5\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.(\'b5\'ce\'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b0\'a1 \'c3\'e6\'b5\'bf\'c0\'bb\'c7\'c7\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8\'bc\'ad\'b4\'c2 \'b4\'eb\'b1\'e2\'bd\'c3\'b0\'a3\'c0\'cc \'c1\'df\'bf\'e4\'c7\'d1\'b5\'a5 \'c3\'d6\'bc\'d2 \'b4\'eb\'bf\'aa\'c6\'f8\'c0\'ba \'ba\'b8\'c0\'e5\'b5\'c7\'be\'ee\'be\'df\'c7\'d1\'b4\'d9.)\par
\par
Because it is latency critical, the software user is responsible for the following:\par
\'b4\'eb\'b1\'e2 \'bd\'c3\'b0\'a3\'c0\'cc \'c1\'df\'bf\'e4\'c7\'cf\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'bb\'e7\'bf\'eb\'c0\'da\'b4\'c2 \'b4\'d9\'c0\'bd\'c0\'bb \'b4\'e3\'b4\'e7\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Programming the synchronized channel as a high-priority channel\par
\bullet  \'b5\'bf\'b1\'e2 \'c3\'a4\'b3\'ce\'c0\'bb \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c3\'a4\'b3\'ce\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\par
\par
\bullet  Reserving one or several threads for high-priority channels\par
\bullet  \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d8 \'c7\'cf\'b3\'aa \'c0\'cc\'bb\'f3\'c0\'c7 \'bd\'ba\'b7\'b9\'b5\'e5 \'bf\'b9\'be\'e0\par
\par
The proposed implementation is as follows (see Section 16.1.5.5, Concurrent Software and Hardware Synchronization):\par
\'c1\'a6\'be\'c8 \'b5\'c8 \'b1\'b8\'c7\'f6\'c0\'ba \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'bd\'c0\'b4\'cf\'b4\'d9 (16.1.5.5 \'c0\'fd, \'b5\'bf\'bd\'c3 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'b9\'d7 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad \'c2\'fc\'c1\'b6).\par
\par
Prevent the regular channel queue from exceeding more than a programmable (3, 2, or 1) number of threads on the read port and no more than one thread on the write port.\par
\'c0\'cf\'b9\'dd \'c3\'a4\'b3\'ce \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'cc \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae\'c0\'c7 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b0\'a1\'b4\'c9\'c7\'d1 (3, 2 \'b6\'c7\'b4\'c2 1) \'bd\'ba\'b7\'b9\'b5\'e5\'ba\'b8\'b4\'d9 \'b8\'b9\'b0\'ed \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'c0\'c7 \'bd\'ba\'b7\'b9\'b5\'e5\'b0\'a1 \'b5\'ce \'b0\'b3\'b8\'a6 \'c3\'ca\'b0\'fa\'c7\'cf\'c1\'f6 \'be\'ca\'b5\'b5\'b7\'cf\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
This number can be set in the global register DMA4_GCR[13:12] .\par
\'c0\'cc \'bc\'f6\'b4\'c2 \'b1\'db\'b7\'ce\'b9\'fa \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd DMA4_GCR [13:12]\'bf\'a1\'bc\'ad \'bc\'b3\'c1\'a4\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The thread reservation is programmable for maximum use of thread resources for concurrent, low-priority channel transfer.\par
\'bd\'ba\'b7\'b9\'b5\'e5 \'bf\'b9\'be\'e0\'c0\'ba \'b5\'bf\'bd\'c3\'c0\'fb\'c0\'cc\'b0\'ed \'b3\'b7\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db\'c0\'bb\'c0\'a7\'c7\'d1 \'bd\'ba\'b7\'b9\'b5\'e5 \'c0\'da\'bf\'f8\'c0\'c7 \'c3\'d6\'b4\'eb \'bb\'e7\'bf\'eb\'c0\'bb \'c0\'a7\'c7\'d8 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b0\'a1\'b4\'c9\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Programmability can also allow a partial throughput control by limiting in software the number of concurrent outstanding requests that break the pipelining.\par
\'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b8\'d3 \'ba\'f4 \'b7\'af\'c6\'bc\'b4\'c2 \'b6\'c7\'c7\'d1 \'c6\'c4\'c0\'cc\'c7\'c1 \'b6\'f3\'c0\'cc\'b4\'d7\'c0\'bb \'b1\'fa\'b6\'df\'b8\'ae\'b4\'c2 \'b5\'bf\'bd\'c3 \'c3\'b3\'b8\'ae\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'ba \'bf\'e4\'c3\'bb\'c0\'c7 \'bc\'f6\'b8\'a6 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'bf\'a1 \'c1\'a6\'c7\'d1\'c7\'d4\'c0\'b8\'b7\'ce\'bd\'e1 \'ba\'ce\'ba\'d0 \'c3\'b3\'b8\'ae\'b7\'ae \'c1\'a6\'be\'ee\'b8\'a6 \'c7\'e3\'bf\'eb \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Depending on the DMA4_GCR [13:12] value, the following threadID on the read/write ports are allocated for a high-priority channel:\par
DMA4_GCR [13:12] \'b0\'aa\'bf\'a1 \'b5\'fb\'b6\'f3 \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'c0\'c7 \'b4\'d9\'c0\'bd threadID\'b0\'a1 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c3\'a4\'b3\'ce\'bf\'a1 \'c7\'d2\'b4\'e7\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Read port priority thread reservation:\par
\'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'bd\'ba\'b7\'b9\'b5\'e5 \'bf\'b9\'be\'e0 :\par
\par
\bullet  DMA4_GCR[13:12] = 0x0 => No ThreadID is reserved for high-priority channels.\par
\bullet  DMA4_GCR [13:12] = 0x0 => ThreadID\'b4\'c2 \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c3\'a4\'b3\'ce \'bf\'eb\'c0\'b8\'b7\'ce \'bf\'b9\'be\'e0\'b5\'c7\'be\'ee \'c0\'d6\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA4_GCR[13:12] = 0x1 => Read ThreadID 0 is reserved for high-priority channels.\par
\bullet  DMA4_GCR [13:12] = 0x1 => \'c0\'d0\'b1\'e2 \'bd\'ba\'b7\'b9\'b5\'e5 ID 0\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c3\'a4\'b3\'ce \'bf\'eb\'c0\'b8\'b7\'ce \'bf\'b9\'be\'e0\'b5\'c7\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA4_GCR[13:12] = 0x2 => Read ThreadID 0 and Read ThreadID 1 are reserved for high-priority channels.\par
\bullet  DMA4_GCR [13:12] = 0x2 => \'c0\'d0\'b1\'e2 \'bd\'ba\'b7\'b9\'b5\'e5 ID 0\'b0\'fa \'c0\'d0\'b1\'e2 \'bd\'ba\'b7\'b9\'b5\'e5 ID 1\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c3\'a4\'b3\'ce \'bf\'eb\'c0\'b8\'b7\'ce \'bf\'b9\'be\'e0\'b5\'c7\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA4_GCR[13:12] = 0x3 => Read ThreadID 0, Read ThreadID 1, and Read ThreadID 2 are reserved for high-priority channels.\par
\bullet  DMA4_GCR [13:12] = 0x3 => \'c0\'d0\'b1\'e2 \'bd\'ba\'b7\'b9\'b5\'e5 ID 0, \'c0\'d0\'b1\'e2 \'bd\'ba\'b7\'b9\'b5\'e5 ID 1 \'b9\'d7 \'c0\'d0\'b1\'e2 \'bd\'ba\'b7\'b9\'b5\'e5 ID 2\'b4\'c2 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c3\'a4\'b3\'ce \'bf\'eb\'c0\'b8\'b7\'ce \'bf\'b9\'be\'e0\'b5\'c7\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Write port priority thread reservation:\par
\'c6\'f7\'c6\'ae \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'be\'b2\'b7\'b9\'b5\'e5 \'bf\'b9\'be\'e0 \'be\'b2\'b1\'e2 :\par
\par
\bullet  DMA4_GCR[13:12] = 0x0 => No ThreadID is reserved for high-priority channels\par
\bullet  DMA4_GCR [13:12] = 0x0 => \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c3\'a4\'b3\'ce\'bf\'a1\'b4\'c2 ThreadID\'b0\'a1 \'bf\'b9\'be\'e0\'b5\'c7\'be\'ee \'c0\'d6\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA4_GCR[13:12] = 0x1 => Write ThreadID 0 is reserved for high-priority channels.\par
\bullet  DMA4_GCR [13:12] = 0x1 => \'be\'b2\'b1\'e2 ThreadID 0\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c3\'a4\'b3\'ce\'c0\'bb \'c0\'a7\'c7\'d8 \'bf\'b9\'be\'e0\'b5\'c7\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA4_GCR[13:12] = 0x2 => Write ThreadID 0 is reserved for high-priority channels.\par
\bullet  DMA4_GCR [13:12] = 0x2 => \'be\'b2\'b1\'e2 ThreadID 0\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c3\'a4\'b3\'ce\'c0\'bb \'c0\'a7\'c7\'d8 \'bf\'b9\'be\'e0\'b5\'c7\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA4_GCR[13:12] = 0x3 => Write ThreadID 0 is reserved for high-priority channels.\par
\bullet  DMA4_GCR [13:12] = 0x3 => \'be\'b2\'b1\'e2 ThreadID 0\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c3\'a4\'b3\'ce\'c0\'bb \'c0\'a7\'c7\'d8 \'bf\'b9\'be\'e0\'b5\'c7\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Regardless of whether the enabled channels are high priority, only the setting of the DMA4_GCR[13:12] value forces the thread reservation to these values.\par
\'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'c3\'a4\'b3\'ce\'c0\'cc \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'c0\'ce\'c1\'f6 \'bf\'a9\'ba\'ce\'bf\'a1 \'b0\'fc\'b0\'e8\'be\'f8\'c0\'cc DMA4_GCR [13:12] \'b0\'aa\'c0\'c7 \'bc\'b3\'c1\'a4 \'b8\'b8 \'bd\'ba\'b7\'b9\'b5\'e5 \'bf\'b9\'be\'e0\'c0\'bb \'c0\'cc\'b7\'af\'c7\'d1 \'b0\'aa\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Set the appropriate value to avoid losing threads using only regular channels.\par
\'c0\'cf\'b9\'dd \'c3\'a4\'b3\'ce \'b8\'b8 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'bd\'ba\'b7\'b9\'b5\'e5\'b0\'a1 \'bc\'d5\'bd\'c7\'b5\'c7\'c1\'f6 \'be\'ca\'b5\'b5\'b7\'cf \'c0\'fb\'c0\'fd\'c7\'d1 \'b0\'aa\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
To have an independent read and write priority context, a per-channel bit (DMA4_CCRi[26]) is added for write priority, and the previous priority bit becomes read priority bit (DMA4_CCRi[6]).\par
\'b5\'b6\'b8\'b3\'c0\'fb \'c0\'ce \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c4\'c1\'c5\'d8\'bd\'ba\'c6\'ae\'b8\'a6 \'b0\'a1\'c1\'f6\'b7\'c1\'b8\'e9 \'c3\'a4\'b3\'ce \'b4\'e7 \'ba\'f1\'c6\'ae (DMA4_CCRi [26])\'b0\'a1 \'be\'b2\'b1\'e2 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'bf\'a1 \'c3\'df\'b0\'a1\'b5\'c7\'b0\'ed \'c0\'cc\'c0\'fc \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'ba\'f1\'c6\'ae\'b4\'c2 \'c0\'d0\'b1\'e2 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'ba\'f1\'c6\'ae (DMA4_CCRi [6])\'b0\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
NOTE: The device has one priority bit per logical channel, not one priority bit per port.\par
\'c2\'fc\'b0\'ed : \'c0\'e5\'c4\'a1\'bf\'a1\'b4\'c2 \'c6\'f7\'c6\'ae \'b4\'e7 \'c7\'cf\'b3\'aa\'c0\'c7 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'ba\'f1\'c6\'ae\'b0\'a1 \'be\'c6\'b4\'cf\'b6\'f3 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'b4\'e7 \'c7\'cf\'b3\'aa\'c0\'c7 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'ba\'f1\'c6\'ae\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.1.4.11 FIFO Budget Allocation\par
16.1.4.11 FIFO \'bf\'b9\'bb\'ea \'c7\'d2\'b4\'e7\par
\par
To avoid fully occupying the FIFO with a high-priority transfer while low-priority channels wait in the arbitration queue, two separate FIFO budgets are specified: one for high-priority channels and one for lowpriority channels.\par
\'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'b7\'c0\'ba \'c3\'a4\'b3\'ce\'c0\'cc \'c1\'df\'c0\'e7 \'c5\'a5\'bf\'a1\'bc\'ad \'b4\'eb\'b1\'e2\'c7\'cf\'b4\'c2 \'b5\'bf\'be\'c8 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c0\'fc\'bc\'db\'c0\'cc FIFO\'b8\'a6 \'bf\'cf\'c0\'fc\'c8\'f7 \'c2\'f7\'c1\'f6\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'b8\'b7\'c1\'b8\'e9 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c3\'a4\'b3\'ce\'b0\'fa \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'b7\'c0\'ba \'c3\'a4\'b3\'ce\'c0\'bb\'c0\'a7\'c7\'d8 \'b5\'ce \'b0\'b3\'c0\'c7 \'ba\'b0\'b5\'b5\'c0\'c7 FIFO \'bf\'b9\'bb\'ea\'c0\'cc  \'c1\'f6\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9.\par
This is defined in the DMA4_GCR register, allowing the user to share the FIFO budget between the low- and high-priority channels.\par
\'c0\'cc\'b0\'cd\'c0\'ba DMA4_GCR \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c1\'a4\'c0\'c7\'b5\'c7\'be\'ee\'c0\'d6\'be\'ee \'bb\'e7\'bf\'eb\'c0\'da\'b0\'a1 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'b7\'c0\'ba \'c3\'a4\'b3\'ce\'b0\'fa \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c3\'a4\'b3\'ce\'b0\'a3\'bf\'a1 FIFO \'bf\'b9\'bb\'ea\'c0\'bb \'b0\'f8\'c0\'af \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The amount of the FIFO allocated by the low- and highpriority channels is fixed by the value set in the DMA4_GCR[15:14] HI_LO_FIFO_BUDGET field.\par
\'c0\'fa \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c3\'a4\'b3\'ce\'b0\'fa \'b0\'ed \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c3\'a4\'b3\'ce\'bf\'a1 \'c0\'c7\'c7\'d8 \'c7\'d2\'b4\'e7 \'b5\'c8 FIFO\'c0\'c7 \'be\'e7\'c0\'ba DMA4_GCR [15:14] HI_LO_FIFO_BUDGET \'c7\'ca\'b5\'e5\'bf\'a1 \'bc\'b3\'c1\'a4\'b5\'c8 \'b0\'aa\'c0\'b8\'b7\'ce \'b0\'ed\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The maximum channel FIFO depth is limited by the HI_LO_FIFO_BUDGET field as follows:\par
If the channel is low priority:\par
\'c3\'d6\'b4\'eb \'c3\'a4\'b3\'ce FIFO \'b1\'ed\'c0\'cc\'b4\'c2 \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'cc HI_LO_FIFO_BUDGET \'c7\'ca\'b5\'e5\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'a6\'c7\'d1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\'c3\'a4\'b3\'ce\'c0\'c7 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'b7\'c0\'ba \'b0\'e6\'bf\'ec :\par
\par
\bullet  When HI_LO_FIFO_BUDGET = 0x1, then low priority cannot exceed 75 percent of the total FIFO.\par
\bullet  HI_LO_FIFO_BUDGET = 0x1 \'c0\'cf \'b6\'a7 \'b3\'b7\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b4\'c2 \'c0\'fc\'c3\'bc FIFO\'c0\'c7 75 %\'b8\'a6 \'c3\'ca\'b0\'fa \'c7\'d2 \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  When HI_LO_FIFO_BUDGET = 0x2, then low priority cannot exceed 25 percent of the total FIFO.\par
\bullet  HI_LO_FIFO_BUDGET = 0x2 \'c0\'cf \'b6\'a7 \'b3\'b7\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b4\'c2 \'c0\'fc\'c3\'bc FIFO\'c0\'c7 25 %\'b8\'a6 \'c3\'ca\'b0\'fa \'c7\'d2 \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  When HI_LO_FIFO_BUDGET = 0x3, then low priority cannot exceed 50 percent of the total FIFO.\par
\bullet  HI_LO_FIFO_BUDGET = 0x3 \'c0\'cf \'b6\'a7 \'b3\'b7\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b4\'c2 \'c0\'fc\'c3\'bc FIFO\'c0\'c7 50 %\'b8\'a6 \'c3\'ca\'b0\'fa \'c7\'d2 \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
If channel is high priority\par
\'c3\'a4\'b3\'ce\'c0\'cc \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c0\'ce \'b0\'e6\'bf\'ec\par
\par
\bullet  When HI_LO_FIFO_BUDGET = 0x1, then high priority cannot exceed 25 percent of the total FIFO.\par
\bullet  HI_LO_FIFO_BUDGET = 0x1 \'c0\'cf \'b6\'a7 \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b4\'c2 \'c0\'fc\'c3\'bc FIFO\'c0\'c7 25 %\'b8\'a6 \'c3\'ca\'b0\'fa \'c7\'d2 \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  When HI_LO_FIFO_BUDGET = 0x2, then high priority cannot exceed 75 percent of the total FIFO.\par
\bullet  HI_LO_FIFO_BUDGET = 0x2 \'c0\'cf \'b6\'a7 \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b4\'c2 \'c0\'fc\'c3\'bc FIFO\'c0\'c7 75 %\'b8\'a6 \'c3\'ca\'b0\'fa \'c7\'d2 \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  When HI_LO_FIFO_BUDGET = 0x3, then high priority cannot exceed 50 percent of the total FIFO.\par
\bullet  HI_LO_FIFO_BUDGET = 0x3 \'c0\'cf \'b6\'a7 \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b4\'c2 \'c0\'fc\'c3\'bc FIFO\'c0\'c7 50 %\'b8\'a6 \'c3\'ca\'b0\'fa \'c7\'d2 \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The user must perform the following equation:\par
\'bb\'e7\'bf\'eb\'c0\'da\'b4\'c2 \'b4\'d9\'c0\'bd \'b9\'e6\'c1\'a4\'bd\'c4\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  For a high-priority channel: (Per_Channel_Maximum FIFO Depth + 1) x Number of High Channel =< High Budget FIFO\par
\bullet  \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c3\'a4\'b3\'ce : (Per_Channel_Maximum FIFO Depth + 1) x High Channel \'bc\'f6 = <High Budget FIFO\par
\par
\bullet  For a low-priority channel: (Per_Channel_Maximum FIFO Depth + 1) x Number of Low Channel =< Low Budget FIFO\par
\bullet  \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'b7\'c0\'ba \'c3\'a4\'b3\'ce\'c0\'c7 \'b0\'e6\'bf\'ec : (Per_Channel_Maximum FIFO Depth + 1) x Low Channel \'bc\'f6 = <Low Budget FIFO\par
\par
NOTE: Ensure that Number of High Channel means Number of Active High-Priority Channel and that Number of Low Channel means Number of Active Low-Priority Channel.\par
\'c2\'fc\'b0\'ed : \'b3\'f4\'c0\'ba \'c3\'a4\'b3\'ce \'bc\'f6\'b4\'c2 \'c8\'b0\'bc\'ba \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c3\'a4\'b3\'ce \'bc\'f6\'b8\'a6 \'c0\'c7\'b9\'cc\'c7\'cf\'b0\'ed \'b3\'b7\'c0\'ba \'c3\'a4\'b3\'ce \'bc\'f6\'b4\'c2 \'c8\'b0\'bc\'ba \'b3\'b7\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c3\'a4\'b3\'ce \'bc\'f6\'b8\'a6 \'c0\'c7\'b9\'cc\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.1.4.12 Chained Logical Channel Transfers\par
16.1.4.12 \'bf\'ac\'b0\'e1\'b5\'c8 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db\par
\par
Chaining multiple logical channels permits transfers consisting of multiple parts to be executed without repeated software intervention.\par
\'b4\'d9\'c1\'df \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'bb \'bf\'ac\'b0\'e1\'c7\'cf\'b8\'e9 \'b9\'dd\'ba\'b9\'c0\'fb \'c0\'ce \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'b0\'b3\'c0\'d4\'be\'f8\'c0\'cc \'bf\'a9\'b7\'af \'ba\'ce\'ba\'d0\'c0\'b8\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'c8 \'c0\'fc\'bc\'db\'c0\'cc \'bd\'c7\'c7\'e0\'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.(\'bf\'ac\'b0\'e1 \'b5\'c7\'b8\'e9 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'b0\'b3\'c0\'d4\'be\'f8\'c0\'cc \'b4\'d9\'b8\'a5 \'b0\'cd\'b5\'e9\'b5\'b5 \'c0\'fc\'bc\'db\'c0\'cc \'b0\'a1\'b4\'c9\'c7\'cf\'b4\'d9.)\par
\par
This results in better performance than the alternative of software setting up and starting each transfer separately.\par
\'c0\'cc\'b4\'c2 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'b0\'ed \'b0\'a2 \'c0\'fc\'bc\'db\'c0\'bb \'ba\'b0\'b5\'b5\'b7\'ce \'bd\'c3\'c0\'db\'c7\'cf\'b4\'c2 \'b4\'eb\'be\'c8\'ba\'b8\'b4\'d9 \'b3\'aa\'c0\'ba \'bc\'ba\'b4\'c9\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Each part of a chained transfer can have the data addressed in a different manner that permits the programming of a variety of complex transfers.\par
\'c3\'bc\'c0\'ce\'c8\'ad \'b5\'c8 \'b0\'a2\'ba\'ce\'ba\'d0\'c0\'c7 \'c0\'fc\'bc\'db\'c0\'ba \'b4\'d9\'be\'e7\'c7\'d1 \'ba\'b9\'c0\'e2\'c7\'d1 \'c0\'fc\'bc\'db\'c0\'bb \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c7\'d2 \'bc\'f6\'c0\'d6\'b4\'c2 \'b4\'d9\'b8\'a5 \'b9\'e6\'bd\'c4\'c0\'b8\'b7\'ce \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c3\'b3\'b8\'ae \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
  (\'c3\'bc\'c0\'ce\'c8\'ad \'b5\'c7\'b0\'ed \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'b5\'c8  \'b0\'a2\'ba\'ce\'ba\'d0\'c0\'bb \'b4\'d9\'b8\'a5\'b9\'e6\'bd\'c4\'c0\'b8\'b7\'ce \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c3\'b3\'b8\'ae\'c7\'d2\'bc\'f6\'c0\'d6\'b4\'d9.)\par
\par
For example:\par
\bullet  Interlaced video data with one logical channel configured to transfer the even lines and another logical channel configured to transfer the odd lines\par
\'bf\'b9 :\par
\bullet  \'c2\'a6\'bc\'f6 \'b6\'f3\'c0\'ce\'c0\'bb \'c0\'fc\'bc\'db\'c7\'cf\'b5\'b5\'b7\'cf \'b1\'b8\'bc\'ba\'b5\'c8 \'c7\'cf\'b3\'aa\'c0\'c7 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'b0\'fa \'c8\'a6\'bc\'f6 \'b6\'f3\'c0\'ce\'c0\'bb \'c0\'fc\'bc\'db\'c7\'cf\'b5\'b5\'b7\'cf \'b1\'b8\'bc\'ba\'b5\'c8 \'b4\'d9\'b8\'a5 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'bb \'b0\'ae\'b4\'c2 \'c0\'ce\'c5\'cd\'b7\'b9\'c0\'cc\'bd\'ba \'ba\'f1\'b5\'f0\'bf\'c0 \'b5\'a5\'c0\'cc\'c5\'cd\par
\par
\bullet  Protocol headers with a separate DMA4 channel configured to transfer each field in the header\par
\bullet  \'c7\'ec\'b4\'f5\'c0\'c7 \'b0\'a2 \'c7\'ca\'b5\'e5\'b8\'a6 \'c0\'fc\'bc\'db\'c7\'cf\'b5\'b5\'b7\'cf \'b1\'b8\'bc\'ba\'b5\'c8 \'ba\'b0\'b5\'b5\'c0\'c7 DMA4 \'c3\'a4\'b3\'ce\'c0\'cc\'c0\'d6\'b4\'c2 \'c7\'c1\'b7\'ce\'c5\'e4\'c4\'dd \'c7\'ec\'b4\'f5\par
\par
Channels can be chained through each channel DMA4_CLNK_CTRLi register.\par
\'b0\'a2 \'c3\'a4\'b3\'ce DMA4_CLNK_CTRLi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 \'c3\'a4\'b3\'ce\'c0\'bb \'bf\'ac\'b0\'e1\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
When the transfer for the first channel completes, the next channel in the chain is enabled.\par
\'c3\'b9 \'b9\'f8\'c2\'b0 \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'fc\'bc\'db\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'b8\'e9 \'c3\'bc\'c0\'ce\'c0\'c7 \'b4\'d9\'c0\'bd \'c3\'a4\'b3\'ce\'c0\'cc \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9\par
\par
The number of channels in the chain that are configured for hardware-synchronized transfers is flexible (although typically it may be all, none, or simply the first one).\par
\'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db \'bf\'eb\'c0\'b8\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'c8 \'c3\'bc\'c0\'ce\'c0\'c7 \'c3\'a4\'b3\'ce \'bc\'f6\'b4\'c2 \'c0\'af\'bf\'ac\'c7\'d5\'b4\'cf\'b4\'d9 (\'c0\'cf\'b9\'dd\'c0\'fb\'c0\'b8\'b7\'ce \'b8\'f0\'b5\'ce, \'be\'f8\'c0\'bd \'b6\'c7\'b4\'c2 \'b0\'a3\'b4\'dc\'c8\'f7 \'c3\'b9 \'b9\'f8\'c2\'b0 \'c3\'a4\'b3\'ce \'c0\'cf \'bc\'f6 \'c0\'d6\'c0\'bd).\par
\par
The DMA request line number must be set to 0 to specify that any or all of the channels in a chain are software-triggered or nonsynchronized.\par
DMA \'bf\'e4\'c3\'bb \'b6\'f3\'c0\'ce \'b9\'f8\'c8\'a3\'b4\'c2 \'c3\'bc\'c0\'ce\'c0\'c7 \'b8\'f0\'b5\'e7 \'c3\'a4\'b3\'ce\'c0\'cc \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'c6\'ae\'b8\'ae\'b0\'c5\'b5\'c7\'b0\'c5\'b3\'aa \'ba\'f1 \'b5\'bf\'b1\'e2\'c8\'ad\'b5\'c7\'b5\'b5\'b7\'cf \'c1\'f6\'c1\'a4\'c7\'cf\'b7\'c1\'b8\'e9 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The last channel in a chain can be chained to the first channel to create a continuously looping chain.\par
\'c3\'bc\'c0\'ce\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'c3\'a4\'b3\'ce\'c0\'ba \'bf\'ac\'bc\'d3\'c0\'fb\'c0\'b8\'b7\'ce \'b9\'dd\'ba\'b9\'b5\'c7\'b4\'c2 \'c3\'bc\'c0\'ce\'c0\'bb \'b8\'b8\'b5\'e9\'b1\'e2 \'c0\'a7\'c7\'d8 \'c3\'b9 \'b9\'f8\'c2\'b0 \'c3\'a4\'b3\'ce\'bf\'a1 \'bf\'ac\'b0\'e1\'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The continuously looping transfer can be stopped on the fly at a specific channel by disabling the DMA4_CLNK_CTRLi[15] ENABLE_LNK bit.\par
\'bf\'ac\'bc\'d3\'c0\'fb\'c0\'b8\'b7\'ce \'b9\'dd\'ba\'b9\'b5\'c7\'b4\'c2 \'c0\'fc\'bc\'db\'c0\'ba DMA4_CLNK_CTRLi [15] ENABLE_LNK \'ba\'f1\'c6\'ae\'b8\'a6 \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad\'c7\'cf\'bf\'a9 \'c6\'af\'c1\'a4 \'c3\'a4\'b3\'ce\'bf\'a1\'bc\'ad \'c1\'ef\'bd\'c3 \'c1\'df\'c1\'f6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The looping transfer stops after the specified channel transfer is complete...\par
\'c1\'f6\'c1\'a4\'b5\'c8 \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'b8\'e9 \'b7\'e7\'c7\'ce \'c0\'fc\'bc\'db\'c0\'cc \'c1\'df\'c1\'f6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
NOTE: A DMA request line must not be shared between concurrently enabled DMA channels.\par
\'c2\'fc\'b0\'ed : DMA \'bf\'e4\'c3\'bb \'c1\'d9\'c0\'ba \'b5\'bf\'bd\'c3\'bf\'a1 \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 DMA \'c3\'a4\'b3\'ce\'b0\'a3\'bf\'a1 \'b0\'f8\'c0\'af\'b5\'c7\'be\'ee\'bc\'ad\'b4\'c2 \'be\'c8\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
However, a DMA request line can be shared between several chained logical channels.\par
\'b1\'d7\'b7\'af\'b3\'aa DMA \'bf\'e4\'c3\'bb \'b6\'f3\'c0\'ce\'c0\'ba \'bf\'a9\'b7\'af \'b0\'b3\'c0\'c7 \'bf\'ac\'b0\'e1\'b5\'c8 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'b0\'a3\'bf\'a1 \'b0\'f8\'c0\'af \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
For more information about the programming model, see Section 16.1.5, DMA_SYSTEM Basic Programming Model.\par
\'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b8\'f0\'b5\'a8\'bf\'a1 \'b4\'eb\'c7\'d1 \'b4\'f5 \'c0\'da\'bc\'bc\'c7\'d1 \'c1\'a4\'ba\'b8\'b4\'c2 Section 16.1.5, DMA_SYSTEM \'b1\'e2\'ba\'bb \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b8\'f0\'b5\'a8\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.1.4.13 Reprogramming an Active Channel A currently active logical DMA channel can be disabled through the DMA4_CCRi[7] ENABLE bit. When an ongoing transaction is complete and the read-active and write-active bits in the DMA4_CCRi register (DMA4_CCRi[9] RD_ACTIVE and DMA4_CCRi[10] WR_ACTIVE) are reset, the channel can be reprogrammed for a new transfer.\par
\par
16.1.4.13 Reprogramming an Active Channel\par
16.1.4.13 \'be\'d7\'c6\'bc\'ba\'ea \'c3\'a4\'b3\'ce \'c0\'e7 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\par
\par
A currently active logical DMA channel can be disabled through the DMA4_CCRi[7] ENABLE bit.\par
\'c7\'f6\'c0\'e7 \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'b3\'ed\'b8\'ae\'c0\'fb DMA \'c3\'a4\'b3\'ce\'c0\'ba DMA4_CCRi [7] ENABLE \'ba\'f1\'c6\'ae\'b8\'a6 \'c5\'eb\'c7\'d8 \'b5\'f0\'bd\'ba \'bf\'a1\'c0\'cc\'ba\'ed \'b5\'c9 \'bc\'f6\'c0\'d6\'b4\'d9..\par
\par
When an ongoing transaction is complete and the read-active and write-active bits in the DMA4_CCRi register (DMA4_CCRi[9] RD_ACTIVE and DMA4_CCRi[10] WR_ACTIVE) are reset, the channel can be reprogrammed for a new transfer.\par
\'c1\'f8\'c7\'e0\'c1\'df\'c0\'ce \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'b0\'ed DMA4_CCRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'c0\'d0\'b1\'e2 \'c8\'b0\'bc\'ba \'b9\'d7 \'be\'b2\'b1\'e2 \'c8\'b0\'bc\'ba \'ba\'f1\'c6\'ae (DMA4_CCRi [9] RD_ACTIVE \'b9\'d7 DMA4_CCRi [10] WR_ACTIVE)\'b0\'a1 \'c0\'e7\'bc\'b3\'c1\'a4\'b5\'c7\'b8\'e9 \'c3\'a4\'b3\'ce\'c0\'bb \'bb\'f5 \'c0\'fc\'bc\'db\'c0\'bb \'c0\'a7\'c7\'d8 \'b4\'d9\'bd\'c3 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.1.4.14 Packet Synchronization\par
16.1.4.14 \'c6\'d0\'c5\'b6 \'b5\'bf\'b1\'e2\'c8\'ad\par
\par
A packet transfer notion is related to the behavior of some peripherals, which have certain buffering capability and requires to transfer the buffer content once an element number threshold is reached (a hardware DMA request is generated).\par
\'c6\'d0\'c5\'b6 \'c0\'fc\'bc\'db \'b0\'b3\'b3\'e4\'c0\'ba \'c6\'af\'c1\'a4 \'b9\'f6\'c6\'db\'b8\'b5 \'b1\'e2\'b4\'c9\'c0\'bb \'b0\'a1\'c1\'f6\'b0\'ed \'c0\'d6\'c0\'b8\'b8\'e7 \'bf\'e4\'bc\'d2 \'b9\'f8\'c8\'a3 \'c0\'d3\'b0\'e8 \'b0\'aa\'bf\'a1 \'b5\'b5\'b4\'de\'c7\'cf\'b8\'e9 (\'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee DMA \'bf\'e4\'c3\'bb\'c0\'cc \'bb\'fd\'bc\'ba\'b5\'c7\'b8\'e9) \'b9\'f6\'c6\'db \'b3\'bb\'bf\'eb\'c0\'bb \'c0\'fc\'bc\'db\'c7\'d8\'be\'df\'c7\'cf\'b4\'c2 \'c0\'cf\'ba\'ce \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'c0\'c7 \'b5\'bf\'c0\'db\'b0\'fa \'b0\'fc\'b7\'c3\'b5\'cb\'b4\'cf\'b4\'d9.\par
( \'c6\'d0\'c5\'b6 \'c0\'fc\'bc\'db \'b0\'b3\'b3\'e4\'c0\'ba \'c6\'af\'c1\'a4 \'b9\'f6\'c6\'db\'b8\'b5 \'b1\'e2\'b4\'c9\'c0\'bb \'b0\'a1\'c1\'f6\'b0\'ed \'c0\'d6\'b0\'ed \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee DMA\'bf\'e4\'c3\'bb\'c0\'cc \'bb\'fd\'bc\'ba\'b5\'c7\'b4\'c2\'b0\'c7 \'b9\'f6\'c6\'db\'b3\'bb\'bf\'eb\'c0\'bb \'c0\'fc\'bc\'db\'c7\'cf\'b4\'c2 \'c0\'cf\'ba\'ce \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1 \'b5\'bf\'c0\'db\'b0\'fa \'b0\'fc\'b7\'c3 \'c0\'d6\'b4\'d9.)\par
\par
To associate a frame synchronization to each DMA request is possible, but this limits the maximum transfer size.\par
\'b0\'a2 DMA \'bf\'e4\'c3\'bb\'bf\'a1 \'c7\'c1\'b7\'b9\'c0\'d3 \'b5\'bf\'b1\'e2\'c8\'ad\'b8\'a6 \'bf\'ac\'b0\'e1\'c7\'d2 \'bc\'f6\'b4\'c2 \'c0\'d6\'c1\'f6\'b8\'b8 \'c3\'d6\'b4\'eb \'c0\'fc\'bc\'db \'c5\'a9\'b1\'e2\'b0\'a1 \'c1\'a6\'c7\'d1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Indeed the maximum transfer size is proportional to the FIFO depth of the peripheral:\par
\'bd\'c7\'c1\'a6 \'c3\'d6\'b4\'eb \'c0\'fc\'bc\'db \'c5\'a9\'b1\'e2\'b4\'c2 \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'c0\'c7 FIFO \'b1\'ed\'c0\'cc\'bf\'a1 \'ba\'f1\'b7\'ca\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
maximum_transfer_size =peripheral_FIFO_depth x number_of_frame_in_block The packet synchronization allows to dissociate the transfer size from the FIFO depth of the peripheral.\par
maximum_transfer_size = peripheral_FIFO_depth x number_of_frame_in_block \'c6\'d0\'c5\'b6 \'b5\'bf\'b1\'e2\'c8\'ad\'b4\'c2 \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'c0\'c7 FIFO \'b1\'ed\'c0\'cc\'bf\'a1\'bc\'ad \'c0\'fc\'bc\'db \'c5\'a9\'b1\'e2\'b8\'a6 \'ba\'d0\'b8\'ae\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Only Constant addressing mode is allowed on a read port or a write port if source target or destination target is packet synchronized respectively.\par
\'bf\'f8\'ba\'bb \'b4\'eb\'bb\'f3 \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3\'c0\'cc \'b0\'a2\'b0\'a2 \'c6\'d0\'c5\'b6 \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'b0\'e6\'bf\'ec \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae \'b6\'c7\'b4\'c2 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'bf\'a1\'bc\'ad \'bb\'f3\'bc\'f6 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5 \'b8\'b8 \'c7\'e3\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Example:\par
Consider a camera interface with a FIFO_depth of 128 words and a FIFO_element_number_threshold of 128, and a picture to transfer with a size 320 lines by 240 columns.\par
\'bf\'b9:\par
FIFO_depth\'b0\'a1 128 \'bf\'f6\'b5\'e5\'c0\'cc\'b0\'ed FIFO_element_number_threshold\'b0\'a1 128 \'c0\'ce \'c4\'ab\'b8\'de\'b6\'f3 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'bf\'cd \'c5\'a9\'b1\'e2 320 \'c7\'e0 \'a1\'bf 240 \'bf\'ad\'b7\'ce \'c0\'fc\'bc\'db\'c7\'d2 \'b1\'d7\'b8\'b2\'c0\'bb \'b0\'ed\'b7\'c1\'c7\'d8\'ba\'b8\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
 If frame synchronization is associated with each DMA request then the maximum transfer size that can be performed is 128x216 words.\par
 \'c7\'c1\'b7\'b9\'c0\'d3 \'b5\'bf\'b1\'e2\'c8\'ad\'b0\'a1 \'b0\'a2 DMA \'bf\'e4\'c3\'bb\'b0\'fa \'b0\'fc\'b7\'c3\'b5\'c7\'b8\'e9 \'bc\'f6\'c7\'e0 \'c7\'d2 \'bc\'f6\'c0\'d6\'b4\'c2 \'c3\'d6\'b4\'eb \'c0\'fc\'bc\'db \'c5\'a9\'b1\'e2\'b4\'c2 128x216 \'bf\'f6\'b5\'e5\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
In this case, a frame is 128-word long, which does not fit the size of a line, and it is not possible to generate an interrupt at the end of line.\par
\'c0\'cc \'b0\'e6\'bf\'ec \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'ba \'b1\'e6\'c0\'cc\'b0\'a1 128 \'bf\'f6\'b5\'e5\'c0\'cc\'b0\'ed \'c1\'d9\'c0\'c7 \'c5\'a9\'b1\'e2\'bf\'a1 \'b8\'c2\'c1\'f6 \'be\'ca\'c0\'b8\'b9\'c7\'b7\'ce \'c1\'d9 \'b3\'a1\'bf\'a1\'bc\'ad \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba \'c7\'d2 \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
However, by introducing the packet transfer notion, which is related to the peripheral FIFO behavior/structure, the maximum transfer size (maximum_transfer_size = 2 24 x 2 16 words) is independent of both peripheral_FIFO_depth and FIFO_element_number_threshold.\par
\'b1\'d7\'b7\'af\'b3\'aa \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1 FIFO \'b5\'bf\'c0\'db / \'b1\'b8\'c1\'b6\'bf\'cd \'b0\'fc\'b7\'c3\'b5\'c8 \'c6\'d0\'c5\'b6 \'c0\'fc\'bc\'db \'b0\'b3\'b3\'e4\'c0\'bb \'b5\'b5\'c0\'d4\'c7\'cf\'b8\'e9 \'c3\'d6\'b4\'eb \'c0\'fc\'bc\'db \'c5\'a9\'b1\'e2 (maximum_transfer_size = 2 24 x 2 16 \'b4\'dc\'be\'ee)\'b4\'c2 peripheral_FIFO_depth \'b9\'d7 FIFO_element_number_threshold\'bf\'cd \'b5\'b6\'b8\'b3\'c0\'fb\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
This allows a longenough transfer within one channel context and rotation operation on a large image format.\par
\'c0\'cc\'b8\'a6 \'c5\'eb\'c7\'d8 \'c7\'cf\'b3\'aa\'c0\'c7 \'c3\'a4\'b3\'ce \'c4\'c1\'c5\'d8\'bd\'ba\'c6\'ae \'b3\'bb\'bf\'a1\'bc\'ad \'bf\'c0\'b7\'a1 \'c0\'fc\'bc\'db\'c7\'d2 \'bc\'f6 \'c0\'d6\'c0\'b8\'b8\'e7 \'c5\'ab \'c0\'cc\'b9\'cc\'c1\'f6 \'c7\'fc\'bd\'c4\'c0\'b8\'b7\'ce \'c8\'b8\'c0\'fc \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The main features of DMA Packet transfer are as follows:\par
DMA \'c6\'d0\'c5\'b6 \'c0\'fc\'bc\'db\'c0\'c7 \'c1\'d6\'bf\'e4 \'b1\'e2\'b4\'c9\'c0\'ba \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA Packet_Data_Size for each DMA Request: The Peripheral_element_number_threshold (the number of elements in a packet) shares the DMA4_CSFIi and DMA4_CDFIi configuration registers.\par
\bullet  \'b0\'a2 DMA \'bf\'e4\'c3\'bb\'bf\'a1 \'b4\'eb\'c7\'d1 DMA Packet_Data_Size : Peripheral_element_number_threshold (\'c6\'d0\'c5\'b6\'c0\'c7 \'bf\'e4\'bc\'d2 \'bc\'f6)\'b4\'c2 DMA4_CSFIi \'b9\'d7 DMA4_CDFIi \'b1\'b8\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'b0\'f8\'c0\'af\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
If the peripheral is the source target, the addressing mode is constant, and the DMA4_CSFIi[15:0] bit field is used to specify the packet data size in the DMA4_CSFIi register.\par
\'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'b0\'a1 \'bc\'d2\'bd\'ba \'c5\'b8\'b1\'ea \'c0\'ce \'b0\'e6\'bf\'ec, \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5\'b4\'c2 \'c0\'cf\'c1\'a4\'c7\'cf\'b0\'ed DMA4_CSFIi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'c6\'d0\'c5\'b6 \'b5\'a5\'c0\'cc\'c5\'cd \'c5\'a9\'b1\'e2\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 DMA4_CSFIi [15 : 0] \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b0\'a1 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The user must set the DMA.SDMA4_CCRi[24] SEL_SRC_DST_SYNC bit to 1.\par
\'bb\'e7\'bf\'eb\'c0\'da\'b4\'c2 DMA.SDMA4_CCRi [24] SEL_SRC_DST_SYNC \'ba\'f1\'c6\'ae\'b8\'a6 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
If the peripheral is the destination target, the addressing mode is constant, the DMA4_CDFIi[15:0], is used to specify the packet data size (PKT_ELNT_NBR), and the bit field [31:16] is unused.\par
  DMA4_CDFIi [15 : 0]\'b4\'c2 \'c6\'d0\'c5\'b6 \'b5\'a5\'c0\'cc\'c5\'cd \'c5\'a9\'b1\'e2 (PKT_ELNT_NBR)\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'cf\'b4\'c2\'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'c7\'b0\'ed, \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5 [31:16]\'c0\'ba \'bb\'e7\'bf\'eb\'b5\'c7\'c1\'f6 \'be\'ca\'b4\'c2\'b4\'d9.\par
\par
To specify the packet data size in the DMA4_CDFIi register, the user must set the DMA4_CCRi[24] SEL_SRC_DST_SYNC bit to 0.\par
DMA4_CDFIi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'c6\'d0\'c5\'b6 \'b5\'a5\'c0\'cc\'c5\'cd \'c5\'a9\'b1\'e2\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'cf\'b7\'c1\'b8\'e9 DMA4_CCRi [24] SEL_SRC_DST_SYNC \'ba\'f1\'c6\'ae\'b8\'a6 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
NOTE: The packet size can be a submultiple or non-submultiple of a frame size.\par
\'c2\'fc\'b0\'ed : \'c6\'d0\'c5\'b6 \'c5\'a9\'b1\'e2\'b4\'c2 \'c7\'c1\'b7\'b9\'c0\'d3 \'c5\'a9\'b1\'e2\'c0\'c7 \'be\'e0\'bc\'f6 \'b6\'c7\'b4\'c2 \'be\'e0\'bc\'f6\'be\'c6\'b4\'d1 \'b0\'cd \'c0\'cf \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
If DMA Packet_Data_Size is aligned on the DMA channel block data size boundary, then DMA transfers the last data in the channel block boundary and stops at the block boundary for the last packet DMA Request.\par
DMA Packet_Data_Size\'b0\'a1 DMA \'c3\'a4\'b3\'ce \'ba\'ed\'b7\'cf \'b5\'a5\'c0\'cc\'c5\'cd \'c5\'a9\'b1\'e2 \'b0\'e6\'b0\'e8\'bf\'a1 \'c1\'a4\'b7\'c4\'b5\'c7\'b8\'e9 DMA\'b4\'c2 \'c3\'a4\'b3\'ce \'ba\'ed\'b7\'cf \'b0\'e6\'b0\'e8\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fc\'bc\'db\'c7\'cf\'b0\'ed \'b8\'b6\'c1\'f6\'b8\'b7 \'c6\'d0\'c5\'b6 DMA \'bf\'e4\'c3\'bb\'c0\'c7 \'ba\'ed\'b7\'cf \'b0\'e6\'b0\'e8\'bf\'a1\'bc\'ad \'c1\'df\'c1\'f6\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
If the Packet_Data_size is not aligned on the block boundary, the remaining data smaller than a packet size are transferred using burst or single accesses to complete the block.\par
Packet_Data_size\'b0\'a1 \'ba\'ed\'b7\'cf \'b0\'e6\'b0\'e8\'bf\'a1 \'c1\'a4\'b7\'c4\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 \'c6\'d0\'c5\'b6 \'c5\'a9\'b1\'e2\'ba\'b8\'b4\'d9 \'c0\'db\'c0\'ba \'b3\'aa\'b8\'d3\'c1\'f6 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'b9\'f6\'bd\'ba\'c6\'ae \'b6\'c7\'b4\'c2 \'b4\'dc\'c0\'cf \'be\'d7\'bc\'bc\'bd\'ba\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'c0\'fc\'bc\'db\'b5\'c7\'be\'ee \'ba\'ed\'b7\'cf\'c0\'bb \'bf\'cf\'b7\'e1\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA Packet_Data_Transfer does not affect DMA channel capabilities in term of packing and bursting.\par
\bullet  DMA Packet_Data_Transfer\'b4\'c2 \'c6\'d0\'c5\'b7 \'b9\'d7 \'b9\'f6\'bd\'ba\'c6\'ae\'c0\'c7 \'b0\'e6\'bf\'ec DMA \'c3\'a4\'b3\'ce \'b1\'e2\'b4\'c9\'bf\'a1 \'bf\'b5\'c7\'e2\'c0\'bb\'c1\'d6\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The packet synchronization mode is active when DMA4_CCRi[5] FS = DMA4_CCRi[18] BS = 1. Then:\par
\'c6\'d0\'c5\'b6 \'b5\'bf\'b1\'e2\'c8\'ad \'b8\'f0\'b5\'e5\'b4\'c2 DMA4_CCRi [5] FS = DMA4_CCRi [18] BS = 1 \'c0\'cf \'b6\'a7 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\endash  If DMA4_CCRi[24] SEL_SRC_DST_SYNC = 0, the DMA4_CDFIi[15:0] bit field gives the number of elements in the packet and the DMA4_CDFIi[31:16] bit field is unused for the packet size.\par
- DMA4_CCRi [24] SEL_SRC_DST_SYNC = 0\'c0\'cc\'b8\'e9 DMA4_CDFIi [15 : 0] \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b4\'c2 \'c6\'d0\'c5\'b6\'c0\'c7 \'bf\'e4\'bc\'d2 \'bc\'f6\'b8\'a6 \'c1\'a6\'b0\'f8\'c7\'cf\'b0\'ed DMA4_CDFIi [31:16] \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b4\'c2 \'c6\'d0\'c5\'b6 \'c5\'a9\'b1\'e2\'b7\'ce \'bb\'e7\'bf\'eb\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\endash  If DMA4_CCRi[24] SEL_SRC_DST_SYNC = 1, the DMA4_CSFIi[15:0] bit field gives the number of elements in the packet and the DMA4_CSFIi[31:16] bit field is unused for the packet size.\par
- DMA4_CCRi [24] SEL_SRC_DST_SYNC = 1 \'c0\'ce \'b0\'e6\'bf\'ec DMA4_CSFIi [15 : 0] \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b4\'c2 \'c6\'d0\'c5\'b6\'c0\'c7 \'bf\'e4\'bc\'d2 \'bc\'f6\'b8\'a6 \'c1\'a6\'b0\'f8\'c7\'cf\'b0\'ed DMA4_CSFIi [31:16] \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b4\'c2 \'c6\'d0\'c5\'b6 \'c5\'a9\'b1\'e2\'b7\'ce \'bb\'e7\'bf\'eb\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
NOTE: The maximum transfer size, regardless of the packet size, is always:\par
\'c2\'fc\'b0\'ed : \'c6\'d0\'c5\'b6 \'c5\'a9\'b1\'e2\'bf\'a1 \'b0\'fc\'b0\'e8\'be\'f8\'c0\'cc \'c3\'d6\'b4\'eb \'c0\'fc\'bc\'db \'c5\'a9\'b1\'e2\'b4\'c2 \'c7\'d7\'bb\'f3 \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Block_size = Number_of_Frame_in_Block x Number_of_Element_in_Frame x Element_Size.\par
\par
If DMA channel packet/burst access is across the packet boundary, the DMA hardware automatically splits this packing/burst access into multiple smaller accesses that are aligned on the packet boundary.\par
DMA \'c3\'a4\'b3\'ce \'c6\'d0\'c5\'b6 / \'b9\'f6\'bd\'ba\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba\'b0\'a1 \'c6\'d0\'c5\'b6 \'b0\'e6\'b0\'e8\'b8\'a6 \'b3\'d1\'c0\'b8\'b8\'e9 DMA \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee\'b4\'c2\'c0\'cc \'c6\'d0\'c5\'b7 / \'b9\'f6\'bd\'ba\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba\'b8\'a6 \'c6\'d0\'c5\'b6 \'b0\'e6\'b0\'e8\'bf\'a1 \'c1\'a4\'b7\'c4 \'b5\'c8 \'bf\'a9\'b7\'af \'b0\'b3\'c0\'c7 \'c0\'db\'c0\'ba \'be\'d7\'bc\'bc\'bd\'ba\'b7\'ce \'c0\'da\'b5\'bf \'ba\'d0\'c7\'d2\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Otherwise, the DMA transfers data as a usual packing/burst access.\par
\'b1\'d7\'b7\'b8\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 DMA\'b4\'c2 \'c0\'cf\'b9\'dd\'c0\'fb\'c0\'ce \'c6\'d0\'c5\'b7 / \'b9\'f6\'bd\'ba\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba\'b7\'ce \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'fc\'bc\'db\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.1.4.15 Graphics Acceleration Support\par
16.1.4.15 \'b1\'d7\'b7\'a1\'c7\'c8 \'b0\'a1\'bc\'d3 \'c1\'f6\'bf\'f8\par
\par
The DMA_SYSTEM supports two graphic acceleration features: transparent copy and constant fill.\par
DMA_SYSTEM\'c0\'ba \'c5\'f5\'b8\'ed \'ba\'b9\'bb\'e7 \'b9\'d7 \'bb\'f3\'bc\'f6 \'c3\'a4\'bf\'ec\'b1\'e2\'c0\'c7 \'b5\'ce \'b0\'a1\'c1\'f6 \'b1\'d7\'b7\'a1\'c7\'c8 \'b0\'a1\'bc\'d3 \'b1\'e2\'b4\'c9\'c0\'bb \'c1\'f6\'bf\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Only one of these features can be enabled at a time through the DMA4_CCRi register for the particular logical DMA channel.\par
\'c6\'af\'c1\'a4 \'b3\'ed\'b8\'ae\'c0\'fb DMA \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d1 DMA4_CCRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 \'c0\'cc\'b7\'af\'c7\'d1 \'b1\'e2\'b4\'c9 \'c1\'df \'c7\'cf\'b3\'aa\'b8\'b8 \'c8\'b0\'bc\'ba\'c8\'ad \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The transparent copy feature enables specification of a particular color through the DMA4_COLORi register so that when it is recognized in the data from the source, it is not copied to the corresponding location in the destination but instead leaves the data in the corresponding location in the destination as it is.\par
\'c5\'f5\'b8\'ed \'ba\'b9\'bb\'e7 \'b1\'e2\'b4\'c9\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 DMA4_COLORi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 \'c6\'af\'c1\'a4 \'bb\'f6\'bb\'f3\'c0\'bb \'c1\'f6\'c1\'a4\'c7\'d2 \'bc\'f6 \'c0\'d6\'c0\'b8\'b9\'c7\'b7\'ce \'bc\'d2\'bd\'ba\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'a1\'bc\'ad \'c0\'ce\'bd\'c4 \'b5\'c9 \'b6\'a7 \'b4\'eb\'bb\'f3\'c0\'c7 \'c7\'d8\'b4\'e7 \'c0\'a7\'c4\'a1\'b7\'ce \'ba\'b9\'bb\'e7\'b5\'c7\'c1\'f6 \'be\'ca\'b0\'ed \'b4\'eb\'bb\'f3\'c0\'c7 \'c7\'d8\'b4\'e7 \'c0\'a7\'c4\'a1\'bf\'a1 \'b1\'d7\'b4\'eb\'b7\'ce \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'b3\'b2\'bd\'c0\'b4\'cf\'b4\'d9 .\par
(\'c0\'ce\'bd\'c4 \'b5\'c8 \'b0\'f7\'c0\'ba \'b5\'a4\'be\'ee \'be\'ba\'bf\'f6\'c1\'f6\'c1\'f6 \'be\'ca\'b4\'c2\'b4\'d9.)\par
Figure 16-11 shows the 2-D graphic transparent color block diagram(p3797)\par
\'b1\'d7\'b8\'b2 16-11\'c0\'ba 2 \'c2\'f7\'bf\'f8 \'b1\'d7\'b7\'a1\'c7\'c8 \'c5\'f5\'b8\'ed \'bb\'f6\'bb\'f3 \'ba\'ed\'b7\'cf \'b4\'d9\'c0\'cc\'be\'ee\'b1\'d7\'b7\'a5\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
The constant fill feature provides the ability to specify a particular color through the DMA4_COLORi register for every specified location in the destination.\par
\'c0\'cf\'c1\'a4 \'c3\'a4\'bf\'ec\'b1\'e2 \'b1\'e2\'b4\'c9\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 \'b4\'eb\'bb\'f3\'c0\'c7 \'c1\'f6\'c1\'a4\'b5\'c8 \'b8\'f0\'b5\'e7 \'c0\'a7\'c4\'a1\'bf\'a1 \'b4\'eb\'c7\'d8 DMA4_COLORi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 \'c6\'af\'c1\'a4 \'bb\'f6\'c0\'bb \'c1\'f6\'c1\'a4\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
 In this case, the transfer consists only of writing to the destination without reading from a source.\par
\'c0\'cc \'b0\'e6\'bf\'ec \'c0\'fc\'bc\'db\'c0\'ba \'bc\'d2\'bd\'ba\'bf\'a1\'bc\'ad \'c0\'d0\'c1\'f6 \'be\'ca\'b0\'ed \'b4\'eb\'bb\'f3\'bf\'a1 \'be\'b2\'b4\'c2 \'b0\'cd\'c0\'b8\'b7\'ce \'b8\'b8 \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The constant fill feature provides the ability to specify a particular color through the DMA4_COLORi register for every specified location in the destination.\par
\'c0\'cf\'c1\'a4 \'c3\'a4\'bf\'ec\'b1\'e2 \'b1\'e2\'b4\'c9\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 \'b4\'eb\'bb\'f3\'c0\'c7 \'c1\'f6\'c1\'a4\'b5\'c8 \'b8\'f0\'b5\'e7 \'c0\'a7\'c4\'a1\'bf\'a1 \'b4\'eb\'c7\'d8 DMA4_COLORi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 \'c6\'af\'c1\'a4 \'bb\'f6\'c0\'bb \'c1\'f6\'c1\'a4\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
 In this case, the transfer consists only of writing to the destination without reading from a source.\par
  \'c0\'cc \'b0\'e6\'bf\'ec \'c0\'fc\'bc\'db\'c0\'ba \'bc\'d2\'bd\'ba\'bf\'a1\'bc\'ad \'c0\'d0\'c1\'f6 \'be\'ca\'b0\'ed \'b4\'eb\'bb\'f3\'bf\'a1 \'be\'b2\'b4\'c2 \'b0\'cd\'c0\'b8\'b7\'ce \'b8\'b8 \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Both features support 8, 16, and 24 bpp, depending on what is specified as the DMA transfer ES through the DMA4_CSDPi register.\par
\'b5\'ce \'b1\'e2\'b4\'c9 \'b8\'f0\'b5\'ce DMA4_CSDPi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 DMA \'c0\'fc\'bc\'db ES\'b7\'ce \'c1\'f6\'c1\'a4\'b5\'c8 \'b3\'bb\'bf\'eb\'bf\'a1 \'b5\'fb\'b6\'f3 8, 16 \'b9\'d7 24 bpp\'b8\'a6 \'c1\'f6\'bf\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
 An ES of 32 bits corresponds to 24 bpp.\par
  32 \'ba\'f1\'c6\'ae\'c0\'c7 ES\'b4\'c2 24bpp\'bf\'a1 \'c7\'d8\'b4\'e7\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
During a 32-bit (24 bpp) transfer, the 8 most-significant bits (MSBs) ([31:24]) are 0.\par
32 \'ba\'f1\'c6\'ae (24 bpp) \'c0\'fc\'bc\'db \'c1\'df\'bf\'a1 8 \'b0\'b3\'c0\'c7 \'c3\'d6\'bb\'f3\'c0\'a7 \'ba\'f1\'c6\'ae (MSB) ([31:24])\'b4\'c2 0\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Both features are compatible with packed and burst transactions.\par
\'b5\'ce \'b1\'e2\'b4\'c9 \'b8\'f0\'b5\'ce \'be\'d0\'c3\'e0 \'b9\'d7 \'b9\'f6\'bd\'ba\'c6\'ae \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'b0\'fa \'c8\'a3\'c8\'af\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.1.4.16 Supervisor Modes\par
16.1.4.16 \'b0\'a8\'b5\'b6\'c0\'da \'b8\'f0\'b5\'e5\par
\par
A logical DMA channel can be configured to operate in supervisor mode through the DMA4_CCRi[22] SUPERVISOR bit.\par
\'b3\'ed\'b8\'ae\'c0\'fb DMA \'c3\'a4\'b3\'ce\'c0\'ba DMA4_CCRi [22] SUPERVISOR \'ba\'f1\'c6\'ae\'b8\'a6 \'c5\'eb\'c7\'d8 \'b0\'a8\'b5\'b6\'c0\'da \'b8\'f0\'b5\'e5\'bf\'a1\'bc\'ad \'c0\'db\'b5\'bf\'c7\'cf\'b5\'b5\'b7\'cf \'b1\'b8\'bc\'ba \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
This must be done using supervisor access.\par
\'c0\'cc\'b0\'cd\'c0\'ba \'b0\'a8\'b5\'b6\'c0\'da \'be\'d7\'bc\'bc\'bd\'ba\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'bc\'f6\'c7\'e0\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Once a channel is configured in supervisor mode, the channel configuration is protected from nonsupervisor accesses.\par
\'c3\'a4\'b3\'ce\'c0\'cc \'b0\'a8\'b5\'b6\'c0\'da \'b8\'f0\'b5\'e5\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'c7\'b8\'e9 \'c3\'a4\'b3\'ce \'b1\'b8\'bc\'ba\'c0\'cc \'ba\'f1 \'b0\'a8\'b5\'b6\'c0\'da \'be\'d7\'bc\'bc\'bd\'ba\'b7\'ce\'ba\'ce\'c5\'cd \'ba\'b8\'c8\'a3\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
All DMA transactions on a supervisor channel are supervisor transactions.\par
\'bc\'f6\'c6\'db\'b9\'d9\'c0\'cc\'c0\'fa \'c3\'a4\'b3\'ce\'c0\'c7 \'b8\'f0\'b5\'e7 DMA \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'ba \'bc\'f6\'c6\'db\'b9\'d9\'c0\'cc\'c0\'fa \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
16.1.4.17 Posted and Nonposted Writes\par
16.1.4.17 \'b0\'d4\'bd\'c3 \'b9\'d7 \'b0\'d4\'bd\'c3\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'ba \'be\'b2\'b1\'e2\par
\par
A logical channel can be configured in its DMA4_CSDPi[17:16] bits to use one of three write access handshake modes for the destination:\par
\'b3\'ed\'b8\'ae\'c0\'fb \'c3\'a4\'b3\'ce\'c0\'ba DMA4_CSDPi [17:16] \'ba\'f1\'c6\'ae\'bf\'a1\'bc\'ad \'b8\'f1\'c0\'fb\'c1\'f6\'bf\'a1 \'b4\'eb\'c7\'d1 \'bc\'bc \'b0\'a1\'c1\'f6 \'be\'b2\'b1\'e2 \'be\'d7\'bc\'bc\'bd\'ba \'c7\'da\'b5\'e5 \'bc\'ce\'c0\'cc\'c5\'a9 \'b8\'f0\'b5\'e5 \'c1\'df \'c7\'cf\'b3\'aa\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b5\'b5\'b7\'cf \'b1\'b8\'bc\'ba \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  Nonposted write: Each write must complete before transfer can continue or complete.\par
\bullet  \'ba\'f1 \'b0\'d4\'bd\'c3 \'b5\'c8 \'be\'b2\'b1\'e2 : \'c0\'fc\'bc\'db\'c0\'bb \'b0\'e8\'bc\'d3\'c7\'cf\'b0\'c5\'b3\'aa \'bf\'cf\'b7\'e1\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 \'b0\'a2 \'be\'b2\'b1\'e2\'b8\'a6 \'bf\'cf\'b7\'e1\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Posted write: Transfer continues without waiting for each write to complete (may improve performance with slow devices).\par
\bullet  \'b0\'d4\'bd\'c3 \'b5\'c8 \'be\'b2\'b1\'e2 : \'be\'b2\'b1\'e2\'b0\'a1 \'bf\'cf\'b7\'e1 \'b5\'c9 \'b6\'a7\'b1\'ee\'c1\'f6 \'b1\'e2\'b4\'d9\'b8\'ae\'c1\'f6 \'be\'ca\'b0\'ed \'c0\'fc\'bc\'db\'c0\'cc \'b0\'e8\'bc\'d3\'b5\'cb\'b4\'cf\'b4\'d9 (\'b4\'c0\'b7\'c1\'c1\'fa\'bc\'f6\'c0\'d6\'c0\'bd).\par
\par
\bullet  Posted with final write nonposted: Transfer continues without waiting for each write to complete, but final write completes before transfer can complete.\par
\bullet  \'b0\'d4\'bd\'c3 \'b5\'ca \'c3\'d6\'c1\'be \'b0\'d4\'bd\'c3 \'be\'f8\'c0\'bd \'b0\'d4\'bd\'c3 : \'b0\'a2 \'be\'b2\'b1\'e2\'b0\'a1 \'bf\'cf\'b7\'e1\'b5\'c7\'b1\'e2\'b8\'a6 \'b1\'e2\'b4\'d9\'b8\'ae\'c1\'f6 \'be\'ca\'b0\'ed \'c0\'fc\'bc\'db\'c0\'cc \'b0\'e8\'bc\'d3\'b5\'c7\'c1\'f6\'b8\'b8 \'c0\'fc\'bc\'db\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'b1\'e2 \'c0\'fc\'bf\'a1 \'c3\'d6\'c1\'be \'be\'b2\'b1\'e2\'b0\'a1 \'bf\'cf\'b7\'e1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.1.4.18 Disabling a Channel During Transfer.\par
16.1.4.18 \'c0\'fc\'bc\'db \'c1\'df \'c3\'a4\'b3\'ce \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad.\par
\par
When a channel is disabled during a transfer, the channel undergoes an abort, unless it is hardwaresource-synchronized with buffering enabled (DMA4_CCRi[25] BUFFERING_DISABLE = 0).\par
\'c0\'fc\'bc\'db \'c1\'df\'bf\'a1 \'c3\'a4\'b3\'ce\'c0\'cc \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9 \'b9\'f6\'c6\'db\'b8\'b5\'c0\'cc \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'bb\'f3\'c5\'c2 (DMA4_CCRi [25] BUFFERING_DISABLE = 0)\'b7\'ce \'c7\'cf\'b5\'e5 \'bc\'d2\'bd\'ba \'bc\'d2\'bd\'ba\'bf\'cd \'b5\'bf\'b1\'e2\'c8\'ad\'b5\'c7\'c1\'f6 \'be\'ca\'b4\'c2 \'c7\'d1 \'c3\'a4\'b3\'ce\'c0\'ba \'c1\'df\'b4\'dc\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
If this is the case, the FIFO is drained to prevent the loss of data. For more information about this feature, see Section 16.1.4.19, FIFO Draining Mechanism.\par
\'c0\'cc \'b0\'e6\'bf\'ec FIFO\'b0\'a1 \'bc\'d2\'b8\'f0\'b5\'c7\'be\'ee \'b5\'a5\'c0\'cc\'c5\'cd \'bc\'d5\'bd\'c7\'c0\'bb \'b9\'e6\'c1\'f6\'c7\'d5\'b4\'cf\'b4\'d9. \'c0\'cc \'b1\'e2\'b4\'c9\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 16.1.4.19 \'c0\'fd FIFO \'b9\'e8\'bc\'f6 \'b8\'de\'c4\'bf\'b4\'cf\'c1\'f2\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.1.4.19 FIFO Draining Mechanism\par
16.1.4.19 FIFO \'b9\'e8\'bc\'f6 \'c0\'e5\'c4\'a1\par
\par
When a source-synchronized channel is disabled during a transfer, the current hardware request (element/packet/frame/block) service completes and the channel DMA4_CCRi[9] RD_ACTIVE bit is set to 0, which means the channel is not active on the read port.\par
\'c0\'fc\'bc\'db \'c1\'df\'bf\'a1 \'bc\'d2\'bd\'ba \'b5\'bf\'b1\'e2\'c8\'ad  \'c3\'a4\'b3\'ce\'c0\'cc \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9 \'c7\'f6\'c0\'e7 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'bf\'e4\'c3\'bb (\'bf\'e4\'bc\'d2 / \'c6\'d0\'c5\'b6 / \'c7\'c1\'b7\'b9\'c0\'d3 / \'ba\'ed\'b7\'cf) \'bc\'ad\'ba\'f1\'bd\'ba\'b0\'a1 \'bf\'cf\'b7\'e1\'b5\'c7\'b0\'ed \'c3\'a4\'b3\'ce DMA4_CCRi [9] RD_ACTIVE \'ba\'f1\'c6\'ae\'b0\'a1 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9. \'c0\'cc\'b4\'c2 \'c3\'a4\'b3\'ce\'c0\'cc \'c8\'b0\'bc\'ba \'bb\'f3\'c5\'c2\'b0\'a1 \'be\'c6\'b4\'d4\'c0\'bb \'c0\'c7\'b9\'cc\'c7\'d5\'b4\'cf\'b4\'d9 .\par
\par
The remaining data in the corresponding disabled channel FIFO is drained onto the write port and transferred to the programmed destination as in normal transfer.\par
\'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'c3\'a4\'b3\'ce\'c0\'c7 FIFO \'b3\'aa\'b8\'d3\'c1\'f6 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'b7\'ce \'b9\'e8\'c3\'e2\'b5\'c7\'b0\'ed \'c1\'a4\'bb\'f3 \'c0\'fc\'bc\'db\'b0\'fa \'b0\'b0\'c0\'cc \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'fc\'bc\'db\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
At the end of the draining the DMA4_CCRi[10] WR_ACTIVE bit is set to 0 (channel is no longer active on the write port) and if the DMA4_CICRi[12] DRAIN_END_IE is set to 1, the DMA4_CSRi[12] DRAIN_END status bit is updated and an interrupt is generated.\par
\'b5\'e5\'b7\'b9\'c0\'ce\'c0\'cc \'b3\'a1\'b3\'af \'b6\'a7 DMA4_CCRi [10] WR_ACTIVE \'ba\'f1\'c6\'ae\'b4\'c2 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'c7\'b0\'ed (\'c3\'a4\'b3\'ce\'c0\'ba \'b4\'f5 \'c0\'cc\'bb\'f3 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'bf\'a1\'bc\'ad \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'bd) DMA4_CICRi [12] DRAIN_END_IE\'b0\'a1 1\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'c7\'b8\'e9 DMA4_CSRi [12] DRAIN_END \'bb\'f3\'c5\'c2 \'ba\'f1\'c6\'ae\'b0\'a1 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b5\'c7\'b0\'ed \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'bb\'fd\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9 .\par
\par
Once a channel is disabled during a transfer, it must wait for the DMA4_CCRi[9] RD_ACTIVE and DMA4_CCRi[10] WR_ACTIVE bits to become 0 before being reenabled for a new transfer.\par
\'c0\'fc\'bc\'db \'c1\'df\'bf\'a1 \'c3\'a4\'b3\'ce\'c0\'cc \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9, \'bb\'f5\'b7\'ce\'bf\'ee \'c0\'fc\'bc\'db\'c0\'bb \'c0\'a7\'c7\'d8 \'b4\'d9\'bd\'c3 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b1\'e2 \'c0\'fc\'bf\'a1 DMA4_CCRi [9] RD_ACTIVE \'b9\'d7 DMA4_CCRi [10] WR_ACTIVE \'ba\'f1\'c6\'ae\'b0\'a1 0\'c0\'cc \'b5\'c9 \'b6\'a7\'b1\'ee\'c1\'f6 \'b4\'eb\'b1\'e2\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\'c0\'fc\'bc\'db \'c1\'df\'bf\'a1 \'c3\'a4\'b3\'ce\'c0\'cc \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9, \'b4\'d9\'bd\'c3 \'c0\'fc\'bc\'db\'c7\'cf\'b1\'e2\'c0\'fc \'b1\'ee\'c1\'f6 DMA4_CCRi [9] RD_ACTIVE \'b9\'d7 DMA4_CCRi [10] WR_ACTIVE \'ba\'f1\'c6\'ae\'b0\'a1 0\'c0\'cc \'b5\'c9 \'b6\'a7\'b1\'ee\'c1\'f6 \'b4\'eb\'b1\'e2\'c7\'d4\par
\par
The FIFO drain for a channel occurs only in the following cases:\par
\'c3\'a4\'b3\'ce\'c0\'c7 FIFO \'b5\'e5\'b7\'b9\'c0\'ce\'c0\'ba \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'ba \'b0\'e6\'bf\'ec\'bf\'a1\'b8\'b8 \'b9\'df\'bb\'fd\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  If the channel is a source synchronized channel and DMA4_CCRi[25] BUFFERING_DISABLE = 0 and\par
\bullet  \'c3\'a4\'b3\'ce\'c0\'cc \'bc\'d2\'bd\'ba \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'c3\'a4\'b3\'ce\'c0\'cc\'b0\'ed DMA4_CCRi [25] BUFFERING_DISABLE = 0\'c0\'cc\'b0\'ed\par
\par
\bullet  If the channel is not a solid fill channel and\par
\bullet  \'c3\'a4\'b3\'ce\'c0\'cc \'b4\'dc\'bb\'f6 \'c3\'a4\'bf\'ec\'b1\'e2 \'c3\'a4\'b3\'ce\'c0\'cc \'be\'c6\'b4\'d1 \'b0\'e6\'bf\'ec\par
\par
\bullet  If the channel is not a transparent and copy channel and\par
\bullet  \'c3\'a4\'b3\'ce\'c0\'cc \'c5\'f5\'b8\'ed\'c7\'cf\'b0\'ed \'ba\'b9\'bb\'e7 \'c3\'a4\'b3\'ce\'c0\'cc \'be\'c6\'b4\'cf\'b8\'e7\par
\par
\bullet  If the channel is a hardware, synchronized channel\par
\bullet  \'c3\'a4\'b3\'ce\'c0\'cc \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'c0\'ce \'b0\'e6\'bf\'ec \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'c3\'a4\'b3\'ce\par
\par
NOTE: For a self-linked or chain-linked channel, the user must disable the DMA4_CLNK_CTRLi[15]\par
\'c2\'fc\'b0\'ed : \'c0\'da\'c3\'bc \'bf\'ac\'b0\'e1 \'b6\'c7\'b4\'c2 \'c3\'bc\'c0\'ce \'bf\'ac\'b0\'e1 \'c3\'a4\'b3\'ce\'c0\'c7 \'b0\'e6\'bf\'ec \'bb\'e7\'bf\'eb\'c0\'da\'b4\'c2 DMA4_CLNK_CTRLi [15]\'b8\'a6 \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
ENABLE_LINK bit before disabling the channel.\par
\'c3\'a4\'b3\'ce\'c0\'bb \'bb\'e7\'bf\'eb \'c1\'df\'c1\'f6\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 ENABLE_LINK \'ba\'f1\'c6\'ae\'b8\'a6 \'b4\'a9\'b8\'a8\'b4\'cf\'b4\'d9.\par
\par
In all other cases, the channel undergoes an abort.\par
\'b4\'d9\'b8\'a5 \'b8\'f0\'b5\'e7 \'b0\'e6\'bf\'ec\'bf\'a1 \'c3\'a4\'b3\'ce\'c0\'ba \'c1\'df\'b4\'dc\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.1.4.20 Linked List\par
16.1.4.20 \'bf\'ac\'b0\'e1\'b5\'c8 \'b8\'f1\'b7\'cf\par
\par
16.1.4.20.1 Overview\par
16.1.4.20.1 \'b0\'b3\'bf\'e4\par
\par
The DMA_SYSTEM supports the logical transfer-descriptor loader feature.\par
DMA_SYSTEM\'c0\'ba \'b3\'ed\'b8\'ae\'c0\'fb \'c0\'fc\'bc\'db \'b1\'e2\'bc\'fa\'c0\'da \'b7\'ce\'b4\'f5 \'b1\'e2\'b4\'c9\'c0\'bb \'c1\'f6\'bf\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
A transfer descriptor represents a set of values that maps to a set of logical channel configuration registers.\par
\'c0\'fc\'bc\'db \'bc\'b3\'b8\'ed\'c0\'da\'b4\'c2 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'b1\'b8\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'c1\'fd\'c7\'d5\'bf\'a1 \'b8\'c5\'c7\'ce\'b5\'c7\'b4\'c2 \'b0\'aa(\'c1\'fd\'c7\'d5)\'c0\'bb \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
A logical channel transfer descriptor can be loaded by DMA from memories, and then successive transfer descriptors can be autonomously loaded based on a linked-list scheme.\par
\'b3\'ed\'b8\'ae\'c0\'fb \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'b4\'c2 \'b8\'de\'b8\'f0\'b8\'ae\'b7\'ce\'ba\'ce\'c5\'cd DMA\'bf\'a1 \'c0\'c7\'c7\'d8\'b7\'ce\'b5\'e5 \'b5\'c9 \'bc\'f6 \'c0\'d6\'c0\'b8\'b8\'e7, \'bf\'ac\'bc\'d3\'c0\'fb\'c0\'ce \'c0\'fc\'bc\'db \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'b4\'c2 \'b8\'b5\'c5\'a9\'b8\'ae\'bd\'ba\'c6\'ae \'b9\'e6\'bd\'c4\'bf\'a1 \'b5\'fb\'b6\'f3 \'c0\'da\'c0\'b2\'c0\'fb\'c0\'b8\'b7\'ce\'b7\'ce\'b5\'e5 \'b5\'c9 \'bc\'f6\'c0\'d6\'b4\'d9.\par
\par
This enables DMA4 scattergather transfers with minimum MPU support by removing successive channel configuration processing and associated interrupt handling overheads.\par
\'b5\'fb\'b6\'f3\'bc\'ad \'bf\'ac\'bc\'d3 \'c3\'a4\'b3\'ce \'b1\'b8\'bc\'ba \'c3\'b3\'b8\'ae \'b9\'d7 \'b0\'fc\'b7\'c3 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c3\'b3\'b8\'ae \'bf\'c0\'b9\'f6 \'c7\'ec\'b5\'e5\'b8\'a6 \'c1\'a6\'b0\'c5\'c7\'d4\'c0\'b8\'b7\'ce\'bd\'e1 MPU \'c1\'f6\'bf\'f8\'c0\'bb \'c3\'d6\'bc\'d2\'c8\'ad \'c7\'cf\'b0\'ed DMA4 \'ba\'d0\'bb\'ea \'bc\'f6\'c1\'fd \'c0\'fc\'bc\'db\'c0\'cc \'b0\'a1\'b4\'c9\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
It also optimizes DMA4 channel resources by enabling efficient transfer serialization on a single logical channel versus concurrent (multiple) logical channel use.\par
\'b6\'c7\'c7\'d1 \'b4\'dc\'c0\'cf \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'b4\'eb \'b5\'bf\'bd\'c3 (\'b4\'d9\'c1\'df) \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'bb\'e7\'bf\'eb\'bf\'a1 \'b4\'eb\'c7\'d1 \'c8\'bf\'c0\'b2\'c0\'fb\'c0\'ce \'c0\'fc\'bc\'db \'c1\'f7\'b7\'c4\'c8\'ad \'bd\'c3\'c5\'b4\'c0\'b8\'b7\'ce\'bd\'e1 DMA4 \'c3\'a4\'b3\'ce \'c0\'da\'bf\'f8\'c0\'bb \'c3\'d6\'c0\'fb\'c8\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Different types of transfer descriptors are supported (full or partial logical channel configuration registers are set).\par
\'bf\'a9\'b7\'af \'c0\'af\'c7\'fc\'c0\'c7 \'c0\'fc\'bc\'db \'bc\'b3\'b8\'ed\'c0\'da\'b0\'a1 \'c1\'f6\'bf\'f8\'b5\'cb\'b4\'cf\'b4\'d9 (\'c0\'fc\'c3\'bc \'b6\'c7\'b4\'c2 \'ba\'ce\'ba\'d0 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'b1\'b8\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b0\'a1 \'bc\'b3\'c1\'a4 \'b5\'ca).\par
\par
 This optimizes the memory size required for storing a long linked list, because parameter changes are limited to only a few logical channel configuration registers.\par
\'c0\'cc\'b4\'c2 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'ba\'af\'b0\'e6\'c0\'cc \'bc\'d2\'bc\'f6\'c0\'c7 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'b1\'b8\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b7\'ce \'c1\'a6\'c7\'d1\'b5\'c7\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'b1\'e4 \'b8\'b5\'c5\'a9 \'b5\'c8 \'b8\'f1\'b7\'cf\'c0\'bb \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'b5\'a5 \'c7\'ca\'bf\'e4\'c7\'d1 \'b8\'de\'b8\'f0\'b8\'ae \'c5\'a9\'b1\'e2\'b8\'a6 \'c3\'d6\'c0\'fb\'c8\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.1.4.20.2 Link-List Transfer Profile\par
16.1.4.20.2 \'b8\'b5\'c5\'a9 \'b8\'f1\'b7\'cf \'c0\'fc\'bc\'db \'c7\'c1\'b7\'ce\'c7\'ca\par
\par
A linked-list transfer can be seen as a super-block transfer (where the block is composed of FN frames and each frame includes EN elements).\par
\'bf\'ac\'b0\'e1\'b5\'c8 \'b8\'f1\'b7\'cf \'c0\'fc\'bc\'db\'c0\'ba \'bc\'f6\'c6\'db \'ba\'ed\'b7\'cf \'c0\'fc\'bc\'db\'c0\'b8\'b7\'ce \'ba\'bc \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9 (\'ba\'ed\'b7\'cf\'c0\'ba FN \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'b8\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'c7\'b8\'e7 \'b0\'a2 \'c7\'c1\'b7\'b9\'c0\'d3\'bf\'a1\'b4\'c2 EN \'bf\'e4\'bc\'d2\'b0\'a1 \'c6\'f7\'c7\'d4\'b5\'cb\'b4\'cf\'b4\'d9).\par
\par
The block size (FN x EN x ES) can be changed in the linked list by loading an updated transfer descriptor.\par
\'ba\'ed\'b7\'cf \'c5\'a9\'b1\'e2 (FN x EN x ES)\'b4\'c2 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae \'b5\'c8 \'c0\'fc\'bc\'db \'bc\'b3\'b8\'ed\'c0\'da\'b8\'a6\'b7\'ce\'b5\'e5\'c7\'cf\'bf\'a9 \'b8\'b5\'c5\'a9 \'b5\'c8 \'b8\'f1\'b7\'cf\'bf\'a1\'bc\'ad \'ba\'af\'b0\'e6\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The end of the super block is signaled in the last descriptor associated with the last block.\par
\'bc\'f6\'c6\'db \'ba\'ed\'b7\'cf\'c0\'c7 \'b3\'a1\'c0\'ba \'b8\'b6\'c1\'f6\'b8\'b7 \'ba\'ed\'b7\'cf\'b0\'fa \'b0\'fc\'b7\'c3\'b5\'c8 \'b8\'b6\'c1\'f6\'b8\'b7 \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'bf\'a1 \'bd\'c5\'c8\'a3\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Generally, for a given link-list transfer, the logical channel is set at the beginning of the transfer and the logical channel configurations for the subsequent blocks are slightly changed.\par
\'c0\'cf\'b9\'dd\'c0\'fb\'c0\'b8\'b7\'ce, \'c1\'d6\'be\'ee\'c1\'f8 \'b8\'b5\'c5\'a9\'b8\'ae\'bd\'ba\'c6\'ae \'c0\'fc\'bc\'db\'bf\'a1 \'b4\'eb\'c7\'d8, \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'ba \'c0\'fc\'bc\'db\'c0\'c7 \'bd\'c3\'c0\'db\'bd\'c3\'bf\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'b0\'ed \'c8\'c4\'bc\'d3 \'ba\'ed\'b7\'cf\'bf\'a1 \'b4\'eb\'c7\'d1 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'b1\'b8\'bc\'ba\'c0\'ba \'be\'e0\'b0\'a3 \'ba\'af\'b0\'e6\'b5\'c8\'b4\'d9.\par
\par
Thus, the descriptor can be limited to an update of only few parameters, such as FN or EN.\par
\'b5\'fb\'b6\'f3\'bc\'ad, \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'b4\'c2 FN \'b6\'c7\'b4\'c2 EN\'b0\'fa \'b0\'b0\'c0\'ba \'b4\'dc\'c1\'f6 \'b8\'ee\'b8\'ee \'c6\'c4\'b6\'f3\'b9\'cc\'c5\'cd\'c0\'c7 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b7\'ce \'c1\'a6\'c7\'d1 \'b5\'c9 \'bc\'f6\'c0\'d6\'b4\'d9.\par
\par
This assumes that the content of unmodified registers is preserved when a new descriptor is loaded.\par
\'c0\'cc\'b0\'cd\'c0\'ba \'bb\'f5\'b7\'ce\'bf\'ee \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'b0\'a1\'b7\'ce\'b5\'e5 \'b5\'c9 \'b6\'a7 \'bc\'f6\'c1\'a4\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'b3\'bb\'bf\'eb\'c0\'cc \'ba\'b8\'c1\'b8\'b5\'c8\'b4\'d9\'b0\'ed \'b0\'a1\'c1\'a4\'c7\'d1\'b4\'d9.\par
\par
A transfer descriptor is composed of a set of channel configuration register values with the addition of the next-descriptor pointer register (DMA4_CNDPi) and a channel-descriptor parameter register (DMA4_CDPi).\par
\'c0\'fc\'bc\'db \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'b4\'c2 \'b4\'d9\'c0\'bd \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd \'c6\'f7\'c0\'ce\'c5\'cd \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (DMA4_CNDPi)\'bf\'cd \'c3\'a4\'b3\'ce \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd \'c6\'c4\'b6\'f3\'b9\'cc\'c5\'cd \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (DMA4_CDPi)\'b0\'a1 \'c3\'df\'b0\'a1 \'b5\'c8 \'c3\'a4\'b3\'ce \'b1\'b8\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'b0\'aa \'bc\'bc\'c6\'ae\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The next-descriptor pointer is the 32-bit address pointer from where the next transfer descriptor is to be loaded.\par
next-descriptor \'c6\'f7\'c0\'ce\'c5\'cd\'b4\'c2 \'b4\'d9\'c0\'bd \'c0\'fc\'bc\'db \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'b0\'a1\'b7\'ce\'b5\'e5 \'b5\'c9 32 \'ba\'f1\'c6\'ae \'c1\'d6\'bc\'d2 \'c6\'f7\'c0\'ce\'c5\'cd\'c0\'cc\'b4\'d9.\par
\par
The next-descriptor pointer is mapped depending on the descriptor type (1, 2, or 3).\par
next-descriptor \'c6\'f7\'c0\'ce\'c5\'cd\'b4\'c2 \'bc\'b3\'b8\'ed\'c0\'da \'c0\'af\'c7\'fc (1, 2 \'b6\'c7\'b4\'c2 3)\'bf\'a1 \'b5\'fb\'b6\'f3 \'b8\'c5\'c7\'ce\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.1.4.20.3 Descriptors\par
16.1.4.20.3 \'b1\'e2\'bc\'fa\'c0\'da\par
\par
A transfer descriptor is a set of values that maps to a set of logical channel configuration registers.\par
\'c0\'fc\'bc\'db \'bc\'b3\'b8\'ed\'c0\'da\'b4\'c2 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'b1\'b8\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'c1\'fd\'c7\'d5\'bf\'a1 \'b8\'c5\'c7\'ce\'b5\'c7\'b4\'c2 \'b0\'aa \'c1\'fd\'c7\'d5\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
The descriptor contains the parameters associated with a transfer profile (transfer size, source or destination addresses, etc).\par
\'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'bf\'a1\'b4\'c2 \'c0\'fc\'bc\'db \'c7\'c1\'b7\'ce\'c6\'c4\'c0\'cf\'b0\'fa \'b0\'fc\'b7\'c3\'b5\'c8 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 (\'c0\'fc\'bc\'db \'c5\'a9\'b1\'e2, \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2 \'b5\'ee)\'b0\'a1 \'b5\'e9\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Four different types of transfer descriptors are supported to optimize the memory size required to store a long linked list and to minimize MPU use to create and maintain the descriptor list.\par
long linked list \'c0\'bb \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'b5\'a5 \'c7\'ca\'bf\'e4\'c7\'d1 \'b8\'de\'b8\'f0\'b8\'ae \'c5\'a9\'b1\'e2\'b8\'a6 \'c3\'d6\'c0\'fb\'c8\'ad\'c7\'cf\'b0\'ed MPU \'bb\'e7\'bf\'eb\'c0\'bb \'c3\'d6\'bc\'d2\'c8\'ad\'c7\'cf\'bf\'a9 \'bc\'b3\'b8\'ed\'c0\'da \'b8\'f1\'b7\'cf\'c0\'bb \'b8\'b8\'b5\'e9\'be\'ee \'c0\'af\'c1\'f6 \'b0\'fc\'b8\'ae\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'b3\'d7 \'b0\'a1\'c1\'f6 \'c0\'af\'c7\'fc\'c0\'c7 \'c0\'fc\'bc\'db \'bc\'b3\'b8\'ed\'c0\'da\'b0\'a1 \'c1\'f6\'bf\'f8\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
(long linked list \'c0\'bb \'c0\'fa\'c0\'e5\'c7\'cf\'b4\'c2 \'b5\'a5 \'c7\'ca\'bf\'e4\'c7\'d1 \'b8\'de\'b8\'f0\'b8\'ae \'c5\'a9\'b1\'e2\'b8\'a6 \'c3\'d6\'c0\'fb\'c8\'ad\'c7\'cf\'b0\'ed, MPU \'bb\'e7\'bf\'eb\'c0\'bb \'c3\'d6\'bc\'d2\'c8\'ad\'c7\'d1 \'bc\'b3\'b8\'ed\'c0\'da \'b8\'f1\'b7\'cf\'c0\'bb \'b8\'b8\'b5\'e9\'be\'ee \'c0\'af\'c1\'f6 \'b0\'fc\'b8\'ae\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'b3\'d7 \'b0\'a1\'c1\'f6 \'c0\'af\'c7\'fc\'c0\'c7 \'c0\'fc\'bc\'db \'bc\'b3\'b8\'ed\'c0\'da\'b8\'a6 \'c1\'f6\'bf\'f8\'c7\'d4.)\par
\par
A transfer descriptor is a list of 32-bit values.\par
\'c0\'fc\'bc\'db \'bc\'b3\'b8\'ed\'c0\'da\'b4\'c2 32 \'ba\'f1\'c6\'ae \'b0\'aa\'c0\'c7 \'b8\'f1\'b7\'cf\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
A descriptor must be 32-bit aligned in memory.\par
\'bc\'b3\'b8\'ed\'c0\'da\'b4\'c2 \'b8\'de\'b8\'f0\'b8\'ae\'bf\'a1\'bc\'ad 32 \'ba\'f1\'c6\'ae \'c1\'a4\'b7\'c4\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Only the 30 least-significant bits (LSBs) of the next-descriptor address pointer are updated from the descriptor, and the DMA4 forces the 2 LSBs to 0 on generation of the pointer address.\par
\'b4\'d9\'c0\'bd \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd \'c1\'d6\'bc\'d2 \'c6\'f7\'c0\'ce\'c5\'cd\'c0\'c7 \'c3\'d6\'c7\'cf\'c0\'a7 \'ba\'f1\'c6\'ae (LSB) \'b8\'b8 \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'bf\'a1\'bc\'ad \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b5\'c7\'b0\'ed DMA4\'b4\'c2 \'c6\'f7\'c0\'ce\'c5\'cd \'c1\'d6\'bc\'d2 \'bb\'fd\'bc\'ba\'bd\'c3 2LSB\'b8\'a6 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The descriptor size is variable, depending on the descriptor type and the Nxt_Dv and Nxt_Sv bit fields.\par
\'bc\'b3\'b8\'ed\'c0\'da \'c5\'a9\'b1\'e2\'b4\'c2 \'bc\'b3\'b8\'ed\'c0\'da \'c0\'af\'c7\'fc\'b0\'fa Nxt_Dv \'b9\'d7 Nxt_Sv \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'b5\'fb\'b6\'f3 \'b0\'a1\'ba\'af\'c0\'fb\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Transfer descriptor bit mapping is the same as DMA4 logical-channel configuration register bit mapping,\par
with the following exceptions:\par
\'c0\'fc\'bc\'db \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd \'ba\'f1\'c6\'ae \'b8\'ca\'c7\'ce\'c0\'ba DMA4 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'b1\'b8\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'ba\'f1\'c6\'ae \'b8\'ca\'c7\'ce\'b0\'fa \'b5\'bf\'c0\'cf\'c7\'cf\'b8\'e7, \'b4\'d9\'c0\'bd \'bf\'b9\'bf\'dc\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  Src_Element_index and Dst_Element_index are concatenated in the same 32-bit location.\par
\bullet  Src_Element_index\'bf\'cd Dst_Element_index\'b4\'c2 \'b5\'bf\'c0\'cf\'c7\'d1 32 \'ba\'f1\'c6\'ae \'c0\'a7\'c4\'a1\'bf\'a1\'bc\'ad \'bf\'ac\'b0\'e1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA4_CICRi (interrupt event mask)\par
\bullet  DMA4_CICRi (\'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c0\'cc\'ba\'a5\'c6\'ae \'b8\'b6\'bd\'ba\'c5\'a9)\par
\par
\bullet  CFN (frame number)\par
\bullet  CFN (\'c7\'c1\'b7\'b9\'c0\'d3 \'b9\'f8\'c8\'a3)\par
\par
\bullet  Bit fields:\par
\bullet  \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5 :\par
\par
\endash  P: Corresponds to the PAUSE_LINK_LIST bit:\par
- P : PAUSE_LINK_LIST \'ba\'f1\'c6\'ae\'bf\'a1 \'c7\'d8\'b4\'e7\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  When set to 1 in the descriptor, the channel is suspended when the descriptor load completes.\par
\bullet  \'bc\'b3\'b8\'ed\'c0\'da\'bf\'a1\'bc\'ad 1\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'c7\'b8\'e9 \'bc\'b3\'b8\'ed\'c0\'da\'b7\'ce\'b5\'e5\'b0\'a1 \'bf\'cf\'b7\'e1\'b5\'c7\'be\'ee \'c3\'a4\'b3\'ce\'c0\'cc \'c0\'cf\'bd\'c3 \'c1\'df\'b4\'dc\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  The user must not set the PAUSE_LINK_LIST bit through the configuration port. Otherwise, behavior is undefined.\par
\bullet  \'bb\'e7\'bf\'eb\'c0\'da\'b4\'c2 \'b1\'b8\'bc\'ba \'c6\'f7\'c6\'ae\'b8\'a6 \'c5\'eb\'c7\'d8 PAUSE_LINK_LIST \'ba\'f1\'c6\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'c1\'f6 \'be\'ca\'be\'c6\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9. \'b1\'d7\'b7\'b8\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 \'b5\'bf\'c0\'db\'c0\'cc \'c1\'a4\'c0\'c7\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  When set to 0 (through the configuration port) after pause, the linked-list channel resumes its transfer (descriptor load or data load).\par
\bullet  \'c0\'cf\'bd\'c3 \'c1\'df\'c1\'f6 \'c8\'c4 \'b1\'b8\'bc\'ba \'c6\'f7\'c6\'ae\'b8\'a6 \'c5\'eb\'c7\'d8 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'b8\'e9 \'bf\'ac\'b0\'e1\'b5\'c8 \'b8\'f1\'b7\'cf \'c3\'a4\'b3\'ce\'c0\'cc \'c0\'fc\'bc\'db (\'bc\'b3\'b8\'ed\'c0\'da\'b7\'ce\'b5\'e5 \'b6\'c7\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'b7\'ce\'b5\'e5)\'c0\'bb \'b4\'d9\'bd\'c3 \'bd\'c3\'c0\'db\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\endash  B: Corresponds to the end-of-block enable bit (BLOCK_IE) of the DMA4_CICRi register; valid only for type 3. This value is don't care for descriptor types 1 and 2, where DMA4_CICRi is fully specified.\par
- B : DMA4_CICRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'ba\'ed\'b7\'cf \'b3\'a1 \'c8\'b0\'bc\'ba\'c8\'ad \'ba\'f1\'c6\'ae (BLOCK_IE)\'bf\'a1 \'c7\'d8\'b4\'e7\'c7\'d5\'b4\'cf\'b4\'d9. \'c0\'cc \'b0\'aa\'c0\'ba DMA4_CICRi\'b0\'a1 \'bf\'cf\'c0\'fc\'c8\'f7 \'c1\'f6\'c1\'a4\'b5\'c8 \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd \'c0\'af\'c7\'fc 1\'b0\'fa 2\'b8\'a6 \'b0\'ed\'b7\'c1\'c7\'cf\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\endash  Nxt_Dv, Nxt_Sv: Mapped in the DMA4_CDPi register.\par
- Nxt_Dv, Nxt_Sv : DMA4_CDPi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1\'bc\'ad \'b8\'c5\'c7\'ce\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
They indicate one of the following possibilities:\par
\'b4\'d9\'c0\'bd \'c1\'df \'c7\'cf\'b3\'aa\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  Next descriptor contains an updated destination or source address.\par
\bullet  \'b4\'d9\'c0\'bd \'bc\'b3\'b8\'ed\'c0\'da\'b4\'c2 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae \'b5\'c8 \'b4\'eb\'bb\'f3 \'b6\'c7\'b4\'c2 \'bc\'d2\'bd\'ba \'c1\'d6\'bc\'d2\'b8\'a6 \'c6\'f7\'c7\'d4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Next descriptor does not update the source or destination address, but increments the last source or destination address (from the end of the last transfer).\par
\bullet  \'b4\'d9\'c0\'bd \'bc\'b3\'b8\'ed\'c0\'da\'b4\'c2 \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2\'b8\'a6 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'c7\'cf\'c1\'f6 \'be\'ca\'c1\'f6\'b8\'b8 \'b8\'b6\'c1\'f6\'b8\'b7 \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2\'b8\'a6 \'c1\'f5\'b0\'a1\'bd\'c3\'c5\'b5\'b4\'cf\'b4\'d9 (\'b8\'b6\'c1\'f6\'b8\'b7 \'c0\'fc\'bc\'db \'b3\'a1\'bf\'a1\'bc\'ad\'ba\'ce\'c5\'cd).\par
\par
\bullet  The next source address and/or destination address are the last valid ones in the configuration memory.\par
\bullet  \'b4\'d9\'c0\'bd \'bc\'d2\'bd\'ba \'c1\'d6\'bc\'d2 \'b9\'d7 / \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2\'b4\'c2 \'b1\'b8\'bc\'ba \'b8\'de\'b8\'f0\'b8\'ae\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'c0\'af\'c8\'bf\'c7\'d1 \'c1\'d6\'bc\'d2\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
This means that the corresponding location in the configuration memory is not updated (assuming that they were initialized at least once in the past).\par
\'c0\'cc\'b4\'c2 \'b1\'b8\'bc\'ba \'b8\'de\'b8\'f0\'b8\'ae\'c0\'c7 \'c7\'d8\'b4\'e7 \'c0\'a7\'c4\'a1\'b0\'a1 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b5\'c7\'c1\'f6 \'be\'ca\'b4\'c2\'b4\'d9\'b4\'c2 \'b0\'cd\'c0\'bb \'c0\'c7\'b9\'cc\'c7\'d5\'b4\'cf\'b4\'d9 (\'b0\'fa\'b0\'c5\'bf\'a1 \'c0\'fb\'be\'ee\'b5\'b5 \'c7\'d1 \'b9\'f8 \'c0\'cc\'bb\'f3 \'c3\'ca\'b1\'e2\'c8\'ad\'b5\'c7\'be\'fa\'b4\'d9\'b0\'ed \'b0\'a1\'c1\'a4).\par
\par
This is also called wrapping addressing.\par
\'c0\'cc\'b8\'a6 \'b7\'a1 \'c7\'ce \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4\'c0\'cc\'b6\'f3\'b0\'ed\'b5\'b5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\endash  Next_Descriptor_Type: Specifies the next descriptor type that corresponds to the NEXT_DESCRIPTOR_TYPE bit field in the DMA4_CDPi register\par
- Next_Descriptor_Type : DMA4_CDPi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 NEXT_DESCRIPTOR_TYPE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c7\'d8\'b4\'e7\'c7\'cf\'b4\'c2 \'b4\'d9\'c0\'bd \'bc\'b3\'b8\'ed\'c0\'da \'c0\'af\'c7\'fc\'c0\'bb \'c1\'f6\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9\par
\par
16.1.4.20.3.1 Type 1\par
16.1.4.20.3.1 \'c0\'af\'c7\'fc 1\par
\par
A type 1 descriptor includes the overall channel configuration register value to be loaded (global registers are not part of the type 1 descriptor).\par
\'c5\'b8\'c0\'d4 1 \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'b4\'c2 \'b7\'ce\'b5\'f9 \'b5\'c9 \'c0\'fc\'c3\'bc \'c3\'a4\'b3\'ce \'b1\'b8\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'b0\'aa\'c0\'bb \'c6\'f7\'c7\'d4\'c7\'d1\'b4\'d9 (\'b1\'db\'b7\'ce\'b9\'fa \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'c5\'b8\'c0\'d4 1 \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'c0\'c7 \'c0\'cf\'ba\'ce\'b0\'a1 \'be\'c6\'b4\'cf\'b4\'d9).\par
\par
This descriptor is used primarily when major changes are required:\par
\'c0\'cc \'bc\'b3\'b8\'ed\'c0\'da\'b4\'c2 \'c1\'d6\'b7\'ce \'c1\'d6\'bf\'e4 \'ba\'af\'b0\'e6\'c0\'cc \'c7\'ca\'bf\'e4\'c7\'d1 \'b0\'e6\'bf\'ec\'bf\'a1 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  Channel read or write access profiles must be modified; for example, bursting and packing (included in the DMA4_CSDPi register)\par
\bullet  \'c3\'a4\'b3\'ce \'c0\'d0\'b1\'e2 \'b6\'c7\'b4\'c2 \'be\'b2\'b1\'e2 \'be\'d7\'bc\'bc\'bd\'ba \'c7\'c1\'b7\'ce\'c6\'c4\'c0\'cf\'c0\'bb \'bc\'f6\'c1\'a4\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9. \'bf\'b9\'b8\'a6 \'b5\'e9\'be\'ee \'b9\'f6\'bd\'ba\'c6\'ae \'b9\'d7 \'c6\'d0\'c5\'b7 (DMA4_CSDPi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c6\'f7\'c7\'d4)\par
\par
\bullet  Attach a new DMA request to the same channel or change the priority or access privilege (included in the DMA4_CCRi register)\par
\bullet  \'b5\'bf\'c0\'cf\'c7\'d1 \'c3\'a4\'b3\'ce\'bf\'a1 \'bb\'f5\'b7\'ce\'bf\'ee DMA \'bf\'e4\'c3\'bb\'c0\'bb \'c3\'b7\'ba\'ce\'c7\'cf\'b0\'c5\'b3\'aa \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'b6\'c7\'b4\'c2 \'be\'d7\'bc\'bc\'bd\'ba \'b1\'c7\'c7\'d1\'c0\'bb \'ba\'af\'b0\'e6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0 (DMA4_CCRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c6\'f7\'c7\'d4\'b5\'ca)\par
\par
\bullet  Enable solid or transparent color fill (included in the DMA4_CCRi and DMA4_COLORi registers)\par
\bullet  \'bc\'d6\'b8\'ae\'b5\'e5 \'b6\'c7\'b4\'c2 \'c5\'f5\'b8\'ed\'c7\'d1 \'bb\'f6\'bb\'f3 \'c3\'a4\'bf\'ec\'b1\'e2 \'c8\'b0\'bc\'ba\'c8\'ad (DMA4_CCRi \'b9\'d7 DMA4_COLORi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c6\'f7\'c7\'d4)\par
\par
\bullet  Enable a channel link (included in the DMA4_CLNK_CTRLi register) Table 16-14 shows a type 1 descriptor.\par
\bullet  \'c3\'a4\'b3\'ce \'b8\'b5\'c5\'a9 \'c8\'b0\'bc\'ba\'c8\'ad (DMA4_CLNK_CTRLi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c6\'f7\'c7\'d4) \'c7\'a5 16-14\'b4\'c2 \'c0\'af\'c7\'fc 1 \'bc\'b3\'b8\'ed\'c0\'da\'b8\'a6 \'c7\'a5\'bd\'c3\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.1.4.20.3.2 Type 2\par
16.1.4.20.3.2 \'c0\'af\'c7\'fc 2\par
\par
A type 2 descriptor includes the overall logical channel transfer address register and transfer format register to be loaded.\par
\'c5\'b8\'c0\'d4 2 \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'b4\'c2 \'b7\'ce\'b5\'f9 \'b5\'c9 \'c0\'fc\'c3\'bc \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db \'be\'ee\'b5\'e5\'b7\'b9\'bd\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'b9\'d7 \'c0\'fc\'bc\'db \'c6\'f7\'b8\'cb \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c6\'f7\'c7\'d4\'c7\'d1\'b4\'d9.\par
\par
This descriptor enables 2D addressing linked-list transfer (for example, a multimedia application where 2D objects are moved in a link).\par
\'c0\'cc \'bc\'b3\'b8\'ed\'c0\'da\'b4\'c2 2D \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'b5\'c5\'a9 \'b8\'f1\'b7\'cf \'c0\'fc\'bc\'db (\'bf\'b9 : \'b8\'b5\'c5\'a9\'bf\'a1\'bc\'ad 2D \'b0\'b4\'c3\'bc\'b0\'a1 \'c0\'cc\'b5\'bf\'b5\'c7\'b4\'c2 \'b8\'d6\'c6\'bc\'b9\'cc\'b5\'f0\'be\'ee \'c0\'c0\'bf\'eb \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5)\'c0\'bb \'b0\'a1\'b4\'c9\'c7\'cf\'b0\'d4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Table 16-15 shows a type 2 descriptor with source and destination address updates.\par
\'c7\'a5 16-15\'b4\'c2 \'bf\'f8\'ba\'bb \'b9\'d7 \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b0\'a1\'c0\'d6\'b4\'c2 \'c0\'af\'c7\'fc 2 \'bc\'b3\'b8\'ed\'c0\'da\'b8\'a6 \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
Table 16-16 shows a type 2 descriptor with one source or destination address update.\par
\'c7\'a5 16-16\'c0\'ba \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2\'b0\'a1 \'c7\'cf\'b3\'aa \'c0\'ce \'c0\'af\'c7\'fc 2 \'bc\'b3\'b8\'ed\'c0\'da\'b8\'a6 \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
16.1.4.20.3.3 Type 3\par
16.1.4.20.3.3 \'c0\'af\'c7\'fc 3\par
\par
A type 3 descriptor is limited to a few logical channel transfer address registers and transfer format registers to be loaded.\par
\'c5\'b8\'c0\'d4 3 \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'b4\'c2\'b7\'ce\'b5\'e5 \'b5\'c9 \'b8\'ee\'b8\'ee \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db \'be\'ee\'b5\'e5\'b7\'b9\'bd\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'b9\'d7 \'c0\'fc\'bc\'db \'c6\'f7\'b8\'cb \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b7\'ce \'c1\'a6\'c7\'d1\'b5\'c8\'b4\'d9.\par
\par
This descriptor enables simple 1D addressing link transfer (for example, scattergather or ping-pong memory movement using a linked list).\par
\'c0\'cc \'bc\'b3\'b8\'ed\'c0\'da\'b4\'c2 \'b0\'a3\'b4\'dc\'c7\'d1 1D \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'b5\'c5\'a9 \'c0\'fc\'bc\'db\'c0\'bb \'b0\'a1\'b4\'c9\'c7\'cf\'b0\'d4\'c7\'d5\'b4\'cf\'b4\'d9 (\'bf\'b9 : \'b8\'b5\'c5\'a9\'b5\'e5 \'b8\'f1\'b7\'cf\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'bd\'ba \'c6\'ae\'b7\'a1 \'c5\'cd\'c1\'f6 \'b6\'c7\'b4\'c2 \'c7\'ce\'c6\'fe \'b8\'de\'b8\'f0\'b8\'ae \'c0\'cc\'b5\'bf).\par
\par
Table 16-17 shows a type 3 descriptor with source and destination address updates.\par
\'c7\'a5 16-17\'c0\'ba \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2\'b0\'a1 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae \'b5\'c8 \'c0\'af\'c7\'fc 3 \'bc\'b3\'b8\'ed\'c0\'da\'b8\'a6 \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
 Table 16-18 shows a type 3 descriptor with one source or address destination update.\par
 \'c7\'a5 16-18\'c0\'ba \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'c1\'d6\'bc\'d2 \'b4\'eb\'bb\'f3 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b0\'a1 \'c7\'cf\'b3\'aa\'c0\'d6\'b4\'c2 \'c0\'af\'c7\'fc 3 \'bc\'b3\'b8\'ed\'c0\'da\'b8\'a6 \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
16.1.4.20.4 Linked-List Control and Monitoring\par
16.1.4.20.4 \'b8\'b5\'c5\'a9 \'b5\'c8 \'b8\'f1\'b7\'cf \'c1\'a6\'be\'ee \'b9\'d7 \'b8\'f0\'b4\'cf\'c5\'cd\'b8\'b5\par
\par
16.1.4.20.4.1 Transfer Mode Setting\par
16.1.4.20.4.1 \'c0\'fc\'bc\'db \'b8\'f0\'b5\'e5 \'bc\'b3\'c1\'a4\par
\par
Four descriptor types are available in DMA4_CDPi[9:8] TRANSFER_MODE to distinguish the different transfer modes:\par
\'bc\'ad\'b7\'ce \'b4\'d9\'b8\'a5 \'c0\'fc\'bc\'db \'b8\'f0\'b5\'e5\'b8\'a6 \'b1\'b8\'ba\'d0\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 DMA4_CDPi [9 : 8] TRANSFER_MODE\'bf\'a1\'bc\'ad 4 \'b0\'a1\'c1\'f6 \'bc\'b3\'b8\'ed\'c0\'da \'c0\'af\'c7\'fc\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA4_CDPi[9:8] TRANSFER_MODE = 00: The current channel is using normal mode.\par
\bullet  DMA4_CDPi [9 : 8] TRANSFER_MODE = 00 : \'c7\'f6\'c0\'e7 \'c3\'a4\'b3\'ce\'c0\'cc \'c1\'a4\'bb\'f3 \'b8\'f0\'b5\'e5\'b8\'a6 \'bb\'e7\'bf\'eb \'c1\'df\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA4_CDPi[9:8] TRANSFER_MODE = 01: The current channel is using link-list channel mode for a type 1, 2, or 3 descriptor.\par
\bullet  DMA4_CDPi [9 : 8] TRANSFER_MODE = 01 : \'c7\'f6\'c0\'e7 \'c3\'a4\'b3\'ce\'c0\'cc \'c0\'af\'c7\'fc 1, 2 \'b6\'c7\'b4\'c2 3 \'bc\'b3\'b8\'ed \'c0\'da\'bf\'a1 \'b4\'eb\'c7\'d8 \'b8\'b5\'c5\'a9 \'b8\'f1\'b7\'cf \'c3\'a4\'b3\'ce \'b8\'f0\'b5\'e5\'b8\'a6 \'bb\'e7\'bf\'eb \'c1\'df\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
The reset value is normal mode (DMA4_CDPi[9:8] TRANSFER_MODE = 0).\par
\'b8\'ae\'bc\'c2 \'b0\'aa\'c0\'ba \'c1\'a4\'bb\'f3 \'b8\'f0\'b5\'e5 (DMA4_CDPi [9 : 8] TRANSFER_MODE = 0)\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
16.1.4.20.4.2 Starting a Linked List\par
16.1.4.20.4.2 \'b8\'b5\'c5\'a9 \'b5\'c8 \'b8\'f1\'b7\'cf \'bd\'c3\'c0\'db\'c7\'cf\'b1\'e2\par
\par
Like a nonlinked-list transfer, a link transfer starts under host control by enabling the associated logical channel (set the DMA4_CCRi[7] ENABLE bit to 1).\par
\'ba\'f1 \'bf\'ac\'b0\'e1\'b8\'ae\'bd\'ba\'c6\'ae \'c0\'fc\'bc\'db\'b0\'fa \'b0\'b0\'c0\'cc, \'b0\'fc\'b7\'c3 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'bb \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed\'c7\'d4(\'b0\'a1\'b4\'c9\'c7\'cf\'b0\'d4)\'c0\'b8\'b7\'ce\'bd\'e1 \'c8\'a3\'bd\'ba\'c6\'ae \'c1\'a6\'be\'ee\'c7\'cf\'bf\'a1 \'b8\'b5\'c5\'a9 \'c0\'fc\'bc\'db\'c0\'cc \'bd\'c3\'c0\'db\'b5\'c8\'b4\'d9 (DMA4_CCRi [7] ENABLE \'ba\'f1\'c6\'ae\'b8\'a6 1\'b7\'ce \'bc\'b3\'c1\'a4).\par
\par
The DMA4_CDPi[10] FAST bit sets the start mode of the link-list transfer:\par
DMA4_CDPi [10] FAST \'ba\'f1\'c6\'ae\'b4\'c2 \'b8\'b5\'c5\'a9\'b8\'ae\'bd\'ba\'c6\'ae \'c0\'fc\'bc\'db\'c0\'c7 \'bd\'c3\'c0\'db \'b8\'f0\'b5\'e5\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9 :\par
\par
In nonfast-start mode, the logical channel configuration is fully initialized so that the transfer can start without descriptor loading.\par
\'ba\'f1\'b5\'bf\'b1\'e2\'bd\'c4 \'bd\'c3\'c0\'db \'b8\'f0\'b5\'e5\'bf\'a1\'bc\'ad\'b4\'c2 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'b1\'b8\'bc\'ba\'c0\'cc \'bf\'cf\'c0\'fc\'c8\'f7 \'c3\'ca\'b1\'e2\'c8\'ad\'b5\'c7\'be\'ee \'bc\'b3\'b8\'ed\'c0\'da\'b7\'ce\'b5\'e5\'be\'f8\'c0\'cc \'c0\'fc\'bc\'db\'c0\'bb \'bd\'c3\'c0\'db\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
In fast-start mode, the descriptor pointer and other inputs are given.\par
\'ba\'fc\'b8\'a5 \'bd\'c3\'c0\'db \'b8\'f0\'b5\'e5\'bf\'a1\'bc\'ad \'bc\'b3\'b8\'ed\'c0\'da \'c6\'f7\'c0\'ce\'c5\'cd\'bf\'cd \'b4\'d9\'b8\'a5 \'c0\'d4\'b7\'c2\'c0\'cc \'c1\'a6\'b0\'f8\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The channel starts by loading the descriptor and then starts the data transfer phase.\par
\'c3\'a4\'b3\'ce\'c0\'ba \'bc\'b3\'b8\'ed\'c0\'da\'b8\'a6\'b7\'ce\'b5\'e5\'c7\'cf\'bf\'a9 \'bd\'c3\'c0\'db\'c7\'d1 \'b4\'d9\'c0\'bd \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'bc\'db \'b4\'dc\'b0\'e8\'b8\'a6 \'bd\'c3\'c0\'db\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.1.4.20.4.3 Monitoring a Linked-List Progression\par
16.1.4.20.4.3 \'b8\'b5\'c5\'a9 \'b5\'c8 \'b8\'f1\'b7\'cf \'c1\'f8\'c7\'e0 \'b8\'f0\'b4\'cf\'c5\'cd\'b8\'b5\par
\par
In addition to the DMA4_CCENi (remaining elements) and DMA4_CCFNi (remaining frames) registers that are used to monitor the transfer progress, a per-channel register, DMA4_CCDNi (channel current active descriptor number), monitors which descriptor in the list is active.\par
\'c0\'fc\'bc\'db \'c1\'f8\'c7\'e0 \'bb\'f3\'c8\'b2\'c0\'bb \'b8\'f0\'b4\'cf\'c5\'cd\'b8\'b5\'c7\'cf\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 DMA4_CCENi (\'b3\'aa\'b8\'d3\'c1\'f6 \'bf\'e4\'bc\'d2) \'b9\'d7 DMA4_CCFNi (\'b3\'aa\'b8\'d3\'c1\'f6 \'c7\'c1\'b7\'b9\'c0\'d3) \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bf\'dc\'bf\'a1\'b5\'b5 \'c3\'a4\'b3\'ce \'b4\'e7 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd DMA4_CCDNi (\'c3\'a4\'b3\'ce \'c7\'f6\'c0\'e7 \'c8\'b0\'bc\'ba \'bc\'b3\'b8\'ed\'c0\'da \'b9\'f8\'c8\'a3)\'b4\'c2 \'b8\'f1\'b7\'cf\'c0\'c7 \'bc\'b3\'b8\'ed\'c0\'da\'b0\'a1 \'c8\'b0\'bc\'ba \'bb\'f3\'c5\'c2\'c0\'ce\'c1\'f6 \'b8\'f0\'b4\'cf\'c5\'cd\'b8\'b5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The user must initialize the DMA4_CCDNi register to 0 during the initial configuration.\par
\'bb\'e7\'bf\'eb\'c0\'da\'b4\'c2 \'c3\'ca\'b1\'e2 \'b1\'b8\'bc\'ba \'c1\'df\'bf\'a1 DMA4_CCDNi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 0\'c0\'b8\'b7\'ce \'c3\'ca\'b1\'e2\'c8\'ad\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
 When the DMA4_CCDNi register is updated, the DMA4_CCFNi and the DMA4_CCENi registers are updated.\par
 DMA4_CCDNi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b0\'a1 \'b0\'bb\'bd\'c5\'b5\'c7\'b8\'e9, DMA4_CCFNi \'b9\'d7 DMA4_CCENi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b0\'a1 \'b0\'bb\'bd\'c5\'b5\'c8\'b4\'d9.\par
\par
The user must also initialize the DMA4_CCFNi and DMA4_CCENi registers to 0xFFFF and to 0xFFFFFF, respectively, to track the effective transfer start of synchronized transfer.\par
\'b6\'c7\'c7\'d1 \'bb\'e7\'bf\'eb\'c0\'da\'b4\'c2 \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'c0\'fc\'bc\'db\'c0\'c7 \'c0\'af\'c8\'bf \'c0\'fc\'bc\'db \'bd\'c3\'c0\'db\'c0\'bb \'c3\'df\'c0\'fb\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 DMA4_CCFNi \'b9\'d7 DMA4_CCENi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'b0\'a2\'b0\'a2 0xFFFF \'b9\'d7 0xFFFFFF\'b7\'ce \'c3\'ca\'b1\'e2\'c8\'ad\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.1.4.20.4.4 Interrupt During Linked-List Execution\par
16.1.4.20.4.4 \'b8\'b5\'c5\'a9 \'b5\'c8 \'b8\'f1\'b7\'cf \'bd\'c7\'c7\'e0 \'c1\'df \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\par
\par
Any logical channel source of interrupt can be triggered during a linked-list execution, if the interrupt source is enabled during the initial configuration in CICR.\par
CICR\'c0\'c7 \'c3\'ca\'b1\'e2 \'b1\'b8\'bc\'ba \'c1\'df\'bf\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bc\'d2\'bd\'ba\'b0\'a1 \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'b0\'e6\'bf\'ec \'bf\'ac\'b0\'e1\'b5\'c8 \'b8\'f1\'b7\'cf \'bd\'c7\'c7\'e0 \'c1\'df\'bf\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'c0\'c7 \'b8\'f0\'b5\'e7 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'bc\'d2\'bd\'ba\'b0\'a1 \'c6\'ae\'b8\'ae\'b0\'c5 \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The DMA4_CICRi register can also be updated during the linked-list execution if descriptor types 1 and 2 are used.\par
DMA4_CICRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'b1\'e2\'bc\'fa\'c0\'da \'c0\'af\'c7\'fc 1\'b0\'fa 2\'b0\'a1 \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 \'b0\'e6\'bf\'ec \'bf\'ac\'b0\'e1\'b5\'c8 \'b8\'f1\'b7\'cf \'bd\'c7\'c7\'e0 \'c1\'df\'bf\'a1 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae \'b5\'c9 \'bc\'f6\'b5\'b5 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The use of an interrupt event in a link execution can be difficult, because the link can progress in parallel with interrupt service routine (ISR) execution.\par
\'b8\'b5\'c5\'a9\'b4\'c2 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bc\'ad\'ba\'f1\'bd\'ba \'b7\'e7\'c6\'be (ISR) \'bd\'c7\'c7\'e0\'b0\'fa \'ba\'b4\'b7\'c4\'b7\'ce \'c1\'f8\'c7\'e0\'b5\'c9 \'bc\'f6 \'c0\'d6\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'b8\'b5\'c5\'a9 \'bd\'c7\'c7\'e0\'bf\'a1\'bc\'ad \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'be\'ee\'b7\'c1\'bf\'ef \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
This makes it difficult to synchronize them unless system assumptions are used.\par
\'b5\'fb\'b6\'f3\'bc\'ad \'bd\'c3\'bd\'ba\'c5\'db \'b0\'a1\'c1\'a4\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'c1\'f6 \'be\'ca\'b4\'c2 \'c7\'d1 \'b5\'bf\'b1\'e2\'c8\'ad\'c7\'cf\'b1\'e2\'b0\'a1 \'be\'ee\'b7\'c6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The most appropriate synchronization model is to get an interrupt-only on linkedlist completion, when the last transfer block is complete.\par
\'b0\'a1\'c0\'e5 \'c0\'fb\'c7\'d5\'c7\'d1 \'b5\'bf\'b1\'e2\'c8\'ad \'b8\'f0\'b5\'a8\'c0\'ba \'b8\'b6\'c1\'f6\'b8\'b7 \'c0\'fc\'bc\'db \'ba\'ed\'b7\'cf\'c0\'cc \'bf\'cf\'b7\'e1 \'b5\'c9 \'b6\'a7 \'bf\'ac\'b0\'e1 \'b8\'f1\'b7\'cf \'bf\'cf\'b7\'e1\'bd\'c3\'bf\'a1\'b8\'b8 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'be\'f2\'b4\'c2 \'b0\'cd\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
This prevents the interrupt from occurring during the link execution.\par
\'c0\'cc\'b7\'b8\'b0\'d4\'c7\'cf\'b8\'e9 \'b8\'b5\'c5\'a9 \'bd\'c7\'c7\'e0 \'c1\'df \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'cf\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
An end-of-super-block interrupt event available in the DMA4_CICRi and DMA4_CSRi registers can be enabled at initial configuration or when using descriptor types 1 and 2.\par
DMA4_CICRi \'b9\'d7 DMA4_CSRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6\'c0\'d6\'b4\'c2 \'bc\'f6\'c6\'db\'b9\'d9\'c0\'cc\'c0\'fa \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'c3\'ca\'b1\'e2 \'b1\'b8\'bc\'ba\'bd\'c3 \'b6\'c7\'b4\'c2 \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd \'c0\'af\'c7\'fc 1\'b0\'fa 2\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d2 \'b6\'a7 \'c8\'b0\'bc\'ba\'c8\'ad \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
To prevent the use of descriptor type 1 or 2 to update BLOCK_IE (full DMA4_CICRi update), a dedicated BLOCK_IE bit field is also available in a type 3 descriptor.\par
\'b1\'e2\'bc\'fa\'c0\'da \'c0\'af\'c7\'fc 1 \'b6\'c7\'b4\'c2 2\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 BLOCK_IE (\'c0\'fc\'c3\'bc DMA4_CICRi \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae)\'b8\'a6 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'c7\'cf\'c1\'f6 \'b8\'f8\'c7\'cf\'b0\'d4\'c7\'cf\'b7\'c1\'b8\'e9 \'c0\'fc\'bf\'eb BLOCK_IE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b8\'a6 \'c0\'af\'c7\'fc 3 \'bc\'b3\'b8\'ed\'c0\'da\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.1.4.20.4.5 Pause a Linked List\par
16.1.4.20.4.5 \'b8\'b5\'c5\'a9 \'b5\'c8 \'b8\'f1\'b7\'cf \'c0\'cf\'bd\'c3 \'c1\'df\'c1\'f6\par
\par
When the channel is suspended, it remains enabled.\par
\'c3\'a4\'b3\'ce\'c0\'cc \'c0\'cf\'bd\'c3 \'c1\'df\'c1\'f6\'b5\'c7\'b8\'e9 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'d1 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'af\'c1\'f6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The pause behaves differently, depending on the transfer mode:\par
\'c0\'cf\'bd\'c3 \'c1\'df\'c1\'f6\'b4\'c2 \'c0\'fc\'bc\'db \'b8\'f0\'b5\'e5\'bf\'a1 \'b5\'fb\'b6\'f3 \'b4\'d9\'b8\'a3\'b0\'d4 \'b5\'bf\'c0\'db\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Normal transfer mode: If the user sets the DMA4_CDPi[7] PAUSE_LINK_LIST bit to 1, the channel completes the current read and write transactions and then suspends the channel.\par
\bullet  \'c0\'cf\'b9\'dd \'c0\'fc\'bc\'db \'b8\'f0\'b5\'e5 : \'bb\'e7\'bf\'eb\'c0\'da\'b0\'a1 DMA4_CDPi [7] PAUSE_LINK_LIST \'ba\'f1\'c6\'ae\'b8\'a6 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'b8\'e9 \'c3\'a4\'b3\'ce\'c0\'ba \'c7\'f6\'c0\'e7 \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'bb \'bf\'cf\'b7\'e1 \'c7\'d1 \'b4\'d9\'c0\'bd \'c3\'a4\'b3\'ce\'c0\'bb \'c0\'cf\'bd\'c3 \'c1\'df\'b4\'dc\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The channel can be resumed by setting the channel DMA4_CDPi[7] PAUSE_LINK_LIST bit to 0.\par
\'c3\'a4\'b3\'ce\'c0\'ba DMA4_CDPi [7] PAUSE_LINK_LIST \'ba\'f1\'c6\'ae\'b8\'a6 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'bf\'a9 \'b4\'d9\'bd\'c3 \'bd\'c3\'c0\'db\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  Linked-list type 1, 2, or 3 mode: The user must not set the DMA4_CDPi[7] PAUSE_LINK_LIST bit through the configuration port; otherwise, transfer behavior is undefined.\par
\bullet  \'bf\'ac\'b0\'e1\'b5\'c8 \'b8\'f1\'b7\'cf \'c0\'af\'c7\'fc 1, 2 \'b6\'c7\'b4\'c2 3 \'b8\'f0\'b5\'e5 : \'bb\'e7\'bf\'eb\'c0\'da\'b4\'c2 \'b1\'b8\'bc\'ba \'c6\'f7\'c6\'ae\'b8\'a6 \'c5\'eb\'c7\'d8 DMA4_CDPi [7] PAUSE_LINK_LIST \'ba\'f1\'c6\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'c1\'f6 \'be\'ca\'be\'c6\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9. \'b1\'d7\'b7\'b8\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 \'c0\'fc\'bc\'db \'b5\'bf\'c0\'db\'c0\'cc \'c1\'a4\'c0\'c7\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
A PAUSE_LINK_LIST bit (P) is set to 1 in the descriptor.\par
PAUSE_LINK_LIST \'ba\'f1\'c6\'ae (P)\'b4\'c2 \'b1\'e2\'bc\'fa\'c0\'da\'bf\'a1\'bc\'ad 1\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\endash  The channel is suspended after the descriptor load, translation, and configuration memory update are complete.\par
- \'bc\'b3\'b8\'ed\'c0\'da\'b7\'ce\'b5\'e5, \'ba\'af\'c8\'af \'b9\'d7 \'b1\'b8\'bc\'ba \'b8\'de\'b8\'f0\'b8\'ae \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b0\'a1 \'bf\'cf\'b7\'e1\'b5\'c7\'b8\'e9 \'c3\'a4\'b3\'ce\'c0\'cc \'c0\'cf\'bd\'c3 \'c1\'df\'b4\'dc\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\endash  The linked list can be resumed by resetting the DMA4_CDPi[7] PAUSE_LINK_LIST bit (through the configuration port).\par
- \'b8\'b5\'c5\'a9 \'b5\'c8 \'b8\'f1\'b7\'cf\'c0\'ba DMA4_CDPi [7] PAUSE_LINK_LIST \'ba\'f1\'c6\'ae (\'b1\'b8\'bc\'ba \'c6\'f7\'c6\'ae\'b8\'a6 \'c5\'eb\'c7\'d8)\'b8\'a6 \'c0\'e7\'bc\'b3\'c1\'a4\'c7\'cf\'bf\'a9 \'b4\'d9\'bd\'c3 \'bd\'c3\'c0\'db\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.1.4.20.4.6 Stop a Linked List (Abort or Drain)\par
16.1.4.20.4.6 \'b8\'b5\'c5\'a9 \'b5\'c8 \'b8\'f1\'b7\'cf \'c1\'df\'c1\'f6 (\'c1\'df\'c1\'f6 \'b6\'c7\'b4\'c2 \'c1\'df\'b4\'dc)\par
\par
The channel can be stopped for a drain or an abort. These cases are exclusive.\par
\'b5\'e5\'b7\'b9\'c0\'ce \'b6\'c7\'b4\'c2 \'c1\'df\'b4\'dc\'c0\'bb \'c0\'a7\'c7\'d8 \'c3\'a4\'b3\'ce\'c0\'bb \'c1\'df\'c1\'f6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.  \'c0\'cc\'b7\'af\'c7\'d1 \'b0\'e6\'bf\'ec\'b4\'c2 \'b5\'b6\'c1\'a1\'c0\'fb\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
16.1.4.20.4.6.1 Drain\par
16.1.4.20.4.6.1 \'c1\'df\'c1\'f6\par
\par
\bullet  Drain conditions:\par
\bullet  \'c1\'df\'c1\'f6 \'c1\'b6\'b0\'c7 :\par
\par
A channel is a drain candidate if it is a hardware-source-synchronized transfer with DMA4_CCRi[25] BUFFERING_DISABLE = 0 and should not be doing any of the graphics operation (transparent copy or solid-color fill).\par
DMA4_CCRi [25] BUFFERING_DISABLE = 0\'c0\'c7 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'bc\'d2\'bd\'ba \'b5\'bf\'b1\'e2\'bd\'c4 \'c0\'fc\'bc\'db\'bf\'a1\'bc\'ad \'b1\'d7\'b7\'a1\'c7\'c8 \'c0\'db\'be\'f7 (\'c5\'f5\'b8\'ed \'ba\'b9\'bb\'e7 \'b6\'c7\'b4\'c2 \'b4\'dc\'bb\'f6 \'c3\'a4\'bf\'ec\'b1\'e2)\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'d8\'be\'df \'be\'ca\'c0\'b8\'b8\'e9 \'c3\'a4\'b3\'ce\'c0\'ba \'c1\'df\'c1\'f6 \'c8\'c4\'ba\'b8\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
\bullet  Drain trigger:\par
\bullet  \'b5\'e5\'b7\'b9\'c0\'ce \'c6\'ae\'b8\'ae\'b0\'c5 :\par
\par
A drain candidate channel is drained if it is disabled (DMA4_CCRi[7] ENABLE = 0) or if it receives a transaction error on the read port.\par
\'b5\'e5\'b7\'b9\'c0\'ce \'c8\'c4\'ba\'b8 \'c3\'a4\'b3\'ce\'c0\'ba \'b5\'f0\'bd\'ba \'bf\'a1\'c0\'cc\'ba\'ed\'b5\'c7\'be\'ee \'c0\'d6\'b0\'c5\'b3\'aa (DMA4_CCRi [7] ENABLE = 0), \'c6\'c7\'b5\'b6 \'c6\'f7\'c6\'ae\'bb\'f3\'bf\'a1\'bc\'ad \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7 \'bf\'a1\'b7\'af\'b8\'a6 \'bc\'f6\'bd\'c5\'c7\'cf\'b8\'e9 \'b5\'e5\'b7\'b9\'c0\'ce\'b5\'c8\'b4\'d9.\par
\par
\bullet  Drain behavior with a type 1, 2, or 3 descriptor. Drain trigger can occur in two situations:\par
\bullet  \'c0\'af\'c7\'fc 1, 2 \'b6\'c7\'b4\'c2 3 \'bc\'b3\'b8\'ed\'c0\'da\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d1 \'ba\'f1\'bb\'ea \'b5\'bf\'c0\'db. \'b5\'e5\'b7\'b9\'c0\'ce \'c6\'ae\'b8\'ae\'b0\'c5\'b4\'c2 \'b5\'ce \'b0\'a1\'c1\'f6 \'bb\'f3\'c8\'b2\'bf\'a1\'bc\'ad \'b9\'df\'bb\'fd\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\endash  During descriptor loading: Any ongoing current transaction is complete and the channel is aborted.\par
- \'bc\'b3\'b8\'ed\'c0\'da\'b7\'ce\'b5\'e5 \'c1\'df : \'c1\'f8\'c7\'e0\'c1\'df\'c0\'ce \'c7\'f6\'c0\'e7 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'b0\'ed \'c3\'a4\'b3\'ce\'c0\'cc \'c1\'df\'b4\'dc\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\endash  During data loading: The read is completed at the boundary of the request (element/frame/packet/block boundary), the FIFO is drained to the destination, and then a DRAIN_END interrupt can be asserted.\par
- \'b5\'a5\'c0\'cc\'c5\'cd\'b7\'ce\'b5\'e5 \'c1\'df : \'bf\'e4\'c3\'bb \'b0\'e6\'b0\'e8 (\'bf\'e4\'bc\'d2 / \'c7\'c1\'b7\'b9\'c0\'d3 / \'c6\'d0\'c5\'b6 / \'ba\'ed\'b7\'cf \'b0\'e6\'b0\'e8)\'bf\'a1\'bc\'ad \'c0\'d0\'b1\'e2\'b0\'a1 \'bf\'cf\'b7\'e1\'b5\'c7\'b0\'ed FIFO\'b0\'a1 \'b4\'eb\'bb\'f3\'c0\'b8\'b7\'ce \'b5\'e5\'b7\'b9\'c0\'ce \'b5\'c8 \'b4\'d9\'c0\'bd DRAIN_END \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.1.4.20.4.6.2 Abort\par
16.1.4.20.4.6.2 \'c1\'df\'b4\'dc\par
\par
\bullet  Abort condition:\par
\bullet  \'c1\'df\'b4\'dc \'c1\'b6\'b0\'c7 :\par
\par
A channel is an abort candidate if it is software-synchronized, hardware-destination-synchronized, solid color-fill, transparent-color fill, or hardware-source-synchronized with DMA4_CCRi[25] BUFFERING_DISABLE = 1.\par
\'c3\'a4\'b3\'ce\'c0\'ba \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad, \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b4\'eb\'bb\'f3 \'b5\'bf\'b1\'e2\'c8\'ad, \'b4\'dc\'bb\'f6 \'c3\'a4\'bf\'ec\'b1\'e2, \'c5\'f5\'b8\'ed \'bb\'f6\'bb\'f3 \'c3\'a4\'bf\'ec\'b1\'e2 \'b6\'c7\'b4\'c2 DMA4_CCRi [25] BUFFERING_DISABLE = 1\'b7\'ce \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'bc\'d2\'bd\'ba \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'ce \'b0\'e6\'bf\'ec \'c1\'df\'b4\'dc \'c8\'c4\'ba\'b8\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
\bullet  Abort trigger:\par
\bullet  \'c6\'ae\'b8\'ae\'b0\'c5 \'c1\'df\'b4\'dc :\par
\par
A channel is an abort candidate if it is disabled (DMA4_CCRi[7] ENABLE = 0), if it receives a transaction error on the read or write port, or if there is a MISALIGNMENT_ERROR.\par
\'c3\'a4\'b3\'ce\'c0\'cc \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'b0\'e6\'bf\'ec (DMA4_CCRi [7] ENABLE = 0) \'c1\'df\'b4\'dc\'b5\'c7\'b0\'c5\'b3\'aa, \'c0\'d0\'b1\'e2 \'b6\'c7\'b4\'c2 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'bf\'a1\'bc\'ad \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7 \'bf\'c0\'b7\'f9\'b8\'a6 \'bc\'f6\'bd\'c5\'c7\'cf\'b0\'c5\'b3\'aa MISALIGNMENT_ERROR\'b0\'a1\'c0\'d6\'b4\'c2 \'b0\'e6\'bf\'ec \'c3\'a4\'b3\'ce\'c0\'cc \'c1\'df\'b4\'dc\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  Abort behavior with a type 1, 2, or 3 descriptor:\par
\bullet  \'c0\'af\'c7\'fc 1, 2 \'b6\'c7\'b4\'c2 3 \'bc\'b3\'b8\'ed\'c0\'da\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d1 \'b5\'bf\'c0\'db \'c1\'df\'b4\'dc :\par
\par
If an abort trigger occurs, the channel aborts immediately after completion of current read/write transactions and then the FIFO is cleaned up.\par
\'c1\'df\'b4\'dc \'c6\'ae\'b8\'ae\'b0\'c5\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'cf\'b8\'e9 \'c7\'f6\'c0\'e7 \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c8 \'c1\'f7\'c8\'c4 \'c3\'a4\'b3\'ce\'c0\'cc \'c1\'df\'b4\'dc \'b5\'c8 \'b4\'d9\'c0\'bd FIFO\'b0\'a1 \'c1\'a4\'b8\'ae\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
In type 1, 2, or 3, if an abort trigger or drain trigger occurs during the descriptor load phase, the channel aborts.\par
\'c0\'af\'c7\'fc 1, 2 \'b6\'c7\'b4\'c2 3\'bf\'a1\'bc\'ad \'bc\'b3\'b8\'ed\'c0\'da\'b7\'ce\'b5\'e5 \'b4\'dc\'b0\'e8\'bf\'a1\'bc\'ad \'c1\'df\'b4\'dc \'c6\'ae\'b8\'ae\'b0\'c5 \'b6\'c7\'b4\'c2 \'b5\'e5\'b7\'b9\'c0\'ce \'c6\'ae\'b8\'ae\'b0\'c5\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'cf\'b8\'e9 \'c3\'a4\'b3\'ce\'c0\'cc \'c1\'df\'b4\'dc\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.1.4.20.4.7 Status Bit Behavior\par
16.1.4.20.4.7 \'bb\'f3\'c5\'c2 \'ba\'f1\'c6\'ae \'b5\'bf\'c0\'db\par
\par
This section describes the behavior of the DMA4_CSRi[6] SYNC, DMA4_CCRi[9] RD_ACTIVE and DMA4_CCRi[10] WR_ACTIVE status bits:\par
\'c0\'cc \'c0\'fd\'bf\'a1\'bc\'ad\'b4\'c2 DMA4_CSRi [6] SYNC, DMA4_CCRi [9] RD_ACTIVE \'b9\'d7 DMA4_CCRi [10] WR_ACTIVE \'bb\'f3\'c5\'c2 \'ba\'f1\'c6\'ae\'c0\'c7 \'b5\'bf\'c0\'db\'c0\'bb \'bc\'b3\'b8\'ed\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  For a hardware-synchronized channel in linked-list mode, the DMA4_CSRi[6] SYNC bit becomes active (DMA4_CSRi[6] SYNC = 1) when the first data load transaction is scheduled and remains active until the last data load transaction in the block (not super block) is descheduled (DMA4_CSRi[6] SYNC = 0).\par
\bullet  \'bf\'ac\'b0\'e1\'b5\'c8 \'b8\'f1\'b7\'cf \'b8\'f0\'b5\'e5\'c0\'c7 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad \'c3\'a4\'b3\'ce\'c0\'ce \'b0\'e6\'bf\'ec \'c3\'b9 \'b9\'f8\'c2\'b0 \'b5\'a5\'c0\'cc\'c5\'cd\'b7\'ce\'b5\'e5 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc \'bf\'b9\'be\'e0 \'b5\'c9 \'b6\'a7 DMA4_CSRi [6] SYNC \'ba\'f1\'c6\'ae\'b0\'a1 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b0\'ed (DMA4_CSRi [6] SYNC = 1), \'b8\'b6\'c1\'f6\'b8\'b7 \'b5\'a5\'c0\'cc\'c5\'cd\'b7\'ce\'b5\'e5 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7 \'ba\'ed\'b7\'cf (\'bd\'b4\'c6\'db \'ba\'ed\'b7\'cf\'c0\'cc \'be\'c6\'b4\'d4)\'c0\'cc \'bd\'ba\'c4\'c9\'c1\'ec\'b8\'b5\'b5\'c8\'b4\'d9 (DMA4_CSRi [6] SYNC = 0).\par
\par
The SYNC bit is not active during the descriptor load phase.\par
SYNC \'ba\'f1\'c6\'ae\'b4\'c2 \'bc\'b3\'b8\'ed\'c0\'da\'b7\'ce\'b5\'e5 \'b4\'dc\'b0\'e8\'bf\'a1\'bc\'ad \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The SYNC bit is not active during the descriptor load phase.\par
SYNC \'ba\'f1\'c6\'ae\'b4\'c2 \'bc\'b3\'b8\'ed\'c0\'da\'b7\'ce\'b5\'e5 \'b4\'dc\'b0\'e8\'bf\'a1\'bc\'ad \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  The DMA4_CCRi[9] RD_ACTIVE bit is active during the data load phase and the descriptor load phase. It becomes active when the first read transaction is scheduled. It becomes inactive:\par
\bullet  DMA4_CCRi [9] RD_ACTIVE \'ba\'f1\'c6\'ae\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'b7\'ce\'b5\'e5 \'b4\'dc\'b0\'e8\'bf\'cd \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'b7\'ce\'b5\'e5 \'b4\'dc\'b0\'e8\'bf\'a1\'bc\'ad \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9. \'c3\'b9 \'b9\'f8\'c2\'b0 \'c0\'d0\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc \'bf\'b9\'be\'e0 \'b5\'c9 \'b6\'a7 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9. \'ba\'f1\'c8\'b0\'bc\'ba \'bb\'f3\'c5\'c2\'b0\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  The DMA4_CCRi[9] RD_ACTIVE bit is active during the data load phase and the descriptor load phase.\par
\bullet  DMA4_CCRi [9] RD_ACTIVE \'ba\'f1\'c6\'ae\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'b7\'ce\'b5\'e5 \'b4\'dc\'b0\'e8\'bf\'cd \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'b7\'ce\'b5\'e5 \'b4\'dc\'b0\'e8\'bf\'a1\'bc\'ad \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 It becomes active when the first read transaction is scheduled.\par
  \'c3\'b9 \'b9\'f8\'c2\'b0 \'c0\'d0\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc \'bf\'b9\'be\'e0 \'b5\'c9 \'b6\'a7 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
It becomes inactive:\par
\'ba\'f1\'c8\'b0\'bc\'ba \'bb\'f3\'c5\'c2\'b5\'c7\'b4\'c2\'b0\'e6\'bf\'ec.\par
\par
\endash  When (during the descriptor load phase) the last descriptor write request is descheduled\par
- (\'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'b7\'ce\'b5\'e5 \'b4\'dc\'b0\'e8 \'b5\'bf\'be\'c8) \'b8\'b6\'c1\'f6\'b8\'b7 \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd \'be\'b2\'b1\'e2 \'bf\'e4\'c3\'bb\'c0\'cc \'bf\'b9\'c1\'a4 \'c3\'eb\'bc\'d2 \'b5\'c8 \'b0\'e6\'bf\'ec\par
\par
\endash  When (during the data load phase) the last read transaction in the block (not super block) is descheduled for software-synchronized transfer or destination-synchronized transfer with prefetch enabled\par
- (\'b5\'a5\'c0\'cc\'c5\'cd\'b7\'ce\'b5\'e5 \'b4\'dc\'b0\'e8\'bf\'a1\'bc\'ad) \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db \'b6\'c7\'b4\'c2 \'c7\'c1\'b8\'ae \'c6\'e4\'c4\'a1\'b0\'a1 \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'b8\'f1\'c0\'fb\'c1\'f6 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec \'ba\'ed\'b7\'cf (\'bd\'b4\'c6\'db \'ba\'ed\'b7\'cf\'c0\'cc \'be\'c6\'b4\'d4)\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'c0\'d0\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc \'bf\'b9\'c1\'a4\'b5\'c7\'be\'ee \'c0\'d6\'c1\'f6 \'be\'ca\'c0\'bb \'b6\'a7\par
\par
\endash  When (during the data load phase) the last read transaction in the request (element/frame/packet/block sync) is descheduled for hardware-source-synchronized transfer or hardware-destination-synchronized transfer without prefetch\par
- \'b5\'a5\'c0\'cc\'c5\'cd\'b7\'ce\'b5\'e5 \'b4\'dc\'b0\'e8\'bf\'a1\'bc\'ad \'bf\'e4\'c3\'bb (\'bf\'e4\'bc\'d2 / \'c7\'c1\'b7\'b9\'c0\'d3 / \'c6\'d0\'c5\'b6 / \'ba\'ed\'b7\'cf \'b5\'bf\'b1\'e2\'c8\'ad)\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'c0\'d0\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'bc\'d2\'bd\'ba \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'c0\'fc\'bc\'db \'b6\'c7\'b4\'c2 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b0\'a1\'c1\'ae \'bf\'c0\'b1\'e2\'b0\'a1\'be\'f8\'b4\'c2 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b4\'eb\'bb\'f3 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec \'b9\'cc\'b8\'ae \'bf\'b9\'c1\'a4\'b5\'c8 \'b0\'e6\'bf\'ec\par
\par
\bullet  The DMA4_CCRi[10] WR_ACTIVE bit is active only during the data load phase.\par
\bullet  DMA4_CCRi [10] WR_ACTIVE \'ba\'f1\'c6\'ae\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'b7\'ce\'b5\'e5 \'b4\'dc\'b0\'e8\'bf\'a1\'bc\'ad\'b8\'b8 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
It becomes active when the first write transaction is scheduled and becomes inactive:\par
\'c3\'b9 \'b9\'f8\'c2\'b0 \'be\'b2\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc \'bf\'b9\'be\'e0\'b5\'c7\'be\'ee \'ba\'f1\'c8\'b0\'bc\'ba \'bb\'f3\'c5\'c2\'b0\'a1\'b5\'c7\'b8\'e9 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\endash  Until the last write transaction in the block (not super block) is descheduled and the FIFO is cleaned up for software-synchronized transfer\par
 \'ba\'ed\'b7\'cf (\'bd\'b4\'c6\'db \'ba\'ed\'b7\'cf\'c0\'cc \'be\'c6\'b4\'d4)\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'be\'b2\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'cc \'bd\'ba\'c4\'c9\'c1\'ec\'b5\'c7\'be\'ee FIFO\'b0\'a1 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'bb \'c0\'a7\'c7\'d8 \'c1\'a4\'b8\'ae \'b5\'c9 \'b6\'a7\'b1\'ee\'c1\'f6\par
\par
\endash  Until the last write transaction in the request (element/frame/packet/block sync) is descheduled and the FIFO is cleaned up for hardware-source-synchronized transfer (with DMA4_CCRi[25] BUFFERING_DISABLE = 0) or hardware-destination-synchronized transfer.\par
- \'bf\'e4\'c3\'bb\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'be\'b2\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7 (\'bf\'e4\'bc\'d2 / \'c7\'c1\'b7\'b9\'c0\'d3 / \'c6\'d0\'c5\'b6 / \'ba\'ed\'b7\'cf \'b5\'bf\'b1\'e2\'c8\'ad)\'c0\'cc \'bf\'b9\'c1\'a4\'b5\'c7\'be\'ee \'c0\'d6\'b0\'ed FIFO\'b0\'a1 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee - \'bc\'d2\'bd\'ba \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db (DMA4_CCRi [25] BUFFERING_DISABLE = 0) \'b6\'c7\'b4\'c2 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b8\'f1\'c0\'fb\'c1\'f6 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'bb \'c0\'a7\'c7\'d8 \'c1\'a4\'b8\'ae \'c7\'d1\'b4\'d9.\par
\par
16.1.4.20.4.8 Linked-List Channel Linking\par
16.1.4.20.4.8 \'b8\'b5\'c5\'a9 \'b5\'c8 \'b8\'f1\'b7\'cf \'c3\'a4\'b3\'ce \'bf\'ac\'b0\'e1\par
\par
Channel linking for inter- and intra-super blocks is supported for type 1, 2, and 3 descriptors.\par
\'b3\'bb\'ba\'ce \'b9\'d7 \'b3\'bb\'ba\'ce \'bd\'b4\'c6\'db \'ba\'ed\'b7\'cf\'bf\'a1 \'b4\'eb\'c7\'d1 \'c3\'a4\'b3\'ce \'bf\'ac\'b0\'e1\'c0\'ba \'c0\'af\'c7\'fc 1, 2 \'b9\'d7 3 \'bc\'b3\'b8\'ed\'c0\'da\'bf\'a1 \'b4\'eb\'c7\'d8 \'c1\'f6\'bf\'f8\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Assume that CHx and CHz are linked-list channels using generic descriptors.\par
CHx\'bf\'cd CHz\'b4\'c2 generic descriptor\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b8\'b5\'c5\'a9\'b8\'ae\'bd\'ba\'c6\'ae \'c3\'a4\'b3\'ce\'c0\'cc\'b6\'f3\'b0\'ed \'b0\'a1\'c1\'a4\'c7\'d1\'b4\'d9.\par
\par
If CHx is composed of N descriptors and CHz is composed of M descriptors, then in nonfast mode:\par
CHx\'b0\'a1 N \'b0\'b3\'c0\'c7 \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'c7\'b0\'ed CHz\'b0\'a1 M \'b0\'b3\'c0\'c7 \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'c7\'b8\'e9 \'ba\'f1\'b5\'bf\'b1\'e2 \'b8\'f0\'b5\'e5\'bf\'a1\'bc\'ad \'b4\'d9\'c0\'bd\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
CHx: CHx[Data1]-> CHx[DES1] -> . -> CHx[DESN]->CHx[DataN + 1]\par
CHz: CHz[Data1]-> CHz[DES1] -> . -> CHz[DESM]->CHz[DataM + 1]\par
\par
It is possible to link CHx to CHz or CHx to itself after the completion of the CHx transfer (end of super block).\par
CHx \'c0\'fc\'bc\'db (\'bd\'b4\'c6\'db \'ba\'ed\'b7\'cf\'c0\'c7 \'b3\'a1) \'bf\'cf\'b7\'e1 \'c8\'c4\'bf\'a1 CHx\'b8\'a6 CHz \'b6\'c7\'b4\'c2 CHx\'bf\'a1 \'bf\'ac\'b0\'e1\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'b0\'a1\'b4\'c9\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
 To do this, the user must set the DMA4_CLNK_CTRLi[15] ENABLE_LNK bit to 1 and the DMA4_CLNK_CTRLi[4:0] NEXTLCH_ID bit to z (or to x for self linking) through the last descriptor using a type 1 descriptor.\par
  \'c0\'cc\'b7\'b8\'b0\'d4\'c7\'cf\'b7\'c1\'b8\'e9 \'bb\'e7\'bf\'eb\'c0\'da\'b4\'c2 \'c0\'af\'c7\'fc 1 \'bc\'b3\'b8\'ed\'c0\'da\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'b8\'b6\'c1\'f6\'b8\'b7 \'bc\'b3\'b8\'ed\'c0\'da\'b8\'a6 \'c5\'eb\'c7\'d8 DMA4_CLNK_CTRLi [15] ENABLE_LNK \'ba\'f1\'c6\'ae\'b8\'a6 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'b0\'ed DMA4_CLNK_CTRLi [4 : 0] NEXTLCH_ID \'ba\'f1\'c6\'ae\'b8\'a6 z (\'b6\'c7\'b4\'c2 \'c0\'da\'c3\'bc \'bf\'ac\'b0\'e1\'c0\'c7 \'b0\'e6\'bf\'ec x)\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The sequence is:\par
\'bc\'f8\'bc\'ad\'b4\'c2 \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
CHx: CHx[Data1]-> CHx[DES1] -> . -> CHx[DESN]-CHx[DataN+1] -> CHz: CHz[Data1]-> CHz[DES1] -> . -> CHz[DESM]->CHz[DataM+1]\par
\par
It is also possible to link CHx to CHz during the CHx transfer and before the end of super block.\par
CHx \'c0\'fc\'bc\'db \'c1\'df\'bf\'a1 \'b1\'d7\'b8\'ae\'b0\'ed \'bc\'f6\'c6\'db \'ba\'ed\'b7\'cf\'c0\'c7 \'b3\'a1 \'c0\'cc\'c0\'fc\'bf\'a1 CHx\'b8\'a6 CHz\'bf\'a1 \'bf\'ac\'b0\'e1\'c7\'d2 \'bc\'f6\'b5\'b5 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The user must set the DMA4_CLNK_CTRLi[15] ENABLE_LNK bit to 1 and the DMA4_CLNK_CTRLi[4:0] NEXTLCH_ID bit to z through descriptor p (CHx[DESp]) using a type 1 descriptor.\par
\'bb\'e7\'bf\'eb\'c0\'da\'b4\'c2 \'c5\'b8\'c0\'d4 1 \'b1\'e2\'bc\'fa\'c0\'da\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 DMA4_CLNK_CTRLi [15] ENABLE_LNK \'ba\'f1\'c6\'ae\'b8\'a6 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'b0\'ed DMA4_CLNK_CTRLi [4 : 0] NEXTLCH_ID \'ba\'f1\'c6\'ae\'b8\'a6 \'b1\'e2\'bc\'fa\'c0\'da p (CHx [DESp])\'b8\'a6 \'c5\'eb\'c7\'d8 z\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The sequence is:\par
\'bc\'f8\'bc\'ad\'b4\'c2 \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
CHx: CHx[Data1]-> CHx[DES1] ->.-> CHx[DESp]->CHx[Data(p + 1)] -> CHz[Data1]-> CHz[DES1] -> .\par
\par
The user must continue the linking until channels CHx and CHz complete their super-block transfers; otherwise, the channels remain enabled.\par
\'bb\'e7\'bf\'eb\'c0\'da\'b4\'c2 \'c3\'a4\'b3\'ce CHx\'bf\'cd CHz\'b0\'a1 \'bd\'b4\'c6\'db \'ba\'ed\'b7\'cf \'c0\'fc\'bc\'db\'c0\'bb \'bf\'cf\'b7\'e1 \'c7\'d2 \'b6\'a7\'b1\'ee\'c1\'f6 \'b8\'b5\'c5\'a9\'b8\'a6 \'b0\'e8\'bc\'d3\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9. \'b1\'d7\'b7\'b8\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 \'c3\'a4\'b3\'ce\'c0\'cc \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'d1 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'af\'c1\'f6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
NOTE: In channel linking, the head of a chain can be in fast mode or nonfast mode.\par
\'c2\'fc\'b0\'ed : \'c3\'a4\'b3\'ce \'bf\'ac\'b0\'e1\'bf\'a1\'bc\'ad \'c3\'bc\'c0\'ce\'c0\'c7 \'c7\'ec\'b5\'e5\'b4\'c2 \'ba\'fc\'b8\'a5 \'b8\'f0\'b5\'e5 \'b6\'c7\'b4\'c2 \'ba\'f1 \'b0\'ed\'c1\'a4 \'b8\'f0\'b5\'e5 \'c0\'cf \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
 All channels that are not in the head of the chain can be in nonfast mode only.\par
 \'c3\'bc\'c0\'ce\'c0\'c7 \'c7\'ec\'b5\'e5\'bf\'a1\'be\'f8\'b4\'c2 \'b8\'f0\'b5\'e7 \'c3\'a4\'b3\'ce\'c0\'ba \'ba\'f1 \'b0\'ed\'c1\'a4 \'b8\'f0\'b5\'e5\'bf\'a1\'b8\'b8\'c0\'d6\'c0\'bb \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
In self-linking, the channel cannot be in fast mode.\par
\'c0\'da\'c3\'bc \'bf\'ac\'b0\'e1\'bf\'a1\'bc\'ad \'c3\'a4\'b3\'ce\'c0\'ba \'ba\'fc\'b8\'a5 \'b8\'f0\'b5\'e5 \'c0\'cf \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
NOTE: If channel CHx links to CHz in the middle of the superblock transfer (remember link bit can be set through Type-1 descriptor load), CHx is disabled after the corresponding data load and enables the channel CHz.\par
\'c2\'fc\'b0\'ed : \'bc\'f6\'c6\'db \'ba\'ed\'b7\'cf \'c0\'fc\'bc\'db \'c1\'df\'bf\'a1 \'c3\'a4\'b3\'ce CHx\'b0\'a1 CHz\'bf\'a1 \'bf\'ac\'b0\'e1\'b5\'c7\'b8\'e9 (\'b8\'b5\'c5\'a9 \'ba\'f1\'c6\'ae\'b4\'c2 \'c0\'af\'c7\'fc -1 \'bc\'b3\'b8\'ed\'c0\'da\'b7\'ce\'b5\'e5\'b8\'a6 \'c5\'eb\'c7\'d8 \'bc\'b3\'c1\'a4 \'b5\'c9 \'bc\'f6 \'c0\'d6\'c0\'bd\'c0\'bb \'b1\'e2\'be\'ef\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.) \'c7\'d8\'b4\'e7 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1\'b7\'ce\'b5\'e5 \'b5\'c8 \'c8\'c4 CHx\'b0\'a1 \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b0\'ed \'c3\'a4\'b3\'ce CHz\'b0\'a1 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.1.5 DMA_SYSTEM Basic Programming Model\par
16.1.5 DMA_SYSTEM \'b1\'e2\'ba\'bb \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b8\'f0\'b5\'a8\par
\par
16.1.5.1 Setup Configuration\par
16.1.5.1 \'bc\'b3\'c1\'a4 \'b1\'b8\'bc\'ba\par
\par
After a hardware reset, program all fields in the logical channel registers to default values for any channels used, because most fields are undefined following reset.\par
\'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b8\'ae\'bc\'c2 \'c8\'c4\'bf\'a1 \'b8\'ae\'bc\'c2 \'c8\'c4\'bf\'a1 \'b4\'eb\'ba\'ce\'ba\'d0\'c0\'c7 \'c7\'ca\'b5\'e5\'b0\'a1 \'c1\'a4\'c0\'c7\'b5\'c7\'c1\'f6 \'be\'ca\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'b8\'f0\'b5\'e7 \'c7\'ca\'b5\'e5\'b8\'a6 \'bb\'e7\'bf\'eb \'b5\'c8 \'b8\'f0\'b5\'e7 \'c3\'a4\'b3\'ce\'c0\'c7 \'b1\'e2\'ba\'bb\'b0\'aa\'c0\'b8\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
Before programming any DMA transfers, the priority arbitration rate and the maximum FIFO depth must be configured through the DMA4_GCR register, and any required interrupts must be enabled through the DMA4_IRQENABLE_Lj registers and the logical channel DMA4_CICRi registers.\par
DMA \'c0\'fc\'bc\'db\'c0\'bb \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 DMA4_GCR \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c1\'b6\'c1\'a4 \'bc\'d3\'b5\'b5\'bf\'cd \'c3\'d6\'b4\'eb FIFO \'b1\'ed\'c0\'cc\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'d8\'be\'df\'c7\'cf\'b8\'e7 DMA4_IRQENABLE_Lj \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'cd \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce DMA4_CICRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 \'c7\'ca\'bf\'e4\'c7\'d1 \'b8\'f0\'b5\'e7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'c8\'b0\'bc\'ba\'c8\'ad\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Software clears the DMA4_CSRi register and the IRQSTATUS bit for the different interrupt lines before enabling the channel.\par
\'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'b4\'c2 \'c3\'a4\'b3\'ce\'c0\'bb \'c8\'b0\'bc\'ba\'c8\'ad\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 DMA4_CSRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'cd IRQSTATUS \'ba\'f1\'c6\'ae\'b8\'a6 \'b4\'d9\'b8\'a5 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'b6\'f3\'c0\'ce\'bf\'a1 \'b4\'eb\'c7\'d8 \'c1\'f6 \'bf\'f3\'b4\'cf\'b4\'d9.\par
\par
16.1.5.2 Software-Triggered (Nonsynchronized) Transfer\par
16.1.5.2 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'c6\'ae\'b8\'ae\'b0\'c5 (\'ba\'f1\'b5\'bf\'b1\'e2) \'c0\'fc\'bc\'db\par
\par
To program a software-triggered DMA transfer:\par
\'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'c6\'ae\'b8\'ae\'b0\'c5 DMA \'c0\'fc\'bc\'db\'c0\'bb \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'cf\'b7\'c1\'b8\'e9 :\par
\par
1. Configure the transfer parameters in the logical DMA channel registers:\par
1. \'b3\'ed\'b8\'ae\'c0\'fb DMA \'c3\'a4\'b3\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c0\'fc\'bc\'db \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA4_CSDPi:\par
\par
\endash  Transfer ES (8, 16, or 32 bits) in the DMA DMA4_CSDPi[1:0] bit field.\par
- DMA DMA4_CSDPi [1 : 0] \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1\'bc\'ad ES (8, 16 \'b6\'c7\'b4\'c2 32 \'ba\'f1\'c6\'ae)\'b8\'a6 \'c0\'fc\'bc\'db\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\endash  Read and write port access types (single/burst), DMA DMA4_CSDPi[8:7] and DMA4_CSDPi[15:14] bit fields\par
- \'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba \'c0\'af\'c7\'fc (\'b4\'dc\'c0\'cf / \'b9\'f6\'bd\'ba\'c6\'ae), DMA DMA4_CSDPi [8 : 7] \'b9\'d7 DMA4_CSDPi [15:14] \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5 \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2\par
\par
\endash  Source and destination endianism, DMA DMA4_CSDPi[21] and DMA4_CSDPi[19] bits\par
- \'bc\'d2\'bd\'ba \'b9\'d7 \'b8\'f1\'c0\'fb\'c1\'f6 \'bf\'a3\'b5\'f0\'be\'c8, DMA DMA4_CSDPi [21] \'b9\'d7 DMA4_CSDPi [19] \'ba\'f1\'c6\'ae\par
\par
\endash  Write mode (posted or nonposted) and DMA DMA4_CSDPi[17:16] bit field\par
- \'be\'b2\'b1\'e2 \'b8\'f0\'b5\'e5 (\'b0\'d4\'bd\'c3 \'b6\'c7\'b4\'c2 \'ba\'f1 \'b0\'d4\'bd\'c3) \'b9\'d7 DMA DMA4_CSDPi [17:16] \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\par
\par
\endash  Source or destination packed or nonpacked (if the ES is less than the read/write port size), DMA DMA4_CSDPi[6] and DMA4_CSDPi[13] bits\par
- Packed \'b6\'c7\'b4\'c2 Nonpacked (ES\'b0\'a1 \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'c5\'a9\'b1\'e2\'ba\'b8\'b4\'d9 \'c0\'db\'c0\'ba \'b0\'e6\'bf\'ec), DMA DMA4_CSDPi [6] \'b9\'d7 DMA4_CSDPi [13] \'ba\'f1\'c6\'ae\par
\par
\bullet  DMA4_CENi: EN\par
\par
\bullet  DMA4_CFNi: FN per transfer block\par
\par
\bullet  DMA4_CSSAi and DMA4_CDSAi: Source and destination start address (aligned with transfer ES)\par
\bullet  DMA4_CSSAi \'b9\'d7 DMA4_CDSAi : \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2 (\'c0\'fc\'bc\'db ES\'bf\'cd \'c1\'a4\'b7\'c4 \'b5\'ca)\par
\par
\bullet  DMA4_CCRi:\par
\endash  Read and write port addressing modes, DMA DMA4_CCRi[13:12] and DMA4_CCRi[15:14] bit field\par
- \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5, DMA DMA4_CCRi [13:12] \'b9\'d7 DMA4_CCRi [15:14] \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\par
\par
\endash  Priority bit for both read and write ports, DMA DMA4_CCRi[6] and DMA4_CCRi[26] bits\par
- \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'b8\'f0\'b5\'ce\'bf\'a1 \'b4\'eb\'c7\'d1 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'ba\'f1\'c6\'ae, DMA DMA4_CCRi [6] \'b9\'d7 DMA4_CCRi [26] \'ba\'f1\'c6\'ae\par
\par
\endash  DMA request number (set to 0 for a software-triggered transfer) and DMA register bit fields DMA4_CCRi[4:0] = 0 and DMA4_CCRi[20:19] = 0\par
- DMA \'bf\'e4\'c3\'bb \'b9\'f8\'c8\'a3 (\'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4) \'b9\'d7 DMA \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5 DMA4_CCRi [4 : 0] = 0 \'b9\'d7 DMA4_CCRi [20:19] = 0\par
\par
\bullet  DMA4_CSEIi, DMA4_CSFIi, DMA4_CDEIi, and DMA4_CDFIi: Source and destination element and frame indexes (depending on addressing mode)\par
\bullet  DMA4_CSEIi, DMA4_CSFIi, DMA4_CDEIi \'b9\'d7 DMA4_CDFIi : \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3 \'bf\'e4\'bc\'d2 \'b9\'d7 \'c7\'c1\'b7\'b9\'c0\'d3 \'c0\'ce\'b5\'a6\'bd\'ba (\'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5\'bf\'a1 \'b5\'fb\'b6\'f3 \'b4\'d9\'b8\'a7)\par
\par
2. Start the transfer through the enable bit in the channel DMA4_CCRi register and DMA DMA4_CCRi[7] bit The following example performs a DMA transfer on channel 10 of a 240*160 picture from RAM to RAM(0x80C00000 to 0x80F00000):\par
2. \'c3\'a4\'b3\'ce DMA4_CCRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'b9\'d7 DMA DMA4_CCRi [7] \'ba\'f1\'c6\'ae\'c0\'c7 \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed \'ba\'f1\'c6\'ae\'b8\'a6 \'c5\'eb\'c7\'d8 \'c0\'fc\'bc\'db \'bd\'c3\'c0\'db \'b4\'d9\'c0\'bd \'bf\'b9\'bf\'a1\'bc\'ad\'b4\'c2 RAM\'bf\'a1\'bc\'ad RAM (0x80C00000 ~ 0x80F00000)\'b1\'ee\'c1\'f6\'c0\'c7 240 * 160 \'b1\'d7\'b8\'b2\'c0\'c7 \'c3\'a4\'b3\'ce 10\'bf\'a1\'bc\'ad DMA \'c0\'fc\'bc\'db\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.1.5.3 Hardware-Synchronized Transfer\par
16.1.5.3 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\par
\par
To monitor a hardware synchronized DMA transfer, initialize the DMA4_CDACi register before the software enable.\par
\'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad DMA \'c0\'fc\'bc\'db\'c0\'bb \'b8\'f0\'b4\'cf\'c5\'cd\'c7\'cf\'b7\'c1\'b8\'e9 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'c8\'b0\'bc\'ba\'c8\'ad \'c0\'fc\'bf\'a1 DMA4_CDACi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c3\'ca\'b1\'e2\'c8\'ad\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
To configure an LCh to synchronize by element, packet, frame, or block, the frame synchronization DMA4_CCRi[5] FS bit and the block synchronization DMA4_CCRi[18] BS bit must be programmed.\par
\'bf\'e4\'bc\'d2, \'c6\'d0\'c5\'b6, \'c7\'c1\'b7\'b9\'c0\'d3 \'b6\'c7\'b4\'c2 \'ba\'ed\'b7\'cf\'ba\'b0\'b7\'ce \'b5\'bf\'b1\'e2\'c8\'ad\'b5\'c7\'b5\'b5\'b7\'cf LCh\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'cf\'b7\'c1\'b8\'e9 \'c7\'c1\'b7\'b9\'c0\'d3 \'b5\'bf\'b1\'e2\'c8\'ad DMA4_CCRi [5] FS \'ba\'f1\'c6\'ae\'bf\'cd \'ba\'ed\'b7\'cf \'b5\'bf\'b1\'e2\'c8\'ad DMA4_CCRi [18] BS \'ba\'f1\'c6\'ae\'b8\'a6 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
For all the following synchronized transfers (element, packet, and frame or block-synchronized transfers), the user must first set the DMA4_CCRi[24] SEL_SRC_DST_SYNC bit to 1 when the source triggers on the DMA request and set it the DMA4_CCRi[24] SEL_SRC_DST_SYNC bit to 0 when the destination triggers on the DMA request.\par
\'b4\'d9\'c0\'bd\'c0\'c7 \'b8\'f0\'b5\'e7 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db (\'bf\'e4\'bc\'d2, \'c6\'d0\'c5\'b6, \'c7\'c1\'b7\'b9\'c0\'d3 \'b6\'c7\'b4\'c2 \'ba\'ed\'b7\'cf \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db)\'bf\'a1 \'b4\'eb\'c7\'d8, \'bb\'e7\'bf\'eb\'c0\'da\'b4\'c2 DMA \'bf\'e4\'c3\'bb\'bf\'a1\'bc\'ad \'c6\'ae\'b8\'ae\'b0\'c5 \'c7\'d2 \'b6\'a7 DMA4_CCRi [24] SEL_SRC_DST_SYNC \'ba\'f1\'c6\'ae\'b8\'a6 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'b0\'ed DMA4_CCRi [24] \'b4\'eb\'bb\'f3\'c0\'cc DMA \'bf\'e4\'c3\'bb\'bf\'a1\'bc\'ad \'c6\'ae\'b8\'ae\'b0\'c5 \'c7\'d2 \'b6\'a7 SEL_SRC_DST_SYNC \'ba\'f1\'c6\'ae\'b8\'a6 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
NOTE: The user must take care when setting the DMA4_CCRi[23] PREFETCH bit it is in conjunction with DMA4_CCRi[24] SEL_SRC_DST_SYNC bit.\par
\'c2\'fc\'b0\'ed : \'bb\'e7\'bf\'eb\'c0\'da\'b4\'c2 DMA4_CCRi [23] PREFETCH \'ba\'f1\'c6\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'d2 \'b6\'a7 DMA4_CCRi [24] SEL_SRC_DST_SYNC \'ba\'f1\'c6\'ae\'bf\'cd \'c7\'d4\'b2\'b2\'c1\'d6\'c0\'c7\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  To configure an LCh to transfer one element per DMA request:\par
\bullet  DMA \'bf\'e4\'c3\'bb \'b4\'e7 \'c7\'cf\'b3\'aa\'c0\'c7 \'bf\'e4\'bc\'d2\'b8\'a6 \'c0\'fc\'bc\'db\'c7\'cf\'b5\'b5\'b7\'cf LCh\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'cf\'b7\'c1\'b8\'e9 :\par
\par
1. Set the number of DMA request associated with the current LCH in the DMA4_CCRi[20:19] SYNCHRO_CONTROL_UPPER and DMA4_CCRi[4:0] SYNCHRO bit field.\par
1. DMA4_CCRi [20:19] SYNCHRO_CONTROL_UPPER \'b9\'d7 DMA4_CCRi [4 : 0] SYNCHRO \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c7\'f6\'c0\'e7 LCH\'bf\'cd \'b0\'fc\'b7\'c3\'b5\'c8 DMA \'bf\'e4\'c3\'bb \'bc\'f6\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
2. Set the data type, also referenced as element size (ES), in the DMA4_CSDPi[1:0] DATA_TYPE bit field.\par
2. DMA4_CSDPi [1 : 0] DATA_TYPE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'bf\'e4\'bc\'d2 \'c5\'a9\'b1\'e2 (ES)\'b7\'ce\'b5\'b5 \'c2\'fc\'c1\'b6\'b5\'c7\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'af\'c7\'fc\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
3. Set the Read Port access type (single or burst access) in the DMA4_CSDPi[8:7] SRC_BURST_EN bit field.\par
3. DMA4_CSDPi [8 : 7] SRC_BURST_EN \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba \'c0\'af\'c7\'fc (\'b4\'dc\'c0\'cf \'b6\'c7\'b4\'c2 \'b9\'f6\'bd\'ba\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba)\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
4. Set the Write Port access type (single or burst access) in the DMA4_CSDPi[15:14] DST_BURST_EN bit field.\par
4. DMA4_CSDPi [15:14] DST_BURST_EN \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba \'c0\'af\'c7\'fc (\'b4\'dc\'c0\'cf \'b6\'c7\'b4\'c2 \'b9\'f6\'bd\'ba\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba)\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
5. Set the Read Port addressing mode in the DMA4_CCRi[13:12] SRC_AMODE bit field.\par
5. DMA4_CCRi [13:12] SRC_AMODE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
6. Set the Write Port addressing mode in the DMA4_CCRi[15:14] DST_AMODE bit field.\par
6. DMA4_CCRi [15:14] DST_AMODE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
7. Set the Read start address in the DMA4_CSSAi[31:0] SRC_START_ADRS bit field.\par
7. DMA4_CSSAi [31 : 0] SRC_START_ADRS \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c0\'d0\'b1\'e2 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
8. Set the Write start address in the DMA4_CDSAi[31:0] DST_START_ADRS bit field.\par
8. DMA4_CDSAi [31 : 0] DST_START_ADRS \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'be\'b2\'b1\'e2 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
9. Set both FS and BS to 0 in DMA4_CCRi[5] FS and DMA4_CCRi[18] BS.\par
9. DMA4_CCRi [5] FS \'b9\'d7 DMA4_CCRi [18] BS\'bf\'a1\'bc\'ad FS\'bf\'cd BS\'b8\'a6 \'b8\'f0\'b5\'ce 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
10. Set to 1 the channel enable bit DMA4_CCRi[7] EN.\par
10. \'c3\'a4\'b3\'ce \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed \'ba\'f1\'c6\'ae DMA4_CCRi [7] EN\'c0\'bb 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
\bullet  To configure an LCh to transfer one frame per DMA request:\par
\bullet  DMA \'bf\'e4\'c3\'bb \'b4\'e7 \'c7\'cf\'b3\'aa\'c0\'c7 \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'bb \'c0\'fc\'bc\'db\'c7\'cf\'b5\'b5\'b7\'cf LCh\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'cf\'b7\'c1\'b8\'e9 :\par
\par
1. Set the number of DMA request associated to the current LCH in the DMA4_CCRi[20:19] SYNCHRO_CONTROL_UPPER and DMA4_CCRi[4:0] SYNCHRO bit field.\par
1. DMA4_CCRi [20:19] SYNCHRO_CONTROL_UPPER \'b9\'d7 DMA4_CCRi [4 : 0] SYNCHRO \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c7\'f6\'c0\'e7 LCH\'bf\'cd \'b0\'fc\'b7\'c3\'b5\'c8 DMA \'bf\'e4\'c3\'bb \'bc\'f6\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
2. Set the data type, also referenced as element size (ES), in the DMA4_CSDPi[1:0] DATA_TYPE bit field.\par
2. DMA4_CSDPi [1 : 0] DATA_TYPE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'bf\'e4\'bc\'d2 \'c5\'a9\'b1\'e2 (ES)\'b7\'ce\'b5\'b5 \'c2\'fc\'c1\'b6\'b5\'c7\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'af\'c7\'fc\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
3. Set the number of element per frame in the DMA4_CENi[23:0] CHANNEL_ELMNT_NBR bit field.\par
3. DMA4_CENi [23 : 0] CHANNEL_ELMNT_NBR \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c7\'c1\'b7\'b9\'c0\'d3 \'b4\'e7 \'bf\'e4\'bc\'d2 \'bc\'f6\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
4. Set the Read Port access type (single or burst access) in the DMA4_CSDPi[8:7] SRC_BURST_EN bit field.\par
4. DMA4_CSDPi [8 : 7] SRC_BURST_EN \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba \'c0\'af\'c7\'fc (\'b4\'dc\'c0\'cf \'b6\'c7\'b4\'c2 \'b9\'f6\'bd\'ba\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba)\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
5. Set the Write Port access type (single or burst access) in the DMA4_CSDPi[15:14] DST_BURST_EN bit field.\par
5. DMA4_CSDPi [15:14] DST_BURST_EN \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba \'c0\'af\'c7\'fc (\'b4\'dc\'c0\'cf \'b6\'c7\'b4\'c2 \'b9\'f6\'bd\'ba\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba)\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
6. Set the Read Port addressing mode in the DMA4_CCRi[13:12] SRC_AMODE bit field.\par
6. DMA4_CCRi [13:12] SRC_AMODE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
7. Set the Write Port addressing mode in the DMA4_CCRi[15:14] DST_AMODE bit field.\par
7. DMA4_CCRi [15:14] DST_AMODE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
8. Set the Read start address in the DMA4_CSSAi[31:0] SRC_START_ADRS bit field.\par
8. DMA4_CSSAi [31 : 0] SRC_START_ADRS \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c0\'d0\'b1\'e2 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
9. Set the Write start address in the DMA4_CDSAi[31:0] DST_START_ADRS bit field.\par
9. DMA4_CDSAi [31 : 0] DST_START_ADRS \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'be\'b2\'b1\'e2 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
10. Set FS to 1 and BS to 0, respectively, in DMA4_CCRi[5] FS and DMA4_CCRi[18] BS.\par
10. DMA4_CCRi [5] FS \'b9\'d7 DMA4_CCRi [18] BS\'bf\'a1\'bc\'ad \'b0\'a2\'b0\'a2 FS\'b8\'a6 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'b0\'ed BS\'b8\'a6 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
11. Set to 1 the channel enable bit DMA4_CCRi[7] EN.\par
11. \'c3\'a4\'b3\'ce \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed \'ba\'f1\'c6\'ae DMA4_CCRi [7] EN\'c0\'bb 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
\bullet  To configure an LCh to transfer one block per DMA request:\par
\bullet  DMA \'bf\'e4\'c3\'bb \'b4\'e7 \'c7\'cf\'b3\'aa\'c0\'c7 \'ba\'ed\'b7\'cf\'c0\'bb \'c0\'fc\'bc\'db\'c7\'cf\'b5\'b5\'b7\'cf LCh\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'cf\'b7\'c1\'b8\'e9 :\par
\par
1. Set the number of DMA request associated to the current LCH in the DMA4_CCRi[20:19] SYNCHRO_CONTROL_UPPER and DMA4_CCRi[4:0] SYNCHRO bit field.\par
1. DMA4_CCRi [20:19] SYNCHRO_CONTROL_UPPER \'b9\'d7 DMA4_CCRi [4 : 0] SYNCHRO \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c7\'f6\'c0\'e7 LCH\'bf\'cd \'b0\'fc\'b7\'c3\'b5\'c8 DMA \'bf\'e4\'c3\'bb \'bc\'f6\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
2. Set the data type, also referenced as element size (ES), in the DMA4_CSDPi[1:0] DATA_TYPE bit field.\par
2. DMA4_CSDPi [1 : 0] DATA_TYPE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'bf\'e4\'bc\'d2 \'c5\'a9\'b1\'e2 (ES)\'b7\'ce\'b5\'b5 \'c2\'fc\'c1\'b6\'b5\'c7\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'af\'c7\'fc\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
3. Set the number of element per frame in the DMA4_CENi[23:0] CHANNEL_ELMNT_NBR bit field.\par
3. DMA4_CENi [23 : 0] CHANNEL_ELMNT_NBR \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c7\'c1\'b7\'b9\'c0\'d3 \'b4\'e7 \'bf\'e4\'bc\'d2 \'bc\'f6\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
4. Set in the DMA4_CFNi[15:0] CHANNEL_FRAME_NBR bit field the number of frame (transfers), to take place before the LCH gets disabled.\par
4. LCH\'b0\'a1 \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b1\'e2 \'c0\'fc\'bf\'a1 DMA4_CFNi [15 : 0] CHANNEL_FRAME_NBR \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c7\'c1\'b7\'b9\'c0\'d3 (\'c0\'fc\'bc\'db) \'bc\'f6\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
5. Set the Read Port access type (single or burst access) in the DMA4_CSDPi[8:7] SRC_BURST_EN bit field.\par
5. DMA4_CSDPi [8 : 7] SRC_BURST_EN \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba \'c0\'af\'c7\'fc (\'b4\'dc\'c0\'cf \'b6\'c7\'b4\'c2 \'b9\'f6\'bd\'ba\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba)\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
6. Set the Write Port access type (single or burst access) in the DMA4_CSDPi[15:14] DST_BURST_EN bit field.\par
6. DMA4_CSDPi [15:14] \'c7\'ca\'b5\'e5\'bf\'a1 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba \'c0\'af\'c7\'fc (\'b4\'dc\'c0\'cf \'b6\'c7\'b4\'c2 \'b9\'f6\'bd\'ba\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba) DST_BURST_EN \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5.\par
\par
7. Set the Read Port addressing mode in the DMA4_CCRi[13:12] SRC_AMODE bit field.\par
7. DMA4_CCRi [13:12] SRC_AMODE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
8. Set the Write Port addressing mode in the DMA4_CCRi[15:14] DST_AMODE bit field.\par
8. DMA4_CCRi [15:14] DST_AMODE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
9. Set the Read start address in the DMA4_CSSAi[31:0] SRC_START_ADRS bit field.\par
9. DMA4_CSSAi [31 : 0] SRC_START_ADRS \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c0\'d0\'b1\'e2 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
10. Set the Write start address in the DMA4_CDSAi[31:0] DST_START_ADRS bit field.\par
10. DMA4_CDSAi [31 : 0] DST_START_ADRS \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'be\'b2\'b1\'e2 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
11. Set FS to 0 and BS to 1, respectively, in DMA4_CCRi[5] FS and DMA4_CCRi[18] BS.\par
11. DMA4_CCRi [5] FS \'b9\'d7 DMA4_CCRi [18] BS\'bf\'a1\'bc\'ad \'b0\'a2\'b0\'a2 FS\'b8\'a6 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'b0\'ed BS\'b8\'a6 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
12. Set to 1 the channel enable bit DMA4_CCRi[7] EN.\par
12. \'c3\'a4\'b3\'ce \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed \'ba\'f1\'c6\'ae DMA4_CCRi [7] EN\'c0\'bb 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
\bullet  To configure an LCh to transfer one packet per DMA request:\par
\bullet  DMA \'bf\'e4\'c3\'bb \'b4\'e7 \'c7\'cf\'b3\'aa\'c0\'c7 \'c6\'d0\'c5\'b6\'c0\'bb \'c0\'fc\'bc\'db\'c7\'cf\'b5\'b5\'b7\'cf LCh\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'cf\'b7\'c1\'b8\'e9 \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'cc\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
1. Set the number of DMA request associated to the current LCH in the DMA4_CCRi[20:19] SYNCHRO_CONTROL_UPPER and DMA4_CCRi[4:0] SYNCHRO bit field.\par
1. DMA4_CCRi [20:19] SYNCHRO_CONTROL_UPPER \'b9\'d7 DMA4_CCRi [4 : 0] SYNCHRO \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c7\'f6\'c0\'e7 LCH\'bf\'cd \'b0\'fc\'b7\'c3\'b5\'c8 DMA \'bf\'e4\'c3\'bb \'bc\'f6\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
2. Set the data type, also referenced as element size (ES), in the DMA4_CSDPi[1:0] DATA_TYPE bit field.\par
2. DMA4_CSDPi [1 : 0] DATA_TYPE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'bf\'e4\'bc\'d2 \'c5\'a9\'b1\'e2 (ES)\'b7\'ce\'b5\'b5 \'c2\'fc\'c1\'b6\'b5\'c7\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'af\'c7\'fc\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
3. Set the number of elements per packet to transfer: If the packet requestor is in the source, set DMA4_CCRi [24] SEL_SRC_DST_SYNC to 1 and set the packet element number in the DMA4_CSFIi register and set the addressing mode of source to constant addressing in DMA4_CCRi [13:12] SRC_AMODE bit field; else, if the packet requestor is in the destination, set the DMA4_CCRi[24] SEL_SRC_DST_SYNC to 0 and set the packet element number in the DMA4_CDFIi register and set the addressing mode of destination to constant addressing in DMA4_CCRi[15:14] DST_AMODE bit field.\par
\'c0\'fc\'bc\'db\'c7\'d2 \'c6\'d0\'c5\'b6 \'b4\'e7 \'bf\'e4\'bc\'d2 \'bc\'f6\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0 : \'c6\'d0\'c5\'b6 \'bf\'e4\'c3\'bb\'c0\'da\'b0\'a1 \'bc\'d2\'bd\'ba\'bf\'a1 \'c0\'d6\'b4\'d9\'b8\'e9 DMA4_CCRi [24] SEL_SRC_DST_SYNC\'b8\'a6 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'b0\'ed DMA4_CSFIi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c6\'d0\'c5\'b6 \'bf\'e4\'bc\'d2 \'b9\'f8\'c8\'a3\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'b0\'ed source\'c0\'c7 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5\'b8\'a6 DMA4_CCRi [13:12] SRC_AMODE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
4. Set the number of elements per frame in the DMA4_CENi[23:0] CHANNEL_ELMNT_NBR bit field.\par
4. DMA4_CENi [23 : 0] CHANNEL_ELMNT_NBR \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c7\'c1\'b7\'b9\'c0\'d3 \'b4\'e7 \'bf\'e4\'bc\'d2 \'bc\'f6\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
5. Set in the DMA4_CFNi[15:0] CHANNEL_FRAME_NBR bit field the number of frames (transfers), to  take place before the LCH gets disabled.\par
 5. DMA4_CFNi [15 : 0] CHANNEL_FRAME_NBR \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c7\'c1\'b7\'b9\'c0\'d3 \'bc\'f6 (\'c0\'fc\'bc\'db)\'b8\'a6 LCH\'b0\'a1 \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b1\'e2 \'c0\'fc\'bf\'a1 \'bc\'f6\'c7\'e0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
6. Set the element number in the packet in the DMA4_CSFIi[15:0] PKT_ELNT_NBR, if constant addressing or post-incremented addressing modes are used in the source side.\par
6. \'bb\'f3\'bc\'f6 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b6\'c7\'b4\'c2 \'bb\'e7\'c8\'c4 \'c1\'f5\'b0\'a1 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5\'b0\'a1 \'bc\'d2\'bd\'ba \'c3\'f8\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 \'b0\'e6\'bf\'ec DMA4_CSFIi [15 : 0] PKT_ELNT_NBR\'c0\'c7 \'c6\'d0\'c5\'b6\'bf\'a1 \'bf\'e4\'bc\'d2 \'b9\'f8\'c8\'a3\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
However, the number of element in the packet is set in the DMA4_CDFIi[15:0] PKT_ELNT_NBR if constant addressing mode is used in the destination side.\par
\'b1\'d7\'b7\'af\'b3\'aa, \'b8\'f1\'c0\'fb\'c1\'f6 \'c3\'f8\'bf\'a1\'bc\'ad \'bb\'f3\'bc\'f6 \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5\'b0\'a1 \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 \'b0\'e6\'bf\'ec, DMA4_CDFIi [15 : 0] PKT_ELNT_NBR\'bf\'a1 \'c6\'d0\'c5\'b6\'c0\'c7 \'bf\'e4\'bc\'d2 \'bc\'f6\'b0\'a1 \'bc\'b3\'c1\'a4\'b5\'c8\'b4\'d9.\par
\par
7. Set the Read Port access type (single or burst access) in the DMA4_CSDPi[8:7] SRC_BURST_EN bit field.\par
7. DMA4_CSDPi [8 : 7] SRC_BURST_EN \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba \'c0\'af\'c7\'fc (\'b4\'dc\'c0\'cf \'b6\'c7\'b4\'c2 \'b9\'f6\'bd\'ba\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba)\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
8. Set the Write Port access type (single or burst access) in the DMA4_CSDPi[15:14]\par
DST_BURST_EN bit field.\par
8. DMA4_CSDPi [15:14] DST_BURST_EN \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba \'c0\'af\'c7\'fc (\'b4\'dc\'c0\'cf \'b6\'c7\'b4\'c2 \'b9\'f6\'bd\'ba\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba)\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
9. Set the Read Port addressing mode in the DMA4_CCRi[13:12] SRC_AMODE bit field.\par
9. DMA4_CCRi [13:12] SRC_AMODE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1\'bc\'ad \'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
10. Set the Write Port addressing mode in the DMA4_CCRi[15:14] DST_AMODE bit field.\par
10. DMA4_CCRi [15:14] DST_AMODE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
11. Set the Read start address in the DMA4_CSSAi[31:0] SRC_START_ADRS bit field.\par
11. DMA4_CSSAi [31 : 0] SRC_START_ADRS \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c0\'d0\'b1\'e2 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
12. Set the Write start address in the DMA4_CDSAi[31:0] DST_START_ADRS bit field.\par
12. DMA4_CDSAi [31 : 0] DST_START_ADRS \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'be\'b2\'b1\'e2 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
13. Set FS to 1 and BS to 1, respectively, in DMA4_CCRi[5] FS and DMA4_CCRi[18] BS.\par
13. DMA4_CCRi [5] FS \'b9\'d7 DMA4_CCRi [18] BS\'bf\'a1\'bc\'ad \'b0\'a2\'b0\'a2 FS\'b8\'a6 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'b0\'ed BS\'b8\'a6 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
14. Set to 1 the channel enable bit DMA4_CCRi[7] EN.\par
14. \'c3\'a4\'b3\'ce \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed \'ba\'f1\'c6\'ae DMA4_CCRi [7] EN\'c0\'bb 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
NOTE: It is possible to stop a transfer by disabling the channel by resetting the DMA4_CCRi[7] ENABLE bit.\par
\'c2\'fc\'b0\'ed : DMA4_CCRi [7] ENABLE \'ba\'f1\'c6\'ae\'b8\'a6 \'c0\'e7\'bc\'b3\'c1\'a4\'c7\'cf\'bf\'a9 \'c3\'a4\'b3\'ce\'c0\'bb \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad\'c7\'cf\'bf\'a9 \'c0\'fc\'bc\'db\'c0\'bb \'c1\'df\'c1\'f6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.1.5.4 Synchronized Transfer Monitoring Using CDAC\par
16.1.5.4 CDAC\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d1 \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'c0\'fc\'bc\'db \'b8\'f0\'b4\'cf\'c5\'cd\'b8\'b5\par
\par
The DMA4_CDACi register is writable and non-initialized (value undefined). It can be initialized to monitor a transfer by applying the following programming model:\par
DMA4_CDACi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'be\'b2\'b1\'e2 \'b0\'a1\'b4\'c9\'c7\'cf\'b0\'ed \'c3\'ca\'b1\'e2\'c8\'ad\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9 (\'b0\'aa\'c0\'ba \'c1\'a4\'c0\'c7\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'bd). \'b4\'d9\'c0\'bd \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b8\'f0\'b5\'a8\'c0\'bb \'c0\'fb\'bf\'eb\'c7\'cf\'bf\'a9 \'c0\'fc\'bc\'db\'c0\'bb \'b8\'f0\'b4\'cf\'c5\'cd\'b8\'b5\'c7\'cf\'b5\'b5\'b7\'cf \'c3\'ca\'b1\'e2\'c8\'ad \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
1. Write 0 in the DMA4_CDACi register.\par
1. DMA4_CDACi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 0\'c0\'bb \'b1\'e2\'b7\'cf\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
2. Enable the channel.\par
2. \'c3\'a4\'b3\'ce\'c0\'bb \'c8\'b0\'bc\'ba\'c8\'ad\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
3. If a time-out occurs, read DMA4_CDACi register.\par
3. \'c5\'b8\'c0\'d3 \'be\'c6\'bf\'f4\'c0\'cc \'b9\'df\'bb\'fd\'c7\'cf\'b8\'e9 DMA4_CDACi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c0\'d0\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
4. If DMA4_CDACi != 0 (it is the value configured in DMA4_CDACi):\par
4. DMA4_CDACi! = 0 (DMA4_CDACi\'bf\'a1 \'b1\'b8\'bc\'ba\'b5\'c8 \'b0\'aa) :\par
\par
This indicates that the corresponding transfer has started. The user can then rely on DMA4_CCENi and DMA4_CCFNi element and frame counters.\par
\'c0\'cc\'b0\'cd\'c0\'ba \'c7\'d8\'b4\'e7 \'c0\'fc\'bc\'db\'c0\'cc \'bd\'c3\'c0\'db\'b5\'c7\'be\'fa\'c0\'bd\'c0\'bb \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9. \'b1\'d7\'b7\'b1 \'b4\'d9\'c0\'bd \'bb\'e7\'bf\'eb\'c0\'da\'b4\'c2 DMA4_CCENi \'b9\'d7 DMA4_CCFNi \'bf\'e4\'bc\'d2 \'b9\'d7 \'c7\'c1\'b7\'b9\'c0\'d3 \'c4\'ab\'bf\'ee\'c5\'cd\'bf\'a1 \'c0\'c7\'c1\'b8 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Otherwise, if DMA4_CDACi = 0 (it is the value configured in the DMA4_CDACi):\par
This indicates that the corresponding transfer did not start.\par
\'b1\'d7\'b7\'b8\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 DMA4_CDACi = 0 \'c0\'ce \'b0\'e6\'bf\'ec (DMA4_CDACi\'bf\'a1 \'b1\'b8\'bc\'ba\'b5\'c8 \'b0\'aa) :\par
\'c0\'cc\'b0\'cd\'c0\'ba \'c7\'d8\'b4\'e7 \'c0\'fc\'bc\'db\'c0\'cc \'bd\'c3\'c0\'db\'b5\'c7\'c1\'f6 \'be\'ca\'be\'d2 \'c0\'bd\'c0\'bb \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
16.1.5.5 Concurrent Software and Hardware Synchronization\par
16.1.5.5 \'b5\'bf\'bd\'c3 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'b9\'d7 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad\par
\par
This section describes thread allocation only; it does not describe the entire transfer.\par
\'c0\'cc \'c0\'fd\'bf\'a1\'bc\'ad\'b4\'c2 \'bd\'ba\'b7\'b9\'b5\'e5 \'c7\'d2\'b4\'e7 \'b8\'b8 \'bc\'b3\'b8\'ed\'c7\'d5\'b4\'cf\'b4\'d9. \'c0\'fc\'c3\'bc \'c0\'fc\'bc\'db\'c0\'bb \'bc\'b3\'b8\'ed\'c7\'cf\'c1\'f6\'b4\'c2 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Because synchronized transfers are latency critical, you must allocate a thread at least on the synchronized target side.\par
\'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'c0\'fc\'bc\'db\'c0\'ba \'b4\'eb\'b1\'e2 \'bd\'c3\'b0\'a3\'c0\'cc \'c1\'df\'bf\'e4\'c7\'cf\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'c0\'fb\'be\'ee\'b5\'b5 \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'b4\'eb\'bb\'f3 \'c3\'f8\'bf\'a1 \'bd\'ba\'b7\'b9\'b5\'e5\'b8\'a6 \'c7\'d2\'b4\'e7\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Even for multiple concurrent channels, thread reservation ensures that when a hardware DMA request arrives, the read/write scheduler finds available thread(s) to initiate a channel schedule and issue a read/write transaction.\par
\'b4\'d9\'c1\'df \'b5\'bf\'bd\'c3 \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d8\'bc\'ad\'b5\'b5 \'bd\'ba\'b7\'b9\'b5\'e5 \'bf\'b9\'be\'e0\'c0\'bb \'c5\'eb\'c7\'d8 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee DMA \'bf\'e4\'c3\'bb\'c0\'cc \'b5\'b5\'c2\'f8\'c7\'cf\'b8\'e9 \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'bd\'ba\'c4\'c9\'c1\'d9\'b7\'af\'b0\'a1 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'d1 \'bd\'ba\'b7\'b9\'b5\'e5\'b8\'a6 \'c3\'a3\'be\'c6 \'c3\'a4\'b3\'ce \'bd\'ba\'c4\'c9\'c1\'d9\'c0\'bb \'bd\'c3\'c0\'db\'c7\'cf\'b0\'ed \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'bb \'b9\'df\'c7\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Consider six concurrent channels:\par
6 \'b0\'b3\'c0\'c7 \'b5\'bf\'bd\'c3 \'c3\'a4\'b3\'ce\'c0\'bb \'b0\'ed\'b7\'c1\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
\bullet  Channels 0, 1, 2, and 3 are dedicated to memory-memory transfer; they are software triggered and not synchronized.\par
\bullet  \'c3\'a4\'b3\'ce 0, 1, 2 \'b9\'d7 3\'c0\'ba \'b8\'de\'b8\'f0\'b8\'ae \'b8\'de\'b8\'f0\'b8\'ae \'c0\'fc\'bc\'db \'c0\'fc\'bf\'eb\'c0\'cc\'b8\'e7, \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'b0\'a1 \'c6\'ae\'b8\'ae\'b0\'c5\'b5\'c7\'b0\'ed \'b5\'bf\'b1\'e2\'c8\'ad\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  Channel 4 is dedicated to memory-peripheral transfer, hardware triggered, and synchronized on the write side.\par
\bullet  \'c3\'a4\'b3\'ce 4\'b4\'c2 \'b8\'de\'b8\'f0\'b8\'ae \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1 \'c0\'fc\'bc\'db, \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'c6\'ae\'b8\'ae\'b0\'c5 \'b9\'d7 \'be\'b2\'b1\'e2 \'c3\'f8\'c0\'c7 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bf\'eb\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
\bullet  Channel 5 is dedicated to peripheral-memory transfer, hardware triggered, and synchronized on the read side.\par
\bullet  \'c3\'a4\'b3\'ce 5\'b4\'c2 \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1 \'b8\'de\'b8\'f0\'b8\'ae \'c0\'fc\'bc\'db, \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'c6\'ae\'b8\'ae\'b0\'c5 \'b9\'d7 \'c0\'d0\'b1\'e2 \'c3\'f8\'c0\'c7 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bf\'eb\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
To perform thread reservation:\par
\'bd\'ba\'b7\'b9\'b5\'e5 \'bf\'b9\'be\'e0\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'cf\'b7\'c1\'b8\'e9 \'b4\'d9\'c0\'bd\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
1. Allow thread reservation for priority channel 4 and channel 5:\par
1. \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c3\'a4\'b3\'ce 4 \'b9\'d7 \'c3\'a4\'b3\'ce 5\'bf\'a1 \'b4\'eb\'c7\'d1 \'bd\'ba\'b7\'b9\'b5\'e5 \'bf\'b9\'be\'e0 \'c7\'e3\'bf\'eb :\par
\par
Reserve one thread (Read ThreadID 0) on the read port and one thread (Write ThreadID 0) on the write port: set the DMA4_GCR[13:12] HI_THREAD_RESERVED bit field to 0x1.\par
\'c0\'d0\'b1\'e2 \'c6\'f7\'c6\'ae\'bf\'a1\'bc\'ad \'c7\'cf\'b3\'aa\'c0\'c7 \'bd\'ba\'b7\'b9\'b5\'e5 (Read ThreadID 0)\'bf\'cd \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae\'bf\'a1\'bc\'ad \'c7\'cf\'b3\'aa\'c0\'c7 \'bd\'ba\'b7\'b9\'b5\'e5 (Write ThreadID 0)\'b8\'a6 \'bf\'b9\'be\'e0\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0. DMA4_GCR [13:12] HI_THREAD_RESERVED \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b8\'a6 0x1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
2. Specify channel priority:\par
2. \'c3\'a4\'b3\'ce \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c1\'f6\'c1\'a4 :\par
\par
Channel 4 is a write high priority channel: set DMA4_CCRi[26] WRITE_PRIORITY = 1.\par
\'c3\'a4\'b3\'ce 4\'b4\'c2 \'be\'b2\'b1\'e2 \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c3\'a4\'b3\'ce\'c0\'d4\'b4\'cf\'b4\'d9 : DMA4_CCRi [26] WRITE_PRIORITY = 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
Channel 5 is a read high priority channel: set DMA4_CCRi[6] READ_PRIORITY = 1.\par
\'c3\'a4\'b3\'ce 5\'b4\'c2 \'c0\'d0\'b1\'e2 \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c3\'a4\'b3\'ce\'c0\'d4\'b4\'cf\'b4\'d9. DMA4_CCRi [6] READ_PRIORITY = 1\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.1.5.6 Chained Transfer\par
16.1.5.6 \'c3\'bc\'c0\'ce \'c0\'fc\'bc\'db\par
\par
A chained DMA transfer can be programmed as follows:\par
\'c3\'bc\'c0\'ce \'bf\'ac\'b0\'e1\'b5\'c8 DMA \'c0\'fc\'bc\'db\'c0\'ba \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'cc \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9\par
\par
1. Configure the transfer parameters for each logical DMA channel in the chain as in step 1 for either the synchronized or non-synchronized transfers described in Section 16.1.5.5, Concurrent Software and Hardware Synchronization.\par
1. 16.1.5.5 \'c0\'fd, \'b5\'bf\'bd\'c3 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'b9\'d7 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b5\'bf\'b1\'e2\'c8\'ad\'bf\'a1\'bc\'ad \'bc\'b3\'b8\'ed\'c7\'d1 \'b5\'bf\'b1\'e2\'c8\'ad \'b6\'c7\'b4\'c2 \'ba\'f1 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'bf\'a1 \'b4\'eb\'c7\'d8 1 \'b4\'dc\'b0\'e8 \'bf\'a1\'bc\'ad\'c3\'b3\'b7\'b3 \'c3\'bc\'c0\'ce\'c0\'c7 \'b0\'a2 \'b3\'ed\'b8\'ae DMA \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'fc\'bc\'db \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
2. For each channel in the chain, configure the DMA4_CLNK_CTRLi register as follows:\par
2. \'c3\'bc\'c0\'ce\'c0\'c7 \'b0\'a2 \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d8 \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'cc DMA4_CLNK_CTRLi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Next logical DMA channel number (for a looping chained transfer link last channel to first channel number), in the DMA4_CLNK_CTRLi[4:0] NEXTLCH_ID bit field.\par
\bullet  DMA4_CLNK_CTRLi [4 : 0] NEXTLCH_ID \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'c0\'c7 \'b4\'d9\'c0\'bd \'b3\'ed\'b8\'ae DMA \'c3\'a4\'b3\'ce \'b9\'f8\'c8\'a3 (\'b7\'e7\'c6\'be \'bf\'ac\'bc\'e2 \'c0\'fc\'bc\'db \'b8\'b5\'c5\'a9\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'c3\'a4\'b3\'ce\'bf\'a1\'bc\'ad \'c3\'b9 \'b9\'f8\'c2\'b0 \'c3\'a4\'b3\'ce \'b9\'f8\'c8\'a3\'b1\'ee\'c1\'f6).\par
\par
\bullet  Include the logical channel to the chain and enable link by setting the DMA4_CLNK_CTRLi[15] ENABLE_LNK bit.\par
\bullet  DMA4_CLNK_CTRLi [15] ENABLE_LNK \'ba\'f1\'c6\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'bf\'a9 \'c3\'bc\'c0\'ce\'bf\'a1 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'bb \'c6\'f7\'c7\'d4\'bd\'c3\'c5\'b0\'b0\'ed \'b8\'b5\'c5\'a9\'b8\'a6 \'c8\'b0\'bc\'ba\'c8\'ad\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
\bullet  For a non-looping chain, the last logical channel in the chain must have the DMA4_CLNK_CTRLi[15] ENABLE_LNK bit set to 0 to indicate the end of the chain.\par
\bullet  \'b7\'e7\'c7\'ce\'b5\'c7\'c1\'f6 \'be\'ca\'b4\'c2 \'c3\'bc\'c0\'ce\'c0\'c7 \'b0\'e6\'bf\'ec \'c3\'bc\'c0\'ce\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'ba \'c3\'bc\'c0\'ce\'c0\'c7 \'b3\'a1\'c0\'bb \'b3\'aa\'c5\'b8 \'b3\'bb\'b1\'e2 \'c0\'a7\'c7\'d8 DMA4_CLNK_CTRLi [15] ENABLE_LNK \'ba\'f1\'c6\'ae\'b8\'a6 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
3. Enable the transfer through the enable bit in the first logical channel DMA4_CCRi[7] ENABLE bit.\par
3. \'c3\'b9 \'b9\'f8\'c2\'b0 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce DMA4_CCRi [7] ENABLE \'ba\'f1\'c6\'ae\'c0\'c7 \'c8\'b0\'bc\'ba\'c8\'ad \'ba\'f1\'c6\'ae\'b8\'a6 \'c5\'eb\'c7\'d8 \'c0\'fc\'bc\'db\'c0\'bb \'c8\'b0\'bc\'ba\'c8\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
All other channels in the chain must be disabled.\par
\'c3\'bc\'c0\'ce\'c0\'c7 \'b4\'d9\'b8\'a5 \'b8\'f0\'b5\'e7 \'c3\'a4\'b3\'ce\'c0\'ba \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Each channel is enabled automatically in turn when the previous logical channel transfer completes.\par
\'b0\'a2 \'c3\'a4\'b3\'ce\'c0\'ba \'c0\'cc\'c0\'fc \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'b8\'e9 \'c2\'f7\'b7\'ca\'b7\'ce \'c0\'da\'b5\'bf\'c0\'b8\'b7\'ce \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
A non-synchronized transfer starts immediately;\par
\'b5\'bf\'b1\'e2\'c8\'ad\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'ba \'c0\'fc\'bc\'db\'c0\'ba \'c1\'ef\'bd\'c3 \'bd\'c3\'c0\'db\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 a hardware-synchronized transfer starts when the DMA request line corresponding to the first DMA channel in the chain is asserted.\par
  \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee - \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'c0\'fc\'bc\'db\'c0\'ba \'c3\'bc\'c0\'ce\'c0\'c7 \'c1\'a6 1 DMA \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c0\'c0\'c7\'cf\'b4\'c2 DMA \'bf\'e4\'c3\'bb \'b6\'f3\'c0\'ce\'c0\'cc \'c7\'a5\'b8\'ed \'b5\'c9 \'b6\'a7 \'bd\'c3\'c0\'db\'b5\'c8\'b4\'d9.\par
\par
To stop a looping chained transfer, disable the DMA4_CLNK_CTRLi[15] ENABLE_LNK bit (by setting it to 0x0), of the final channel transfer.\par
\'b7\'e7\'c7\'ce \'c3\'bc\'c0\'ce \'c0\'fc\'bc\'db\'c0\'bb \'c1\'df\'c1\'f6\'c7\'cf\'b7\'c1\'b8\'e9 \'c3\'d6\'c1\'be \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db\'c0\'c7 DMA4_CLNK_CTRLi [15] ENABLE_LNK \'ba\'f1\'c6\'ae (0x0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4)\'b8\'a6 \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
In the RAM-to-RAM copy example, to copy in loop, it is possible to link channel 10 on itself.\par
RAM-RAM \'ba\'b9\'bb\'e7 \'bf\'b9\'bf\'a1\'bc\'ad \'b7\'e7\'c7\'c1\'b7\'ce \'ba\'b9\'bb\'e7\'c7\'cf\'b7\'c1\'b8\'e9 \'c3\'a4\'b3\'ce 10\'c0\'bb \'c0\'da\'c3\'bc\'bf\'a1 \'bf\'ac\'b0\'e1\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The following line can be added in the channel configuration:\par
/* g) Set link for loop */\par
DMA4_CLINK_CTRL_CH10 =\par
0x0000800A;\par
\'b4\'d9\'c0\'bd \'c7\'e0\'c0\'bb \'c3\'a4\'b3\'ce \'b1\'b8\'bc\'ba\'bf\'a1 \'c3\'df\'b0\'a1 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
/ * g) \'b7\'e7\'c7\'c1\'bf\'a1 \'b4\'eb\'c7\'d1 \'b8\'b5\'c5\'a9 \'bc\'b3\'c1\'a4 * /\par
DMA4_CLINK_CTRL_CH10 =\par
0x0000800A;\par
\par
16.1.5.7 90-Degree Clockwise Image Rotation\par
16.1.5.7 90\'b5\'b5 \'bd\'c3\'b0\'e8 \'b9\'e6\'c7\'e2 \'c0\'cc\'b9\'cc\'c1\'f6 \'c8\'b8\'c0\'fc\par
\par
- \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3 packed = \'bf\'b9 (\'b4\'eb\'bb\'f3 \'be\'b2\'b1\'e2\'b0\'a1 EI1 \'b6\'a7\'b9\'ae\'bf\'a1 \'c0\'cc\'c1\'a1\'c0\'bb \'be\'f2\'c1\'f6 \'be\'ca\'c1\'f6\'b8\'b8), DMA4_CSDPi [6] SRC_PACKED \'b9\'d7 DMA4_CSDPi [13] DST_PACKED \'ba\'f1\'c6\'ae\par
The 90-degree clockwise image rotation example described in Section 16.1.4.5, Addressing Modes, can be programmed as follows:\par
\'bc\'bd\'bc\'c7 16.1.4.5, \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5\'bf\'a1\'bc\'ad \'bc\'b3\'b8\'ed \'b5\'c8 90\'b5\'b5 \'bd\'c3\'b0\'e8 \'b9\'e6\'c7\'e2 \'c0\'cc\'b9\'cc\'c1\'f6 \'c8\'b8\'c0\'fc \'bf\'b9\'c1\'a6\'b4\'c2 \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'cc \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9 :\par
\par
1. Configure the transfer parameters in the logical DMA channel registers:\par
1. \'b3\'ed\'b8\'ae\'c0\'fb DMA \'c3\'a4\'b3\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c0\'fc\'bc\'db \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA4_CSDPi:\par
\endash  Transfer ES = 32-bit (32 bpp), DMA4_CSDPi[1:0] DATA_TYPE bit field\par
\bullet  DMA4_CSDPi :\par
- \'c0\'fc\'bc\'db ES = 32 \'ba\'f1\'c6\'ae (32 bpp), DMA4_CSDPi [1 : 0] DATA_TYPE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\par
\par
\endash  Read and write port access types = maximum burst size supported by memory device, DMA4_CSDPi[8:7] SRC_BURST_EN and DMA4_CSDPi[15:14] ST_BURST_EN bit fields\par
- \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba \'c0\'af\'c7\'fc = \'b8\'de\'b8\'f0\'b8\'ae \'c0\'e5\'c4\'a1\'b0\'a1 \'c1\'f6\'bf\'f8\'c7\'cf\'b4\'c2 \'c3\'d6\'b4\'eb \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2, DMA4_CSDPi [8 : 7] SRC_BURST_EN \'b9\'d7 DMA4_CSDPi [15:14] ST_BURST_EN \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\par
\par
\endash  Source and destination endianism, DMA4_CSDPi[21] SRC_ENDIAN and DMA4_CSDPi[19] DST_ENDIAN bits\par
- \'bc\'d2\'bd\'ba \'b9\'d7 \'b8\'f1\'c0\'fb\'c1\'f6 \'bf\'a3\'b5\'f0\'be\'c8, DMA4_CSDPi [21] SRC_ENDIAN \'b9\'d7 DMA4_CSDPi [19] DST_ENDIAN \'ba\'f1\'c6\'ae\par
\par
\endash  Write mode = posted with last element nonposted, DMA4_CSDPi[17:16]\par
WRITE_MODE bit field\par
- \'be\'b2\'b1\'e2 \'b8\'f0\'b5\'e5 = \'b0\'d4\'bd\'c3\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'ba \'b8\'b6\'c1\'f6\'b8\'b7 \'bf\'e4\'bc\'d2\'b7\'ce \'b0\'d4\'bd\'c3 \'b5\'ca, DMA4_CSDPi [17:16] WRITE_MODE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\par
\par
\endash  Source and destination packed = Yes (although destination writes do not benefit because EI1), DMA4_CSDPi[6] SRC_PACKED and DMA4_CSDPi[13] DST_PACKED bits\par
- \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3 packed = \'bf\'b9 (\'b4\'eb\'bb\'f3 \'be\'b2\'b1\'e2\'b0\'a1 EI1 \'b6\'a7\'b9\'ae\'bf\'a1 \'c0\'cc\'c1\'a1\'c0\'bb \'be\'f2\'c1\'f6 \'be\'ca\'c1\'f6\'b8\'b8), DMA4_CSDPi [6] SRC_PACKED \'b9\'d7 DMA4_CSDPi [13] DST_PACKED \'ba\'f1\'c6\'ae\par
\par
\bullet  DMA4_CENi: EN = 240\par
\par
\bullet  DMA4_CFNi: FN per transfer block = 160\par
\par
\bullet  DMA4_CSSAi: Source start address = 0x100000\par
\par
\bullet  DMA4_CDSAi: destination start address = 0x20013E\par
\par
\bullet  DMA4_CCRi:\par
\par
\endash  Read and write port addressing modes = double-index addressing mode for both or postincrement addressing on source and double-index addressing on destination, DMA4_CCRi[13:12] SRC_AMODE and DMA4_CCRi[15:14] DST_AMODE bit fields\par
- \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5 = \'bc\'d2\'bd\'ba\'c0\'c7 \'b5\'ce \'b0\'b3 \'b6\'c7\'b4\'c2 \'c8\'c4\'c4\'a1 \'c1\'f5\'b0\'a1 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b9\'d7 \'b4\'eb\'bb\'f3\'c0\'c7 \'c0\'cc\'c1\'df \'bb\'f6\'c0\'ce \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4\'c0\'bb\'c0\'a7\'c7\'d1 \'c0\'cc\'c1\'df \'bb\'f6\'c0\'ce \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5, DMA4_CCRi [13:12] SRC_AMODE \'b9\'d7 DMA4_CCRi [15:14] DST_AMODE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\par
\par
\endash  Low or high priority, DMA4_CCRi[6] READ_PRIORITY bit\par
- \'b3\'b7\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'b6\'c7\'b4\'c2 \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7, DMA4_CCRi [6] READ_PRIORITY \'ba\'f1\'c6\'ae\par
\par
\endash  DMA request number = 0 (for software-triggered transfer), DMA4_CCRi[4:0] SYNCHRO_CONTROL and DMA4_CCRi[20:19] SYNCHRO_CONTROL_UPPER bit fields\par
- DMA \'bf\'e4\'c3\'bb \'b9\'f8\'c8\'a3 = 0 (\'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec), DMA4_CCRi [4 : 0] SYNCHRO_CONTROL \'b9\'d7 DMA4_CCRi [20:19] SYNCHRO_CONTROL_UPPER \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\par
\par
\bullet  DMA4_CSEIi: Source EI = 1\par
\par
\bullet  DMA4_CSFIi: Source frame index = 1\par
\par
\bullet  DMA4_CDEIi: destination EI = 637\par
\par
\bullet  DMA4_CDFIi: destination frame index = 152967\par
\par
The following parameters are used to perform this rotation from 0x80C00000 RAM address to 0x80F00000, with the same code used in Section 16.1.5.2, Software- Triggered (Nonsynchronized) Transfer:\par
\'b4\'d9\'c0\'bd \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b4\'c2\'c0\'cc \'c8\'b8\'c0\'fc\'c0\'bb 0x80C00000 RAM \'c1\'d6\'bc\'d2\'bf\'a1\'bc\'ad 0x80F00000\'b1\'ee\'c1\'f6 \'bc\'f6\'c7\'e0\'c7\'cf\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'c7\'b8\'e7 \'bc\'bd\'bc\'c7 16.1.5.2, \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'c6\'ae\'b8\'ae\'b0\'c5 (\'ba\'f1\'b5\'bf\'b1\'e2) \'c0\'fc\'bc\'db\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb \'b5\'c8 \'b0\'cd\'b0\'fa \'b5\'bf\'c0\'cf\'c7\'d1 \'c4\'da\'b5\'e5\'b0\'a1 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.1.5.8 Graphic Operations\par
16.1.5.8 \'b1\'d7\'b7\'a1\'c7\'c8 \'c0\'db\'be\'f7\par
\bullet  Transparent copy:\par
\bullet  \'c5\'f5\'b8\'ed\'c7\'d1 \'bb\'e7\'ba\'bb :\par
\par
1. Set the DMA4_CCRi[17] TRANSPARENT_COPY_ENABLE bit to 1\par
1. DMA4_CCRi [17] TRANSPARENT_COPY_ENABLE \'ba\'f1\'c6\'ae\'b8\'a6 1\'b7\'ce \'bc\'b3\'c1\'a4\par
\par
2. Set the DMA4_CCRi[16] CONST_FILL_ENABLE bit to 0\par
2. DMA4_CCRi [16] CONST_FILL_ENABLE \'ba\'f1\'c6\'ae\'b8\'a6 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9\par
\par
3. Set the value of the key color in the DMA4_COLORi[15:0] COLOR_KEY bit field\par
To perform this graphic operation, the following lines can be added to the example of Section 16.1.5.2,Software-Triggered (Nonsynchronized) Transfer.\par
3. DMA4_COLORi [15 : 0] COLOR_KEY \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c5\'b0 \'bb\'f6\'bb\'f3 \'b0\'aa\'c0\'bb \'bc\'b3\'c1\'a4\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0\par
\'c0\'cc \'b1\'d7\'b7\'a1\'c7\'c8 \'c0\'db\'be\'f7\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'cf\'b7\'c1\'b8\'e9 16.1.5.\'a4\'b12 \'c0\'fd (\'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'c6\'ae\'b8\'ae\'b0\'c5 (\'ba\'f1 \'b5\'bf\'b1\'e2\'c8\'ad) \'c0\'fc\'bc\'db)\'c0\'c7 \'bf\'b9\'bf\'a1 \'b4\'d9\'c0\'bd \'c1\'d9\'c0\'bb \'c3\'df\'b0\'a1\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
DMA4_CCR_CH10 &= ~(0x1 << 16);\par
\par
DMA4_CCR_CH10 |= 0x1 << 17;\par
\par
DMA4_COLOR_CH10 = 0x00000003;\par
\par
\bullet  Solid Color fill:\par
\bullet  \'b4\'dc\'bb\'f6 \'c3\'a4\'bf\'ec\'b1\'e2 :\par
\par
1. Set the DMA4_CCRi[16] CONST_FILL_ENABLE bit to 1\par
1. DMA4_CCRi [16] CONST_FILL_ENABLE \'ba\'f1\'c6\'ae\'b8\'a6 1\'b7\'ce \'bc\'b3\'c1\'a4\par
\par
2. Set the DMA4_CCRi[17] TRANSPARENT_COPY_ENABLE bit to 0\par
2. DMA4_CCRi [17] TRANSPARENT_COPY_ENABLE \'ba\'f1\'c6\'ae\'b8\'a6 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9\par
\par
3. Set the value of key the color in the DMA4_COLORi[15:0] SOLID_COLOR bit field To perform this graphic operation, the following lines can be added to the example of Section 16.1.5.2, Software-Triggered (Nonsynchronized) Transfer.\par
3. DMA4_COLORi [15 : 0] SOLID_COLOR \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'c0\'c7 \'bb\'f6\'bb\'f3 \'c5\'b0 \'b0\'aa \'bc\'b3\'c1\'a4\'c0\'cc \'b1\'d7\'b7\'a1\'c7\'c8 \'c0\'db\'be\'f7\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'cf\'b7\'c1\'b8\'e9 16.1.5.2 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'c6\'ae\'b8\'ae\'b0\'c5 (\'ba\'f1\'b5\'bf\'b1\'e2) \'c0\'fc\'bc\'db\'c0\'c7 \'bf\'b9\'bf\'a1 \'b4\'d9\'c0\'bd \'c7\'e0\'c0\'bb \'c3\'df\'b0\'a1 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
DMA4_CCR_CH10 &= ~(0x1 << 17);\par
\par
DMA4_CCR_CH10 |= 0x1 << 16;\par
\par
DMA4_COLOR_CH10 = 0x00000003;\par
\par
16.1.5.9 Linked-List Programming Guidelines\par
16.1.5.9 \'b8\'b5\'c5\'a9 \'b5\'c8 \'b8\'f1\'b7\'cf \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c1\'f6\'c4\'a7\par
\par
\bullet  With the exception of the DMA4_CCRi[7] ENABLE bit and the DMA4_CDPi[7] PAUSE_LINK_LIST bit during a linked-list transfer (descriptor load phase or data load phase), avoid programming any register through the configuration port.\par
\bullet  \'bf\'ac\'b0\'e1 \'b8\'f1\'b7\'cf \'c0\'fc\'bc\'db (\'bc\'b3\'b8\'ed\'c0\'da\'b7\'ce\'b5\'e5 \'b4\'dc\'b0\'e8 \'b6\'c7\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'b7\'ce\'b5\'e5 \'b4\'dc\'b0\'e8) \'c1\'df\'bf\'a1 DMA4_CCRi [7] ENABLE \'ba\'f1\'c6\'ae \'b9\'d7 DMA4_CDPi [7] PAUSE_LINK_LIST \'ba\'f1\'c6\'ae\'b8\'a6 \'c1\'a6\'bf\'dc\'c7\'cf\'b0\'ed \'b1\'b8\'bc\'ba \'c6\'f7\'c6\'ae\'b8\'a6 \'c5\'eb\'c7\'d8 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'cf\'c1\'f6 \'b8\'b6\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
\bullet  Before enabling any linked-list transfer, ensure that all global registers and all registers in the descriptor are initialized.\par
\bullet  \'bf\'ac\'b0\'e1\'b5\'c8 \'b8\'f1\'b7\'cf \'c0\'fc\'bc\'db\'c0\'bb \'c8\'b0\'bc\'ba\'c8\'ad\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 \'bc\'b3\'b8\'ed \'c0\'da\'c0\'c7 \'b8\'f0\'b5\'e7 \'c0\'fc\'bf\'aa \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'cd \'b8\'f0\'b5\'e7 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b0\'a1 \'c3\'ca\'b1\'e2\'c8\'ad\'b5\'c7\'be\'fa\'b4\'c2\'c1\'f6 \'c8\'ae\'c0\'ce\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
Some static channel registers (registers that are not updated by the descriptor to be loaded) must also be initialized correctly:\par
\'c0\'cf\'ba\'ce \'c1\'a4\'c0\'fb \'c3\'a4\'b3\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (\'b7\'ce\'b5\'e5 \'c7\'d2 \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd\'bf\'a1 \'c0\'c7\'c7\'d8 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b5\'c7\'c1\'f6 \'be\'ca\'b4\'c2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd)\'b5\'b5 \'bf\'c3\'b9\'d9\'b8\'a3\'b0\'d4 \'c3\'ca\'b1\'e2\'c8\'ad\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\endash  For type 2, the following registers must be initialized with consistent values:\par
- \'c0\'af\'c7\'fc 2\'c0\'c7 \'b0\'e6\'bf\'ec, \'b4\'d9\'c0\'bd \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'c0\'cf\'b0\'fc\'b5\'c8 \'b0\'aa\'c0\'b8\'b7\'ce \'c3\'ca\'b1\'e2\'c8\'ad\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  All global registers\par
\par
\bullet  DMA4_CCRi\par
\par
\bullet  DMA4_CSDPi\par
\par
\bullet  DMA4_CLNK_CTRLi\par
\par
\endash  For type 3, the following registers must be initialized with consistent values:\par
- \'c0\'af\'c7\'fc 3\'c0\'c7 \'b0\'e6\'bf\'ec, \'b4\'d9\'c0\'bd \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'c0\'cf\'b0\'fc\'b5\'c8 \'b0\'aa\'c0\'b8\'b7\'ce \'c3\'ca\'b1\'e2\'c8\'ad\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  All global registers\par
\par
\bullet  DMA4_CCRi\par
\par
\bullet  DMA4_CSDPi\par
\par
\bullet  DMA4_CLNK_CTRLi\par
\par
\bullet  DMA4_CICRi\par
\par
\bullet  DMA4_CFNi\par
\par
\bullet  In case of a linked list with descriptor types 2 and 3, the content of the DMA4_CCRi register must not change during super-block life.\par
\bullet  \'b5\'f0\'bd\'ba\'c5\'a9\'b8\'b3\'c5\'cd \'c5\'b8\'c0\'d4 2\'bf\'cd 3\'c0\'cc\'c0\'d6\'b4\'c2 \'b8\'b5\'c5\'a9\'b5\'e5\'b8\'ae\'bd\'ba\'c6\'ae\'c0\'c7 \'b0\'e6\'bf\'ec \'bc\'f6\'c6\'db \'ba\'ed\'b7\'cf \'bc\'f6\'b8\'ed \'b5\'bf\'be\'c8 DMA4_CCRi \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'b3\'bb\'bf\'eb\'c0\'cc \'ba\'af\'b0\'e6\'b5\'c7\'be\'ee\'bc\'ad\'b4\'c2 \'be\'c8\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  The PAUSE_LINK_LIST bit must not be set in the initialization phase.\par
\bullet  \'c3\'ca\'b1\'e2\'c8\'ad \'b4\'dc\'b0\'e8\'bf\'a1\'bc\'ad PAUSE_LINK_LIST \'ba\'f1\'c6\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'c1\'f6 \'be\'ca\'be\'c6\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.1.6 DMA_SYSTEM Register Manual\par
16.1.6 DMA_SYSTEM \'b5\'ee\'b7\'cf \'b8\'c5\'b4\'ba\'be\'f3\par
\par
16.1.6.1 DMA_SYSTEM Instance Summary\par
16.1.6.1 DMA_SYSTEM \'c0\'ce\'bd\'ba\'c5\'cf\'bd\'ba \'bf\'e4\'be\'e0\par
\par
16.1.6.2 DMA_SYSTEM Registers\par
16.1.6.2 DMA_SYSTEM \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\par
\par
16.1.6.2.1 DMA_SYSTEM Register Summary\par
16.1.6.2.1 DMA_SYSTEM \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bf\'e4\'be\'e0\par
\par
Index i represents the logical channel number (where i = 0 to 31).\par
The offset address for some registers is calculated from the channel c number.\par
\'c0\'ce\'b5\'a6\'bd\'ba i\'b4\'c2 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'b9\'f8\'c8\'a3\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9 (\'bf\'a9\'b1\'e2\'bc\'ad i\'b4\'c2 0\'bf\'a1\'bc\'ad 31\'b1\'ee\'c1\'f6).\par
\'c0\'cf\'ba\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'bf\'c0\'c7\'c1\'bc\'c2 \'c1\'d6\'bc\'d2\'b4\'c2 \'c3\'a4\'b3\'ce c \'b9\'f8\'c8\'a3\'bf\'a1\'bc\'ad \'b0\'e8\'bb\'ea\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
For example, the DMA4_CCR10 (channel 10) register has an offset address of 10 \'a1\'bf 0x60 = 0x3C0, and thus a physical address of 0x4A05 6080 + 0x3C0 = 0x4A05 6440.\par
\'bf\'b9\'b8\'a6 \'b5\'e9\'be\'ee, DMA4_CCR10 (\'c3\'a4\'b3\'ce 10) \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 10x0x60 = 0x3C0\'c0\'c7 \'bf\'c0\'c7\'c1\'bc\'c2 \'c1\'d6\'bc\'d2\'b8\'a6 \'b0\'a1\'c1\'f6\'b9\'c7\'b7\'ce 0x4A05 6080 + 0x3C0 = 0x4A05 6440\'c0\'c7 \'b9\'b0\'b8\'ae\'c0\'fb \'c1\'d6\'bc\'d2\'b8\'a6 \'b0\'ae\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Index j represents the interrupt line number (where j = 0 to 3) The offset address for some registers is calculated from the channel c number.\par
\'c0\'ce\'b5\'a6\'bd\'ba j\'b4\'c2 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'b6\'f3\'c0\'ce \'b9\'f8\'c8\'a3\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9 (j = 0\'bf\'a1\'bc\'ad 3). \'c0\'cf\'ba\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'bf\'c0\'c7\'c1\'bc\'c2 \'c1\'d6\'bc\'d2\'b4\'c2 \'c3\'a4\'b3\'ce c \'b9\'f8\'c8\'a3\'bf\'a1\'bc\'ad \'b0\'e8\'bb\'ea\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
For example, the DMA4_IRQSTATUS_L3 (line 3) register has an offset address of 3 \'a1\'bf 0x4 = 0xC, and thus a physical address of 0x4A05 6008 + 0xC = 0x4A05 6014.\par
\'bf\'b9\'b8\'a6 \'b5\'e9\'be\'ee, DMA4_IRQSTATUS_L3 (\'b6\'f3\'c0\'ce 3) \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 3 \'a1\'bf 0x4 = 0xC\'c0\'c7 \'bf\'c0\'c7\'c1\'bc\'c2 \'be\'ee\'b5\'e5\'b7\'b9\'bd\'ba\'b8\'a6 \'b0\'a1\'c1\'f6\'b8\'e7, \'b5\'fb\'b6\'f3\'bc\'ad 0x4A05 6008 + 0xC = 0x4A05 6014\'c0\'c7 \'b9\'b0\'b8\'ae\'c0\'fb \'be\'ee\'b5\'e5\'b7\'b9\'bd\'ba\'b8\'a6 \'b0\'ae\'b4\'c2\'b4\'d9.\par
\par
16.1.6.2.2 DMA_SYSTEM Register Description\par
16.1.6.2.2 DMA_SYSTEM \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'b3\'b8\'ed\par
\par
NOTE: Some registers have no reset value (marked with -) because of hardware implementation in memory.\par
\'c2\'fc\'b0\'ed : \'b8\'de\'b8\'f0\'b8\'ae\'c0\'c7 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'b1\'b8\'c7\'f6\'c0\'b8\'b7\'ce \'c0\'ce\'c7\'d8 \'c0\'cf\'ba\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1\'b4\'c2 \'c0\'e7\'bc\'b3\'c1\'a4 \'b0\'aa (-\'b7\'ce \'c7\'a5\'bd\'c3)\'c0\'cc \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Software must ensure the correct programming of these registers, if needed.\par
\'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'b4\'c2 \'c7\'ca\'bf\'e4\'c7\'d1 \'b0\'e6\'bf\'ec\'c0\'cc \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'bf\'c3\'b9\'d9\'b8\'a3\'b0\'d4 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Shadow registers are used to read run-time registers such as CCEN, CCFN, CDAC, and CSAC.\par
\'bc\'a8\'b5\'b5\'bf\'ec \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 CCEN, CCFN, CDAC \'b9\'d7 CSAC\'bf\'cd \'b0\'b0\'c0\'ba \'b7\'b1\'c5\'b8\'c0\'d3 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c0\'d0\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Typically, when accessed in 8-bit or 16-bit access for two consecutive accesses, the value of the previous registers can change.\par
\'c0\'cf\'b9\'dd\'c0\'fb\'c0\'b8\'b7\'ce 2 \'c8\'b8\'c0\'c7 \'bf\'ac\'bc\'d3 \'be\'d7\'bc\'bc\'bd\'ba\'b8\'a6 \'c0\'a7\'c7\'d8 8 \'ba\'f1\'c6\'ae \'b6\'c7\'b4\'c2 16 \'ba\'f1\'c6\'ae \'be\'d7\'bc\'bc\'bd\'ba\'b7\'ce \'be\'d7\'bc\'bc\'bd\'ba\'c7\'cf\'b8\'e9 \'c0\'cc\'c0\'fc \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'b0\'aa\'c0\'cc \'ba\'af\'b0\'e6 \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
A shadow register holds the entire value to let the next access recover the remaining 24 or 16 bits.\par
\'bc\'a8\'b5\'b5\'bf\'ec \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'c0\'fc\'c3\'bc \'b0\'aa\'c0\'bb \'ba\'b8\'c0\'af\'c7\'cf\'bf\'a9 \'b4\'d9\'c0\'bd \'be\'d7\'bc\'bc\'bd\'ba\'b0\'a1 \'b3\'aa\'b8\'d3\'c1\'f6 24 \'b6\'c7\'b4\'c2 16 \'ba\'f1\'c6\'ae\'b8\'a6 \'ba\'b9\'b1\'b8\'c7\'cf\'b5\'b5\'b7\'cf\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
For non-32-bit transactions, start reading or writing from the LSByte first to enable the register update.\par
\'ba\'f1 32 \'ba\'f1\'c6\'ae \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'c0\'c7 \'b0\'e6\'bf\'ec LSByte\'bf\'a1\'bc\'ad \'b8\'d5\'c0\'fa \'c0\'d0\'b1\'e2 \'b6\'c7\'b4\'c2 \'be\'b2\'b1\'e2\'b8\'a6 \'bd\'c3\'c0\'db\'c7\'cf\'bf\'a9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b8\'a6 \'c8\'b0\'bc\'ba\'c8\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
There is no issue for 32-bit read-write transactions.\par
32 \'ba\'f1\'c6\'ae \'c0\'d0\'b1\'e2 - \'be\'b2\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'bf\'a1\'b4\'c2 \'be\'c6\'b9\'ab\'b7\'b1 \'b9\'ae\'c1\'a6\'b0\'a1 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2 Enhanced DMA\par
16.2 \'c7\'e2\'bb\'f3\'b5\'c8 DMA\par
\par
This chapter describes the Enhanced Direct Memory Access (EDMA) controller.\par
NOTE: EVE is not supported in this family of devices.\par
\'c0\'cc \'c0\'e5\'bf\'a1\'bc\'ad\'b4\'c2 EDMA (Enhanced Direct Memory Access) \'c1\'a6\'be\'ee\'b1\'e2\'bf\'a1 \'b4\'eb\'c7\'d8 \'bc\'b3\'b8\'ed\'c7\'d5\'b4\'cf\'b4\'d9.\par
\'c2\'fc\'b0\'ed : EVE\'b4\'c2\'c0\'cc \'c0\'e5\'c4\'a1 \'c1\'a6\'c7\'b0\'b1\'ba\'bf\'a1\'bc\'ad \'c1\'f6\'bf\'f8\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.1 EDMA Module Overview\par
16.2.1 EDMA \'b8\'f0\'b5\'e2 \'b0\'b3\'bf\'e4\par
\par
The enhanced direct memory access module, also called EDMA, performs high-performance data transfers between two slave points, memories and peripheral devices without microprocessor unit (MPU) or digital signal processor (DSP) support during transfer.\par
\'c7\'e2\'bb\'f3\'b5\'c8 \'c1\'f7\'c1\'a2 \'b8\'de\'b8\'f0\'b8\'ae \'be\'d7\'bc\'bc\'bd\'ba \'b8\'f0\'b5\'e2 (EDMA\'b6\'f3\'b0\'ed\'b5\'b5 \'c7\'d4)\'c0\'ba \'c0\'fc\'bc\'db \'c1\'df\'bf\'a1 \'b8\'b6\'c0\'cc\'c5\'a9\'b7\'ce \'c7\'c1\'b7\'ce\'bc\'bc\'bc\'ad \'c0\'e5\'c4\'a1 (MPU) \'b6\'c7\'b4\'c2 \'b5\'f0\'c1\'f6\'c5\'d0 \'bd\'c5\'c8\'a3 \'c7\'c1\'b7\'ce\'bc\'bc\'bc\'ad (DSP) \'c1\'f6\'bf\'f8\'be\'f8\'c0\'cc \'b5\'ce \'b0\'b3\'c0\'c7 \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea \'c1\'f6\'c1\'a1, \'b8\'de\'b8\'f0\'b8\'ae \'b9\'d7 \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'b0\'a3\'bf\'a1 \'b0\'ed\'bc\'ba\'b4\'c9 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'bc\'db\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
EDMA transfer is programmed through a logical EDMA channel, which allows the transfer to be optimally tailored to the requirements of the application.\par
EDMA \'c0\'fc\'bc\'db\'c0\'ba \'b3\'ed\'b8\'ae\'c0\'fb EDMA \'c3\'a4\'b3\'ce\'c0\'bb \'c5\'eb\'c7\'d8 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'b5\'c7\'b9\'c7\'b7\'ce \'be\'d6\'c7\'c3\'b8\'ae\'c4\'c9\'c0\'cc\'bc\'c7\'c0\'c7 \'bf\'e4\'b1\'b8 \'bb\'e7\'c7\'d7\'bf\'a1 \'b8\'c2\'b0\'d4 \'c0\'fc\'bc\'db\'c0\'bb \'c3\'d6\'c0\'fb\'c8\'ad \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The EDMA can also perform transfers between external memories and between Device subsystems internal memories, with some performance loss caused by resource sharing between the read and write ports.\par
EDMA\'b4\'c2 \'bf\'dc\'ba\'ce \'b8\'de\'b8\'f0\'b8\'ae\'bf\'cd \'c0\'e5\'c4\'a1 \'bc\'ad\'ba\'ea \'bd\'c3\'bd\'ba\'c5\'db \'b3\'bb\'ba\'ce \'b8\'de\'b8\'f0\'b8\'ae \'bb\'e7\'c0\'cc\'c0\'c7 \'c0\'fc\'bc\'db\'c0\'bb \'bc\'f6\'c7\'e0 \'c7\'d2 \'bc\'f6 \'c0\'d6\'b0\'ed \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae \'b0\'a3\'c0\'c7 \'c0\'da\'bf\'f8 \'b0\'f8\'c0\'af\'b7\'ce \'c0\'ce\'c7\'d8 \'bc\'ba\'b4\'c9\'c0\'cc \'be\'e0\'b0\'a3 \'c0\'fa\'c7\'cf\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
EDMA controller is based on two major principal blocks:\par
EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'b5\'ce \'b0\'a1\'c1\'f6 \'c1\'d6\'bf\'e4 \'ba\'ed\'b7\'cf\'c0\'bb \'b1\'e2\'b9\'dd\'c0\'b8\'b7\'ce\'c7\'d5\'b4\'cf\'b4\'d9 :\par
\par
\bullet  EDMA third-party channel controller (EDMA_TPCC)\par
\bullet  EDMA \'c5\'b8\'bb\'e7 \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af (EDMA_TPCC)\par
\par
\bullet  EDMA third-party transfer controller (EDMA_TPTC)\par
\bullet  EDMA \'c5\'b8\'bb\'e7 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af (EDMA_TPTC)\par
\par
The TPCC is a high flexible Channel Controller.\par
TPCC\'b4\'c2 \'b3\'f4\'c0\'ba \'c0\'af\'bf\'ac\'bc\'ba\'c0\'c7 \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
It serves as an user interface and an event interface for the EDMA controller.\par
EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 \'bb\'e7\'bf\'eb\'c0\'da \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba \'b9\'d7 \'c0\'cc\'ba\'a5\'c6\'ae \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'b7\'ce \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPCC serves to prioritize incoming software requests or events from peripherals and submits transfer requests (TRs) to the transfer controller.\par
EDMA_TPCC\'b4\'c2 \'b5\'e9\'be\'ee\'bf\'c0\'b4\'c2 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'bf\'e4\'c3\'bb\'c0\'cc\'b3\'aa \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae\'c0\'c7 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'cf\'b0\'ed \'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2 (TR)\'bf\'a1 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'bb \'c0\'fc\'bc\'db\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The TPTC performs read and write transfers by EDMA ports to the slave peripherals as programmed in the "Active" and "Pending" set of the registers.\par
TPTC\'b4\'c2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 "\'c8\'b0\'bc\'ba"\'b9\'d7 "\'ba\'b8\'b7\'f9 \'c1\'df"\'bc\'bc\'c6\'ae\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c8\'b4\'eb\'b7\'ce \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'bf\'a1 \'b4\'eb\'c7\'d1 EDMA \'c6\'f7\'c6\'ae\'bf\'a1 \'c0\'c7\'c7\'d1 \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c0\'fc\'bc\'db\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The transfer controllers are responsible for data movement and issue read/write commands to the source and destination addresses that are programmed for a given transfer in the EDMA_TPCC.\par
\'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'cc\'b5\'bf\'c0\'bb \'b4\'e3\'b4\'e7\'c7\'cf\'b8\'e7 EDMA_TPCC\'bf\'a1\'bc\'ad \'c1\'a6\'b0\'f8\'b5\'c8 \'c0\'fc\'bc\'db\'bf\'a1 \'b4\'eb\'c7\'d8 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c8 \'bc\'d2\'bd\'ba \'b9\'d7 \'b8\'f1\'c0\'fb\'c1\'f6 \'c1\'d6\'bc\'d2\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'b8\'ed\'b7\'c9\'c0\'bb \'b9\'df\'c7\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The SoC integrates the following EDMA instances:\par
SoC\'b4\'c2 \'b4\'d9\'c0\'bd EDMA \'c0\'ce\'bd\'ba\'c5\'cf\'bd\'ba\'b8\'a6 \'c5\'eb\'c7\'d5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  One system-level EDMA\par
\bullet  \'c7\'cf\'b3\'aa\'c0\'c7 \'bd\'c3\'bd\'ba\'c5\'db \'b7\'b9\'ba\'a7 EDMA\par
\par
\bullet  One DSP internal EDMA (per DSP)\par
\bullet  1 \'b0\'b3\'c0\'c7 DSP \'b3\'bb\'ba\'ce EDMA (DSP \'b4\'e7)\par
\par
\bullet  One EVE internal EDMA (per EVE)\par
\bullet  EVE \'b3\'bb\'ba\'ce EDMA 1 \'b0\'b3 (EVE \'b4\'e7)\par
\par
Each of these EDMA modules consists of:\par
\'c0\'cc EDMA \'b8\'f0\'b5\'e2\'c0\'ba \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'cc \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  One TPCC instance\par
\bullet  \'c7\'cf\'b3\'aa\'c0\'c7 TPCC \'c0\'ce\'bd\'ba\'c5\'cf\'bd\'ba\par
\par
\bullet  Two TPTC instances\par
\par
NOTE: All EDMA modules in the SoC are functionally identical.\par
\'c2\'fc\'b0\'ed : SoC\'c0\'c7 \'b8\'f0\'b5\'e7 EDMA \'b8\'f0\'b5\'e2\'c0\'ba \'b1\'e2\'b4\'c9\'b8\'e9\'bf\'a1\'bc\'ad \'b5\'bf\'c0\'cf\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Note that some of the configuration parameters may be different for the various EDMA instances (see Section 16.2.2, EDMA Controllers Configuration).\par
\'c0\'cf\'ba\'ce \'b1\'b8\'bc\'ba \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b4\'c2 \'b4\'d9\'be\'e7\'c7\'d1 EDMA \'c0\'ce\'bd\'ba\'c5\'cf\'bd\'ba\'bf\'a1 \'b4\'eb\'c7\'d8 \'b4\'d9\'b8\'a6 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9 (16.2.2 \'c0\'fd, EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'b1\'b8\'bc\'ba \'c2\'fc\'c1\'b6).\par
\par
This chapter is mostly focused on describing the system-level EDMA module (in terms of configuration and integration in the SoC).\par
\'c0\'cc \'c0\'e5\'c0\'ba \'c1\'d6\'b7\'ce \'bd\'c3\'bd\'ba\'c5\'db \'b7\'b9\'ba\'a7 EDMA \'b8\'f0\'b5\'e2 (SoC\'c0\'c7 \'b1\'b8\'bc\'ba \'b9\'d7 \'c5\'eb\'c7\'d5 \'c3\'f8\'b8\'e9\'bf\'a1\'bc\'ad)\'c0\'bb \'bc\'b3\'b8\'ed\'c7\'cf\'b4\'c2 \'b5\'a5 \'c1\'df\'c1\'a1\'c0\'bb \'b5\'d3\'b4\'cf\'b4\'d9.\par
\par
For details on DSPx_EDMA / EVEx_EDMA integration, see their respective chapters.\par
DSPx_EDMA / EVEx_EDMA \'c5\'eb\'c7\'d5\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba \'c7\'d8\'b4\'e7 \'c0\'e5\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
Figure 16-12. EDMA module Overview\par
\'b1\'d7\'b8\'b2 16-12. EDMA \'b8\'f0\'b5\'e2 \'b0\'b3\'bf\'e4\par
\par
The device CPUs can configure the EDMA controller blocks through the L3_MAIN interconnect.\par
\'b5\'f0\'b9\'d9\'c0\'cc\'bd\'ba CPU\'b4\'c2 L3_MAIN \'bb\'f3\'c8\'a3 \'bf\'ac\'b0\'e1\'c0\'bb \'c5\'eb\'c7\'d8 EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'ba\'ed\'b7\'cf\'c0\'bb \'b1\'b8\'bc\'ba \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.1.1 EDMA Features\par
16.2.1.1 EDMA \'b1\'e2\'b4\'c9\par
\par
The EDMA_TPCC channel controller has following features:\par
EDMA_TPCC \'c3\'a4\'b3\'ce \'c1\'a6\'be\'ee\'b1\'e2\'bf\'a1\'b4\'c2 \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'ba \'b1\'e2\'b4\'c9\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  Fully orthogonal transfer description:\par
\bullet  \'bf\'cf\'c0\'fc \'c1\'f7\'b1\'b3 \'c0\'fc\'bc\'db \'bc\'b3\'b8\'ed :\par
\par
\endash  Three transfer dimensions.\par
- 3 \'b0\'a1\'c1\'f6 \'c0\'fc\'bc\'db \'c4\'a1\'bc\'f6.\par
\par
\endash  A-synchronized transfers: one-dimension serviced per event.\par
- \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'c0\'fc\'bc\'db : \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'e7 1 \'c2\'f7\'bf\'f8 \'bc\'ad\'ba\'f1\'bd\'ba.\par
\par
\endash  AB-synchronized transfers: two-dimensions serviced per event.\par
- AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db : \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'e7 2 \'c2\'f7\'bf\'f8 \'bc\'ad\'ba\'f1\'bd\'ba.\par
\par
\endash  Independent indexes on source and destination.\par
- \'c3\'e2\'c3\'b3\'bf\'cd \'b8\'f1\'c0\'fb\'c1\'f6\'bf\'a1 \'b4\'eb\'c7\'d1 \'b5\'b6\'b8\'b3\'c0\'fb \'c0\'ce \'bb\'f6\'c0\'ce.\par
\par
\endash  Chaining feature allows a 3-D transfer based on a single event.\par
- \'bf\'ac\'b0\'e1 \'b1\'e2\'b4\'c9\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 \'b4\'dc\'c0\'cf \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'b1\'e2\'b9\'dd\'c0\'b8\'b7\'ce 3 \'c2\'f7\'bf\'f8 \'c0\'fc\'bc\'db\'c0\'cc \'b0\'a1\'b4\'c9\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Flexible transfer definition:\par
\bullet  \'c0\'af\'bf\'ac\'c7\'d1 \'c0\'fc\'bc\'db \'c1\'a4\'c0\'c7 :\par
\par
\endash  Increment or FIFO transfer addressing modes.\par
- \'c1\'f5\'b0\'a1 \'b6\'c7\'b4\'c2 FIFO \'c0\'fc\'bc\'db \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5.\par
\par
\endash  Linking mechanism allows automatic PaRAM set update.\par
- \'b8\'b5\'c5\'a9 \'b8\'de\'c4\'bf\'b4\'cf\'c1\'f2\'c0\'ba \'c0\'da\'b5\'bf PaRAM \'bc\'bc\'c6\'ae \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b8\'a6 \'c7\'e3\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\endash  Chaining allows multiple transfers to execute with one event.\par
- \'c3\'bc\'c0\'ce\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 \'c7\'cf\'b3\'aa\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae\'b7\'ce \'bf\'a9\'b7\'af \'c0\'fc\'bc\'db\'c0\'bb \'bd\'c7\'c7\'e0\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  Interrupt generation for the following:\par
\bullet  \'b4\'d9\'c0\'bd\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bb\'fd\'bc\'ba :\par
\par
\endash  Transfer completion.\par
- \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1.\par
\par
\endash  Error conditions.\par
- \'bf\'c0\'b7\'f9 \'c1\'b6\'b0\'c7.\par
\par
\bullet  Debug visibility:\par
\bullet  \'b5\'f0\'b9\'f6\'b1\'d7 \'b0\'a1\'bd\'c3\'bc\'ba :\par
\par
\endash  Queue water marking/threshold.\par
- \'b4\'eb\'b1\'e2 \'bc\'f6 \'b8\'b6\'c5\'b7 / \'c0\'d3\'b0\'e8 \'b0\'aa.\par
\par
\endash  Error and status recording to facilitate debug.\par
- \'b5\'f0\'b9\'f6\'b1\'eb\'c0\'bb \'bf\'eb\'c0\'cc\'c7\'cf\'b0\'d4\'c7\'cf\'b1\'e2\'c0\'a7\'c7\'d1 \'bf\'c0\'b7\'f9 \'b9\'d7 \'bb\'f3\'c5\'c2 \'b1\'e2\'b7\'cf.\par
\par
\bullet  64 DMA request channels:\par
\bullet  64 \'b0\'b3\'c0\'c7 DMA \'bf\'e4\'c3\'bb \'c3\'a4\'b3\'ce :\par
\par
\endash  Event synchronization.\par
- \'c0\'cc\'ba\'a5\'c6\'ae \'b5\'bf\'b1\'e2\'c8\'ad.\par
\par
\endash  Manual synchronization (CPU(s) write to event set registers EDMA_TPCC_ESR and EDMA_TPCC_ESRH).\par
- \'bc\'f6\'b5\'bf \'b5\'bf\'b1\'e2\'c8\'ad (\'c0\'cc\'ba\'a5\'c6\'ae \'bc\'bc\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_ESR \'b9\'d7 EDMA_TPCC_ESRH\'bf\'a1 \'b4\'eb\'c7\'d1 CPU \'be\'b2\'b1\'e2).\par
\par
\endash  Chain synchronization (completion of one transfer triggers another transfer).\par
- \'c3\'bc\'c0\'ce \'b5\'bf\'b1\'e2\'c8\'ad (\'c7\'d1 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1\'b7\'ce \'b4\'d9\'b8\'a5 \'c0\'fc\'bc\'db\'c0\'cc \'c6\'ae\'b8\'ae\'b0\'c5 \'b5\'ca).\par
\par
\bullet  Eight QDMA channels:\par
\bullet  8 \'b0\'b3\'c0\'c7 QDMA \'c3\'a4\'b3\'ce :\par
\par
\endash  QDMA channels trigger automatically upon writing to a parameter RAM (PaRAM) set entry.\par
- QDMA \'c3\'a4\'b3\'ce\'c0\'ba \'c6\'c4\'b6\'f3\'b9\'cc\'c5\'cd RAM (PaRAM) \'bc\'bc\'c6\'ae \'c0\'d4\'b7\'c2\'bf\'a1 \'b1\'e2\'b7\'cf \'c7\'d2 \'b6\'a7 \'c0\'da\'b5\'bf\'c0\'b8\'b7\'ce \'c6\'ae\'b8\'ae\'b0\'c5\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\endash  Support for programmable QDMA channel to PaRAM mapping.\par
- PaRAM \'b8\'c5\'c7\'ce\'bf\'a1 \'b4\'eb\'c7\'d1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b0\'a1\'b4\'c9\'c7\'d1 QDMA \'c3\'a4\'b3\'ce\'c0\'bb \'c1\'f6\'bf\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  512 PaRAM sets:\par
\bullet  512 PaRAM \'bc\'bc\'c6\'ae :\par
\par
\endash  Each PaRAM set can be used for a DMA channel, QDMA channel, or link set.\par
- \'b0\'a2 PaRAM \'bc\'bc\'c6\'ae\'b4\'c2 DMA \'c3\'a4\'b3\'ce, QDMA \'c3\'a4\'b3\'ce \'b6\'c7\'b4\'c2 \'b8\'b5\'c5\'a9 \'bc\'bc\'c6\'ae\'bf\'a1 \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  Two transfer controllers/event queues.\par
\bullet  \'b5\'ce \'b0\'b3\'c0\'c7 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af / \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad.\par
\par
\bullet  16 event entries per event queue.\par
\bullet  \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'b4\'e7 16 \'b0\'b3\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae \'c7\'d7\'b8\'f1.\par
\par
\bullet  Memory protection support:\par
\bullet  \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3 \'c1\'f6\'bf\'f8 :\par
\par
\endash  Proxy memory protection for TR submission.\par
TR \'c1\'a6\'c3\'e2\'c0\'bb\'c0\'a7\'c7\'d1 \'c7\'c1\'b7\'cf\'bd\'c3 \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3.\par
\par
\endash  Active memory protection for accesses to PaRAM and registers.\par
- PaRAM \'b9\'d7 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'b4\'eb\'c7\'d1 \'be\'d7\'c6\'bc\'ba\'ea \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3.\par
\par
The EDMA_TPTC transfer controller has the following features:\par
EDMA_TPTC \'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2\'bf\'a1\'b4\'c2 \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'ba \'b1\'e2\'b4\'c9\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  Two transfer controllers (TC).\par
\bullet  \'b5\'ce \'b0\'b3\'c0\'c7 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af (TC).\par
\par
\bullet  128-bit wide read and write ports per TC.\par
TC \'b4\'e7 128 \'ba\'f1\'c6\'ae \'c6\'f8\'c0\'c7 \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c6\'f7\'c6\'ae.\par
\par
\bullet  Up to four in-flight transfer requests (TRs).\par
\bullet  \'c3\'d6\'b4\'eb 4 \'b0\'b3\'c0\'c7 \'b1\'e2\'b3\'bb \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR).\par
\par
\bullet  Programmable priority level.\par
\bullet  \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b0\'a1\'b4\'c9\'c7\'d1 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'bc\'f6\'c1\'d8.\par
\par
\bullet  Supports two-dimensional transfers with independent indexes on source and destination (EDMA_TPCC manages the 3rd dimension).\par
\bullet  \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3\'bf\'a1\'bc\'ad \'b5\'b6\'b8\'b3\'c0\'fb \'c0\'ce \'c0\'ce\'b5\'a6\'bd\'ba\'b7\'ce 2 \'c2\'f7\'bf\'f8 \'c0\'fc\'bc\'db\'c0\'bb \'c1\'f6\'bf\'f8\'c7\'d5\'b4\'cf\'b4\'d9 (EDMA_TPCC\'b0\'a1 3 \'c2\'f7\'bf\'f8\'c0\'bb \'b0\'fc\'b8\'ae \'c7\'d4).\par
\par
\bullet  Support for increment or constant addressing mode transfers.\par
\bullet  \'c1\'f5\'ba\'d0 \'b6\'c7\'b4\'c2 \'bb\'f3\'bc\'f6 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5 \'c0\'fc\'bc\'db\'c0\'bb \'c1\'f6\'bf\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Interrupt and error support.\par
\bullet  \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'b9\'d7 \'bf\'c0\'b7\'f9 \'c1\'f6\'bf\'f8.\par
\par
\bullet  Memory-Mapped Register (MMR) bit fields are fixed position in 32-bit MMR\par
regardless of endianness.\par
\bullet  \'b8\'de\'b8\'f0\'b8\'ae \'b8\'c5\'c7\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (MMR) \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b4\'c2 \'bf\'a3\'b5\'f0\'be\'c8 \'b9\'e6\'bd\'c4\'b0\'fa \'bb\'f3\'b0\'fc\'be\'f8\'c0\'cc 32 \'ba\'f1\'c6\'ae MMR\'bf\'a1\'bc\'ad \'b0\'ed\'c1\'a4 \'c0\'a7\'c4\'a1\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
EDMA controller uses the shared MMU1 module for transfering to and from DSP module. This provides several benefits including:\par
EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 DSP \'b8\'f0\'b5\'e2\'b0\'fa\'c0\'c7 \'c0\'fc\'bc\'db\'c0\'bb \'c0\'a7\'c7\'d8 \'b0\'f8\'c0\'af MMU1 \'b8\'f0\'b5\'e2\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9. \'c0\'cc\'b0\'cd\'c0\'ba \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'ba \'bf\'a9\'b7\'af \'b0\'a1\'c1\'f6 \'c0\'cc\'c1\'a1\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Protection of Host CPU memory regions from accidental corruption by EDMA TPTCs.\par
\bullet  EDMA TPTC\'bf\'a1 \'c0\'c7\'c7\'d1 \'c8\'a3\'bd\'ba\'c6\'ae CPU \'b8\'de\'b8\'f0\'b8\'ae \'bf\'b5\'bf\'aa\'c0\'c7 \'bf\'ec\'b9\'df\'c0\'fb \'c0\'ce \'bc\'d5\'bb\'f3 \'b9\'e6\'c1\'f6.\par
\par
\bullet  Direct allocation of buffers in user space without the need for translation between CPU and DSP applications utilizing EDMA TPTCs.\par
\bullet  EDMA TPTC\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 CPU\'bf\'cd DSP \'c0\'c0\'bf\'eb \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'b0\'a3\'c0\'c7 \'ba\'af\'c8\'af\'be\'f8\'c0\'cc \'bb\'e7\'bf\'eb\'c0\'da \'b0\'f8\'b0\'a3\'bf\'a1\'bc\'ad \'b9\'f6\'c6\'db\'b8\'a6 \'c1\'f7\'c1\'a2 \'c7\'d2\'b4\'e7\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Accesses by the EDMA TPTCs (both TPTC0 and TPTC1) may optionally be routed through the MMU1.\par
EDMA TPTC (TPTC0 \'b9\'d7 TPTC1)\'bf\'a1 \'c0\'c7\'c7\'d1 \'be\'d7\'bc\'bc\'bd\'ba\'b4\'c2 \'bc\'b1\'c5\'c3\'c0\'fb\'c0\'b8\'b7\'ce MMU1\'c0\'bb \'c5\'eb\'c7\'d8 \'b6\'f3\'bf\'ec\'c6\'ae \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The TPTC0 and TPTC1 routing allows EDMA transfer controller to be used to perform transfers using only the virtual addresses of the associated buffers.\par
TPTC0 \'b9\'d7 TPTC1 \'b6\'f3\'bf\'ec\'c6\'c3\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 \'bf\'ac\'b0\'e1\'b5\'c8 \'b9\'f6\'c6\'db\'c0\'c7 \'b0\'a1\'bb\'f3 \'c1\'d6\'bc\'d2 \'b8\'b8 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'c0\'fc\'bc\'db\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'cf\'b4\'c2 \'b5\'a5 EDMA \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
For more information about MMU1 module refer to Chapter 20 Memory Management Units.\par
MMU1 \'b8\'f0\'b5\'e2\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 20 \'c0\'e5 \'b8\'de\'b8\'f0\'b8\'ae \'b0\'fc\'b8\'ae \'c0\'e5\'c4\'a1\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.2 EDMA Controllers Configuration\par
16.2.2 EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'b1\'b8\'bc\'ba\par
\par
Table 16-83 summarizes the configuration for each of the EDMA channel controllers present on the SoC.\par
\'c7\'a5 16-83\'bf\'a1\'b4\'c2 SoC\'bf\'a1\'c0\'d6\'b4\'c2 \'b0\'a2 EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 \'b1\'b8\'bc\'ba\'c0\'cc \'bf\'e4\'be\'e0\'b5\'c7\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.3 EDMA Controller Environment\par
16.2.3 EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'c8\'af\'b0\'e6\par
\par
The EDMA controller supports external DMA requests through the dma_evt[4:1] pins (see Table 16-85).\par
EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 dma_evt [4 : 1] \'c7\'c9\'c0\'bb \'c5\'eb\'c7\'d8 \'bf\'dc\'ba\'ce DMA \'bf\'e4\'c3\'bb\'c0\'bb \'c1\'f6\'bf\'f8\'c7\'d5\'b4\'cf\'b4\'d9 (\'c7\'a5 16-85 \'c2\'fc\'c1\'b6).\par
\par
A logical channel can be configured to respond to an external synchronization request.\par
\'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce\'c0\'ba \'bf\'dc\'ba\'ce \'b5\'bf\'b1\'e2\'c8\'ad \'bf\'e4\'c3\'bb\'bf\'a1 \'c0\'c0\'b4\'e4\'c7\'cf\'b5\'b5\'b7\'cf \'b1\'b8\'bc\'ba \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
An external device can use the external DMA request pins to start a logical channel transfer.\par
\'bf\'dc\'ba\'ce \'c0\'e5\'c4\'a1\'b4\'c2 \'bf\'dc\'ba\'ce DMA \'bf\'e4\'c3\'bb \'c7\'c9\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'b3\'ed\'b8\'ae \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db\'c0\'bb \'bd\'c3\'c0\'db\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The transfer can be a memory-to-memory transfer in which the source memory is in the external device.\par
\'c0\'fc\'bc\'db\'c0\'ba \'bc\'d2\'bd\'ba \'b8\'de\'b8\'f0\'b8\'ae\'b0\'a1 \'bf\'dc\'ba\'ce \'c0\'e5\'c4\'a1\'bf\'a1\'c0\'d6\'b4\'c2 \'b8\'de\'b8\'f0\'b8\'ae \'b4\'eb \'b8\'de\'b8\'f0\'b8\'ae \'c0\'fc\'bc\'db \'c0\'cf \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
By default, the external DMA request signals are not available on external pins after a cold reset.\par
\'b1\'e2\'ba\'bb\'c0\'fb\'c0\'b8\'b7\'ce \'bf\'dc\'ba\'ce DMA \'bf\'e4\'c3\'bb \'bd\'c5\'c8\'a3\'b4\'c2 \'c4\'dd\'b5\'e5 \'b8\'ae\'bc\'c2 \'c8\'c4\'bf\'a1 \'bf\'dc\'ba\'ce \'c7\'c9\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
For more information about multiplexing out the two signal lines to pins, refer to Chapter 18, Control Module.\par
\'b5\'ce \'b0\'b3\'c0\'c7 \'bd\'c5\'c8\'a3 \'b6\'f3\'c0\'ce\'c0\'bb \'c7\'c9\'c0\'b8\'b7\'ce \'b8\'d6\'c6\'bc\'c7\'c3\'b7\'ba\'bd\'cc\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 18 \'c0\'e5, \'c1\'a6\'be\'ee \'b8\'f0\'b5\'e2\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
All 64 DMA request lines are transition sensitive.\par
64 \'b0\'b3\'c0\'c7 \'b8\'f0\'b5\'e7 DMA \'bf\'e4\'c3\'bb \'b6\'f3\'c0\'ce\'c0\'ba \'c0\'fc\'c8\'af\'bf\'a1 \'b9\'ce\'b0\'a8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.4 EDMA Controller Integration\par
16.2.4 EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'c5\'eb\'c7\'d5\par
\par
This section describes the integration of the module in the device, including information about clocks, resets, and hardware requests.\par
\'c0\'cc \'bc\'bd\'bc\'c7\'bf\'a1\'bc\'ad\'b4\'c2 \'bd\'c3\'b0\'e8, \'c0\'e7\'bc\'b3\'c1\'a4 \'b9\'d7 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'bf\'e4\'c3\'bb\'bf\'a1 \'b4\'eb\'c7\'d1 \'c1\'a4\'ba\'b8\'b8\'a6 \'c6\'f7\'c7\'d4\'c7\'cf\'bf\'a9 \'c0\'e5\'c4\'a1\'bf\'a1 \'b8\'f0\'b5\'e2\'c0\'bb \'c5\'eb\'c7\'d5\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\'bf\'a1 \'b4\'eb\'c7\'d8 \'bc\'b3\'b8\'ed\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
NOTE: The \ldblquote Default Mapping\rdblquote  column in Table 16-88 EDMA Hardware Requests shows the default mapping of module IRQ source signals.\par
\'c2\'fc\'b0\'ed : \'c7\'a5 16-88 EDMA \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'bf\'e4\'c3\'bb\'c0\'c7 "\'b1\'e2\'ba\'bb \'b8\'c5\'c7\'ce"\'bf\'ad\'c0\'ba \'b8\'f0\'b5\'e2 IRQ \'bc\'d2\'bd\'ba \'bd\'c5\'c8\'a3\'c0\'c7 \'b1\'e2\'ba\'bb \'b8\'c5\'c7\'ce\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
These IRQ source signals can also be mapped to other lines of each device Interrupt controller through the IRQ_CROSSBAR or DMA_CROSSBAR modules.\par
\'c0\'cc IRQ \'bc\'d2\'bd\'ba \'bd\'c5\'c8\'a3\'b4\'c2 IRQ_CROSSBAR \'b6\'c7\'b4\'c2 DMA_CROSSBAR \'b8\'f0\'b5\'e2\'c0\'bb \'c5\'eb\'c7\'d8 \'b0\'a2 \'c0\'e5\'c4\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 \'b4\'d9\'b8\'a5 \'b6\'f3\'c0\'ce\'bf\'a1 \'b8\'c5\'c7\'ce \'b5\'c9 \'bc\'f6\'b5\'b5 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
For more information about the IRQ_CROSSBAR and DMA_CROSSBAR modules, see sections: Section 18.4.6.4 IRQ_CROSSBAR Module Functional Description and Section 18.4.6.5 DMA_CROSSBAR Module Functional Description, in Chapter 18 Control Module.\par
IRQ_CROSSBAR \'b9\'d7 DMA_CROSSBAR \'b8\'f0\'b5\'e2\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba \'bc\'bd\'bc\'c7 18.4.6.4 \'c0\'fd\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0. IRQ_CROSSBAR \'b8\'f0\'b5\'e2 \'b1\'e2\'b4\'c9 \'bc\'b3\'b8\'ed \'b9\'d7 18.4.6.5 DMA_CROSSBAR \'b8\'f0\'b5\'e2 \'b1\'e2\'b4\'c9 \'bc\'b3\'b8\'ed, 18 \'c0\'e5 \'c1\'a6\'be\'ee \'b8\'f0\'b5\'e2.\par
\par
For more information about the device interrupt controllers, see Chapter 17 Interrupt Controllers.\par
\'c0\'e5\'c4\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 17 \'c0\'e5 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
NOTE: For a description of the interrupt source, see Section 16.2.5.9, EDMA interrupts.\par
\'c2\'fc\'b0\'ed : \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bc\'d2\'bd\'ba\'bf\'a1 \'b4\'eb\'c7\'d1 \'bc\'b3\'b8\'ed\'c0\'ba 16.2.5.9 \'c0\'fd, EDMA \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.4.1 EDMA Requests to the EDMA Controller\par
16.2.4.1 EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'b4\'eb\'c7\'d1 EDMA \'bf\'e4\'c3\'bb\par
\par
Table 16-89 lists the default DMA sources for the EDMA controller.\par
\'c7\'a5 16-89\'b4\'c2 EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 \'b1\'e2\'ba\'bb DMA \'bc\'d2\'bd\'ba\'b8\'a6 \'b3\'aa\'bf\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
In addition, the EDMA inputs (DMA_EDMA_DREQ_[63:0]) can alternatively be sourced through the associated DMA_CROSSBAR from one of the 256 multiplexed device DMA sources listed in Table 16-6.\par
\'b6\'c7\'c7\'d1 EDMA \'c0\'d4\'b7\'c2 (DMA_EDMA_DREQ_ [63 : 0])\'c0\'ba \'c7\'a5 16-6\'bf\'a1 \'b3\'aa\'bf\'ad\'b5\'c8 256 \'b0\'b3\'c0\'c7 \'b8\'d6\'c6\'bc\'c7\'c3\'b7\'ba\'bc\'ad \'c0\'e5\'c4\'a1 DMA \'bc\'d2\'bd\'ba \'c1\'df \'c7\'cf\'b3\'aa\'bf\'a1\'bc\'ad \'bf\'ac\'b0\'e1\'b5\'c8 DMA_CROSSBAR\'b8\'a6 \'c5\'eb\'c7\'d8 \'bc\'b1\'c5\'c3\'c7\'d2 \'bc\'f6\'b5\'b5 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The CTRL_CORE_DMA_EDMA_DREQ_y_z registers (where y and z are indexes of EDMA input lines) in the Control Module are used to select between the default DMA sources and the multiplexed DMA sources.\par
\'c1\'a6\'be\'ee \'b8\'f0\'b5\'e2\'c0\'c7 CTRL_CORE_DMA_EDMA_DREQ_y_z \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (y \'b9\'d7 z\'b4\'c2 EDMA \'c0\'d4\'b7\'c2 \'b6\'f3\'c0\'ce\'c0\'c7 \'c0\'ce\'b5\'a6\'bd\'ba \'c0\'d3)\'b4\'c2 \'b1\'e2\'ba\'bb DMA \'bc\'d2\'bd\'ba\'bf\'cd \'b4\'d9\'c1\'df\'c8\'ad \'b5\'c8 DMA \'bc\'d2\'bd\'ba\'b8\'a6 \'bc\'b1\'c5\'c3\'c7\'cf\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.2.5 EDMA Controller Functional Description\par
16.2.5 EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'b1\'e2\'b4\'c9 \'bc\'b3\'b8\'ed\par
\par
\par
This chapter discusses the architecture of the EDMA controller.\par
\'c0\'cc \'c0\'e5\'bf\'a1\'bc\'ad\'b4\'c2 EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 \'be\'c6\'c5\'b0\'c5\'d8\'c3\'b3\'bf\'a1 \'b4\'eb\'c7\'d8 \'bc\'b3\'b8\'ed\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.1 Block Diagram\par
16.2.5.1 \'ba\'ed\'b7\'cf \'b4\'d9\'c0\'cc\'be\'ee\'b1\'d7\'b7\'a5.\par
\par
Figure 16-15 shows the functional block diagram of the EDMA controller\par
\'b1\'d7\'b8\'b2 16-15\'b4\'c2 EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 \'b1\'e2\'b4\'c9 \'ba\'ed\'b7\'cf \'b4\'d9\'c0\'cc\'be\'ee\'b1\'d7\'b7\'a5\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
16.2.5.1.1 Third-Party Channel Controller\par
16.2.5.1.1  Third-Party \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\par
\par
The TPCC is the EDMA transfer scheduler responsible for scheduling, arbitrating, and issuing user programmed transfers to the two TPTCs.\par
TPCC\'b4\'c2 \'b5\'ce \'b0\'b3\'c0\'c7 TPTC\'bf\'a1 \'b4\'eb\'c7\'d1 \'bb\'e7\'bf\'eb\'c0\'da \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c0\'fc\'bc\'db\'c0\'bb \'bd\'ba\'c4\'c9\'c1\'d9\'b8\'b5, \'c1\'b6\'c1\'a4 \'b9\'d7 \'b9\'df\'c7\'e0\'c7\'cf\'b4\'c2 EDMA \'c0\'fc\'bc\'db \'bd\'ba\'c4\'c9\'c1\'d9\'b7\'af\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Figure 16-16 shows a functional block diagram of the EDMA channel controller (EDMA_TPCC).\par
\'b1\'d7\'b8\'b2 16-16\'c0\'ba EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af (EDMA_TPCC)\'c0\'c7 \'b1\'e2\'b4\'c9 \'ba\'ed\'b7\'cf \'b4\'d9\'c0\'cc\'be\'ee\'b1\'d7\'b7\'a5\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
The main blocks of the EDMA_TPCC are as follows:\par
EDMA_TPCC\'c0\'c7 \'c1\'d6\'bf\'e4 \'ba\'ed\'b7\'cf\'c0\'ba \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  Parameter RAM (PaRAM): The PaRAM maintains parameter sets for channel and reload parameter sets. The PaRAM must be written with the transfer context for the desired channels and link parameter sets.\par
\bullet  Parameter RAM (PaRAM) : PaRAM\'c0\'ba \'c3\'a4\'b3\'ce \'b9\'d7 \'c0\'e7\'b7\'ce\'b5\'e5 \'c6\'c4\'b6\'f3\'b9\'cc\'c5\'cd \'bc\'bc\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 \'c6\'c4\'b6\'f3\'b9\'cc\'c5\'cd \'bc\'bc\'c6\'ae\'b8\'a6 \'c0\'af\'c1\'f6\'c7\'d5\'b4\'cf\'b4\'d9. PaRAM\'c0\'ba \'bf\'f8\'c7\'cf\'b4\'c2 \'c3\'a4\'b3\'ce \'b9\'d7 \'b8\'b5\'c5\'a9 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'bc\'bc\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'fc\'bc\'db \'c4\'c1\'c5\'d8\'bd\'ba\'c6\'ae\'b7\'ce \'c0\'db\'bc\'ba\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
EDMA_TPCC processes and sets based on a trigger event and submits a transfer request (TR) to the transfer controllers.\par
EDMA_TPCC\'b4\'c2 \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'b1\'e2\'c3\'ca\'b7\'ce \'c3\'b3\'b8\'ae \'b9\'d7 \'bc\'b3\'c1\'a4\'c7\'cf\'b0\'ed \'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2 (TR)\'bf\'a1 \'c1\'a6\'c3\'e2\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  EDMA event and interrupt processing registers: Allows mapping of events to parameter sets, enable/disable events, enable/disable interrupt conditions, and clearing interrupts.\par
\bullet  EDMA \'c0\'cc\'ba\'a5\'c6\'ae \'b9\'d7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c3\'b3\'b8\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd : \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'c1\'fd\'c7\'d5, \'c0\'cc\'ba\'a5\'c6\'ae \'c8\'b0\'bc\'ba\'c8\'ad / \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad, \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c1\'b6\'b0\'c7 \'c8\'b0\'bc\'ba\'c8\'ad / \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad \'b9\'d7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c1\'f6\'bf\'ec\'b1\'e2\'bf\'a1 \'b8\'c5\'c7\'ce \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  Completion detection: The completion detect block detects completion of transfers by the EDMA_TPTCs or slave peripherals.\par
\'bf\'cf\'b7\'e1 \'b0\'cb\'c3\'e2 : \'bf\'cf\'b7\'e1 \'b0\'cb\'c3\'e2 \'ba\'ed\'b7\'cf\'c0\'ba EDMA_TPTCs \'b6\'c7\'b4\'c2 \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'bf\'a1 \'c0\'c7\'c7\'d1 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1\'b8\'a6 \'b0\'cb\'c3\'e2\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The completion of transfers can be used optionally to chain trigger new transfers or to assert interrupts.\par
\'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1\'b4\'c2 \'bb\'f5\'b7\'ce\'bf\'ee \'c0\'fc\'bc\'db\'c0\'bb \'c6\'ae\'b8\'ae\'b0\'c5\'c7\'cf\'b0\'c5\'b3\'aa \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'be\'ee\'bc\'b3 \'bc\'c7\'c7\'cf\'b4\'c2 \'b5\'a5 \'bc\'b1\'c5\'c3\'c0\'fb\'c0\'b8\'b7\'ce \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  Event queues: Event queues form the interface between the event detection logic and the transfer request submission logic.\par
\bullet  \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad : \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'ba \'c0\'cc\'ba\'a5\'c6\'ae \'b0\'a8\'c1\'f6 \'b7\'ce\'c1\'f7\'b0\'fa \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb \'c1\'a6\'c3\'e2 \'b7\'ce\'c1\'f7 \'bb\'e7\'c0\'cc\'c0\'c7 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'b8\'a6 \'b1\'b8\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Memory protection registers: Memory protection registers define the accesses (privilege level and requestor(s)) that are allowed to access the DMA channel shadow region view(s) and regions of PaRAM.\par
\bullet  \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd : \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 DMA \'c3\'a4\'b3\'ce \'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa\'ba\'b8\'b1\'e2 \'b9\'d7 PaRAM \'bf\'b5\'bf\'aa\'bf\'a1 \'be\'d7\'bc\'bc\'bd\'ba \'c7\'d2 \'bc\'f6\'c0\'d6\'b4\'c2 \'be\'d7\'bc\'bc\'bd\'ba (\'b1\'c7\'c7\'d1 \'bc\'f6\'c1\'d8 \'b9\'d7 \'bf\'e4\'c3\'bb\'c0\'da)\'b8\'a6 \'c1\'a4\'c0\'c7\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Other functions include the following:\par
\'b4\'d9\'b8\'a5 \'b1\'e2\'b4\'c9\'c0\'ba \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  Region registers: Region registers allow DMA resources (DMA channels and interrupts) to be assigned to unique regions that different EDMA programmers own (for example, MPU or DSPs).\par
\bullet  \'bf\'b5\'bf\'aa \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd : \'bf\'b5\'bf\'aa \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'b4\'d9\'b8\'a5 EDMA \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b8\'d3\'b0\'a1 \'bc\'d2\'c0\'af\'c7\'cf\'b4\'c2 \'b0\'ed\'c0\'af \'c7\'d1 \'bf\'b5\'bf\'aa (\'bf\'b9 : MPU \'b6\'c7\'b4\'c2 DSP)\'bf\'a1 DMA \'b8\'ae\'bc\'d2\'bd\'ba (DMA \'c3\'a4\'b3\'ce \'b9\'d7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae)\'b8\'a6 \'c7\'d2\'b4\'e7 \'c7\'d2 \'bc\'f6\'c0\'d6\'b0\'d4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Debug registers: Debug registers allow debug visibility by providing registers to read the queue status, controller status, and missed event status.\par
\bullet  \'b5\'f0\'b9\'f6\'b1\'d7 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd : \'b5\'f0\'b9\'f6\'b1\'d7 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'b4\'eb\'b1\'e2\'bf\'ad \'bb\'f3\'c5\'c2, \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'bb\'f3\'c5\'c2 \'b9\'d7 \'b4\'a9\'b6\'f4 \'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae \'bb\'f3\'c5\'c2\'b8\'a6 \'c0\'d0\'b4\'c2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c1\'a6\'b0\'f8\'c7\'cf\'bf\'a9 \'b5\'f0\'b9\'f6\'b1\'d7 \'b0\'a1\'bd\'c3\'bc\'ba\'c0\'bb \'c7\'e3\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPCC includes two channel types: DMA channels (64 channels) and QDMA channels (8 channels).\par
EDMA_TPCC\'b4\'c2 DMA \'c3\'a4\'b3\'ce (64 \'c3\'a4\'b3\'ce)\'b0\'fa QDMA \'c3\'a4\'b3\'ce (8 \'c3\'a4\'b3\'ce)\'c0\'c7 \'b5\'ce \'b0\'a1\'c1\'f6 \'c3\'a4\'b3\'ce \'c0\'af\'c7\'fc\'c0\'bb \'c6\'f7\'c7\'d4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Each channel is associated with a given event queue/transfer controller and with a given PaRAM set.\par
\'b0\'a2 \'c3\'a4\'b3\'ce\'c0\'ba \'c1\'d6\'be\'ee\'c1\'f8 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad / \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'b9\'d7 \'c1\'d6\'be\'ee\'c1\'f8 PaRAM \'bc\'bc\'c6\'ae\'bf\'cd \'bf\'ac\'b0\'fc\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The main difference between a DMA channel and a QDMA channel is the method that the system uses to trigger transfers.\par
DMA \'c3\'a4\'b3\'ce\'b0\'fa QDMA \'c3\'a4\'b3\'ce \'b0\'a3\'c0\'c7 \'c1\'d6\'bf\'e4 \'c2\'f7\'c0\'cc\'c1\'a1\'c0\'ba \'bd\'c3\'bd\'ba\'c5\'db\'c0\'cc \'c0\'fc\'bc\'db\'c0\'bb \'c6\'ae\'b8\'ae\'b0\'c5\'c7\'cf\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Figure 16-16 is a block diagram of the EDMA_TPCC.\par
\'b1\'d7\'b8\'b2 16-16\'c0\'ba EDMA_TPCC\'c0\'c7 \'ba\'ed\'b7\'cf \'b4\'d9\'c0\'cc\'be\'ee\'b1\'d7\'b7\'a5\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPCC supports up to 64 DMA channels and up to 8 QDMA channels.\par
EDMA_TPCC\'b4\'c2 \'c3\'d6\'b4\'eb 64 \'b0\'b3\'c0\'c7 DMA \'c3\'a4\'b3\'ce\'b0\'fa \'c3\'d6\'b4\'eb 8 \'b0\'b3\'c0\'c7 QDMA \'c3\'a4\'b3\'ce\'c0\'bb \'c1\'f6\'bf\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
These channels are identical, except for how they are triggered:\par
\'c0\'cc\'b7\'af\'c7\'d1 \'c3\'a4\'b3\'ce\'c0\'ba \'c6\'ae\'b8\'ae\'b0\'c5\'b5\'c7\'b4\'c2 \'b9\'e6\'b9\'fd\'c0\'bb \'c1\'a6\'bf\'dc\'c7\'cf\'b0\'ed\'b4\'c2 \'b5\'bf\'c0\'cf\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA channels are triggered by external events (such as McSPI modules TX event and McSPI modules RX event) by the event set registers EDMA_TPCC_ESR and EDMA_TPCC_ESRH, or through chaining register EDMA_TPCC_CER.\par
\bullet  DMA \'c3\'a4\'b3\'ce\'c0\'ba \'c0\'cc\'ba\'a5\'c6\'ae \'bc\'bc\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_ESR \'b9\'d7 EDMA_TPCC_ESRH \'b6\'c7\'b4\'c2 \'bf\'ac\'bc\'e2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_CER\'b8\'a6 \'c5\'eb\'c7\'d8 \'bf\'dc\'ba\'ce \'c0\'cc\'ba\'a5\'c6\'ae (\'bf\'b9 : McSPI \'b8\'f0\'b5\'e2 TX \'c0\'cc\'ba\'a5\'c6\'ae \'b9\'d7 McSPI \'b8\'f0\'b5\'e2 RX \'c0\'cc\'ba\'a5\'c6\'ae)\'bf\'a1 \'c0\'c7\'c7\'d8 \'c6\'ae\'b8\'ae\'b0\'c5\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  QDMA channels are triggered automatically (auto-triggered) by the CPU. QDMAs allow a minimum number of linear writes to be issued to the TPCC to force a series of transfers to occur.\par
\bullet  QDMA \'c3\'a4\'b3\'ce\'c0\'ba CPU\'bf\'a1 \'c0\'c7\'c7\'d8 \'c0\'da\'b5\'bf\'c0\'b8\'b7\'ce \'c6\'ae\'b8\'ae\'b0\'c5\'b5\'cb\'b4\'cf\'b4\'d9. QDMA\'b4\'c2 \'c0\'cf\'b7\'c3\'c0\'c7 \'c0\'fc\'bc\'db\'c0\'bb \'b0\'ad\'c1\'a6\'b7\'ce \'bc\'f6\'c7\'e0\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 TPCC\'bf\'a1 \'c3\'d6\'bc\'d2 \'bc\'f6\'c0\'c7 \'bc\'b1\'c7\'fc \'be\'b2\'b1\'e2\'b8\'a6 \'c7\'e3\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The TPCC arbitrates among pending DMA and QDMA events with a fixed [64:1] and [8:1] priority encoder for these events, respectively (a low channel number corresponds to a high priority).\par
TPCC\'b4\'c2 \'c0\'cc\'b7\'af\'c7\'d1 \'c0\'cc\'ba\'a5\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d8 \'b0\'ed\'c1\'a4 \'b5\'c8 [64 : 1] \'b9\'d7 [8 : 1] \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c0\'ce\'c4\'da\'b4\'f5\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce DMA \'b9\'d7 QDMA \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'c1\'df\'c0\'e7\'c7\'d5\'b4\'cf\'b4\'d9 (\'b3\'b7\'c0\'ba \'c3\'a4\'b3\'ce \'b9\'f8\'c8\'a3\'b4\'c2 \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'bf\'a1 \'c7\'d8\'b4\'e7\'c7\'d4).\par
\par
DMA events are always higher priority than QDMA events.\par
DMA \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'c7\'d7\'bb\'f3 QDMA \'c0\'cc\'ba\'a5\'c6\'ae\'ba\'b8\'b4\'d9 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The higher-priority event is placed in the event queue to await submission to the transfer controllers, which occurs at the earliest opportunity.\par
\'bb\'f3\'c0\'a7 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'bf\'a1 \'b9\'e8\'c4\'a1\'b5\'c7\'be\'ee \'b0\'a1\'c0\'e5 \'ba\'fc\'b8\'a5 \'b1\'e2\'c8\'b8\'bf\'a1 \'b9\'df\'bb\'fd\'c7\'cf\'b4\'c2 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'b4\'eb\'c7\'d1 \'c1\'a6\'c3\'e2\'c0\'bb \'b1\'e2\'b4\'d9\'b8\'b3\'b4\'cf\'b4\'d9.\par
\par
Each event queue is serviced in FIFO order, with a maximum of 16 queued events per event queue.\par
\'b0\'a2 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'b4\'c2 FIFO \'bc\'f8\'bc\'ad\'b7\'ce \'c1\'a6\'b0\'f8\'b5\'c7\'b8\'e7 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5 \'b4\'e7 \'c3\'d6\'b4\'eb 16 \'b0\'b3\'c0\'c7 \'c5\'a5 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c1\'a6\'b0\'f8\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
If more than one TPTC is ready to be programmed with a transmission request (TR), the event queues are serviced with fixed priority:\par
\'c7\'cf\'b3\'aa \'c0\'cc\'bb\'f3\'c0\'c7 TPTC\'b0\'a1 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR)\'c0\'b8\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c9 \'c1\'d8\'ba\'f1\'b0\'a1\'b5\'c7\'b8\'e9, \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'b4\'c2 \'b0\'ed\'c1\'a4 \'b5\'c8 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b7\'ce \'bc\'ad\'ba\'f1\'bd\'ba\'b5\'cb\'b4\'cf\'b4\'d9 :\par
\par
Q0 is higher than Q1.\par
Q0\'b4\'c2 Q1\'ba\'b8\'b4\'d9 \'b3\'f4\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
When an event is ready to be queued and the event queue and the TC channel are empty, the event bypasses the event queue and goes directly to the PaRAM processing logic for submission to the appropriate TC.\par
\'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c5\'a5\'bf\'a1 \'b4\'eb\'b1\'e2 \'c7\'d2 \'c1\'d8\'ba\'f1\'b0\'a1\'b5\'c7\'b0\'ed \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'bf\'cd TC \'c3\'a4\'b3\'ce\'c0\'cc \'ba\'f1\'be\'ee \'c0\'d6\'c0\'b8\'b8\'e9 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'b8\'a6 \'bf\'ec\'c8\'b8\'c7\'cf\'bf\'a9 \'c0\'fb\'c0\'fd\'c7\'d1 TC\'bf\'a1 \'c1\'a6\'c3\'e2\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 PaRAM \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'cc \'b7\'ce\'c1\'f7\'c0\'b8\'b7\'ce \'c1\'f7\'c1\'a2\'b0\'a9\'b4\'cf\'b4\'d9.\par
\par
If the transfer request TR bus or PaRAM processing are busy, the bypass path is not used.\par
\'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb TR \'b9\'f6\'bd\'ba \'b6\'c7\'b4\'c2 PaRAM \'c3\'b3\'b8\'ae\'b0\'a1 \'bb\'e7\'bf\'eb\'c1\'df\'c0\'ce \'b0\'e6\'bf\'ec, \'b9\'d9\'c0\'cc \'c6\'d0\'bd\'ba \'b0\'e6\'b7\'ce\'b4\'c2 \'bb\'e7\'bf\'eb\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The bypass is not used to dequeue for a higher-priority event.\par
\'b9\'d9\'c0\'cc \'c6\'d0\'bd\'ba\'b4\'c2 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'c1\'a6\'bf\'dc\'c7\'cf\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Events are extracted from the event queue when the EDMA_TPTC is available for a new TR to be programmed into the EDMA_TPTC (signaled with the empty signal, indicating an empty program register set).\par
EDMA_TPTC\'b0\'a1 \'bb\'f5\'b7\'ce\'bf\'ee TR\'c0\'cc EDMA_TPTC\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'b5\'c7\'b5\'b5\'b7\'cf \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'d2 \'b6\'a7 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'bf\'a1\'bc\'ad \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c3\'df\'c3\'e2\'b5\'cb\'b4\'cf\'b4\'d9 (\'ba\'f1\'be\'ee\'c0\'d6\'b4\'c2 \'bd\'c5\'c8\'a3\'b7\'ce \'c7\'a5\'bd\'c3\'b5\'ca, \'ba\'f1\'be\'ee\'c0\'d6\'b4\'c2 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'bf).\par
\par
As an event is extracted from the event queue, the associated PaRAM entry is processed and submitted to the TPTC as a TR.\par
\'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c3\'df\'c3\'e2\'b5\'c7\'b8\'e9 \'b0\'fc\'b7\'c3 PaRAM \'c7\'d7\'b8\'f1\'c0\'cc \'c3\'b3\'b8\'ae\'b5\'c7\'be\'ee TR\'b7\'ce TPTC\'bf\'a1 \'c1\'a6\'c3\'e2\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The TPCC updates the appropriate counts and addresses in the PaRAM entry in anticipation of the next trigger event for that PaRAM entry.\par
TPCC\'b4\'c2 \'c7\'d8\'b4\'e7 PaRAM \'c7\'d7\'b8\'f1\'bf\'a1 \'b4\'eb\'c7\'d1 \'b4\'d9\'c0\'bd \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'bf\'b9\'bb\'f3\'c7\'cf\'bf\'a9 PaRAM \'c7\'d7\'b8\'f1\'c0\'c7 \'c0\'fb\'c0\'fd\'c7\'d1 \'c4\'ab\'bf\'ee\'c6\'ae\'bf\'cd \'c1\'d6\'bc\'d2\'b8\'a6 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPCC also has an error detection logic that causes an error interrupt generation on various error conditions (for example: missed events EDMA_TPCC_EMR and EDMA_TPCC_EMRH registers, exceeding event queue thresholds in EDMA_TPCC_CCERR register, etc.).\par
EDMA_TPCC\'bf\'a1\'b4\'c2 \'b4\'d9\'be\'e7\'c7\'d1 \'bf\'c0\'b7\'f9 \'c1\'b6\'b0\'c7 (\'bf\'b9 : \'b4\'a9\'b6\'f4 \'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae EDMA_TPCC_EMR \'b9\'d7 EDMA_TPCC_EMRH \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd, EDMA_TPCC_CCERR \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad \'c0\'d3\'b0\'e8 \'b0\'aa \'c3\'ca\'b0\'fa \'b5\'ee)\'bf\'a1\'bc\'ad \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'cf\'b4\'c2 \'bf\'c0\'b7\'f9 \'b0\'a8\'c1\'f6 \'b3\'ed\'b8\'ae\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.1.2 Third-Party Transfer Controller\par
16.2.5.1.2 \'c1\'a6 3 \'c0\'da \'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2\par
\par
The TPTC module is the EDMA transfer engine that generates transfers as programmed in dedicated working registers, using two dedicated master ports: a read-only port and a write-only port.\par
TPTC \'b8\'f0\'b5\'e2\'c0\'ba \'c0\'d0\'b1\'e2 \'c0\'fc\'bf\'eb \'c6\'f7\'c6\'ae\'bf\'cd \'be\'b2\'b1\'e2 \'c0\'fc\'bf\'eb \'c6\'f7\'c6\'ae\'c0\'c7 \'b5\'ce \'c0\'fc\'bf\'eb \'b8\'b6\'bd\'ba\'c5\'cd \'c6\'f7\'c6\'ae\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'c0\'fc\'bf\'eb \'c0\'db\'be\'f7 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c8\'b4\'eb\'b7\'ce \'c0\'fc\'bc\'db\'c0\'bb \'bb\'fd\'bc\'ba\'c7\'cf\'b4\'c2 EDMA \'c0\'fc\'bc\'db \'bf\'a3\'c1\'f8\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Figure 16-17 shows a functional block diagram and of the EDMA transfer controller (EDMA_TPTC) and its connection to the EDMA_TPCC.\par
\'b1\'d7\'b8\'b2 16-17\'c0\'ba \'b1\'e2\'b4\'c9 \'ba\'ed\'b7\'cf \'b4\'d9\'c0\'cc\'be\'ee\'b1\'d7\'b7\'a5\'b0\'fa EDMA \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af (EDMA_TPTC) \'b9\'d7 EDMA_TPCC\'bf\'a1 \'b4\'eb\'c7\'d1 \'bf\'ac\'b0\'e1\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
NOTE: The port data bus width of the instances of the TPTC is fixed at 128 bits.\par
\'c2\'fc\'b0\'ed : TPTC \'c0\'ce\'bd\'ba\'c5\'cf\'bd\'ba\'c0\'c7 \'c6\'f7\'c6\'ae \'b5\'a5\'c0\'cc\'c5\'cd \'b9\'f6\'bd\'ba \'c6\'f8\'c0\'ba 128 \'ba\'f1\'c6\'ae\'b7\'ce \'b0\'ed\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Two instances of the EDMA_TPTC generate concurrent traffic on the L3_MAIN interconnect.\par
EDMA_TPTC\'c0\'c7 \'b5\'ce \'c0\'ce\'bd\'ba\'c5\'cf\'bd\'ba\'b4\'c2 L3_MAIN \'bb\'f3\'c8\'a3 \'bf\'ac\'b0\'e1\'bf\'a1\'bc\'ad \'b5\'bf\'bd\'c3 \'c6\'ae\'b7\'a1\'c7\'c8\'c0\'bb \'bb\'fd\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Each TC controller consists of the following components:\par
\'b0\'a2 TC \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'b4\'d9\'c0\'bd \'b1\'b8\'bc\'ba \'bf\'e4\'bc\'d2\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA Program Register Set: Stores the context for the DMA transfer that is loaded into the active register set when the current active register set completes.\par
\bullet  DMA \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae : \'c7\'f6\'c0\'e7 \'c8\'b0\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b0\'a1 \'bf\'cf\'b7\'e1 \'b5\'c9 \'b6\'a7 \'c8\'b0\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'bf\'a1\'b7\'ce\'b5\'e5\'b5\'c7\'b4\'c2 DMA \'c0\'fc\'bc\'db\'c0\'c7 \'c4\'c1\'c5\'d8\'bd\'ba\'c6\'ae\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The CPU or TPCC programs the Program Register Set, not the active register set.\par
CPU \'b6\'c7\'b4\'c2 TPCC\'b4\'c2 \'c8\'b0\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b0\'a1 \'be\'c6\'b4\'cf\'b6\'f3 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b8\'a6 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
For typical standalone operation, the CPU programs the Program Register while the TC services the Active register set.\par
\'c0\'cf\'b9\'dd\'c0\'fb\'c0\'ce \'b5\'b6\'b8\'b3 \'bd\'c7\'c7\'e0 \'c7\'fc \'c0\'db\'be\'f7\'c0\'c7 \'b0\'e6\'bf\'ec TC\'b4\'c2 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'cf\'b0\'ed TC\'b4\'c2 \'c8\'b0\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b8\'a6 \'bc\'ad\'ba\'f1\'bd\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The Program Register set includes ownership control such that CPU software and the EDMA stay synchronized relative to one another.\par
\'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b4\'c2 CPU \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'bf\'cd EDMA\'b0\'a1 \'bc\'ad\'b7\'ce\'bf\'a1 \'b4\'eb\'c7\'d8 \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'af\'c1\'f6\'b5\'c7\'b5\'b5\'b7\'cf \'bc\'d2\'c0\'af\'b1\'c7 \'c1\'a6\'be\'ee\'b8\'a6 \'c6\'f7\'c7\'d4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Source Active Register Set : Stores the context (src/dst/cnt/etc) for the DMA Transfer Request (TR) in progress in the Read Controller.\par
\bullet  \'bc\'d2\'bd\'ba \'c8\'b0\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae : \'c0\'d0\'b1\'e2 \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1\'bc\'ad \'c1\'f8\'c7\'e0\'c1\'df\'c0\'ce DMA \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR)\'bf\'a1 \'b4\'eb\'c7\'d1 \'c4\'c1\'c5\'d8\'bd\'ba\'c6\'ae (src / dst / cnt / etc)\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Source Active Register Set : Stores the context (src/dst/cnt/etc) for the DMA Transfer Request (TR) in progress in the Read Controller.\par
\bullet  \'bc\'d2\'bd\'ba \'c8\'b0\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae : \'c0\'d0\'b1\'e2 \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1\'bc\'ad \'c1\'f8\'c7\'e0\'c1\'df\'c0\'ce DMA \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR)\'bf\'a1 \'b4\'eb\'c7\'d1 \'c4\'c1\'c5\'d8\'bd\'ba\'c6\'ae (src / dst / cnt / etc)\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The Active register set is split into independent Source and Destination, because the source interconnect controller and the distant interconnect controller operate independently of one another.\par
\'bc\'d2\'bd\'ba \'bb\'f3\'c8\'a3 \'bf\'ac\'b0\'e1 \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'cd \'b8\'d5 \'bb\'f3\'c8\'a3 \'bf\'ac\'b0\'e1 \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b0\'a1 \'bc\'ad\'b7\'ce \'b5\'b6\'b8\'b3\'c0\'fb\'c0\'b8\'b7\'ce \'c0\'db\'b5\'bf\'c7\'cf\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'c8\'b0\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b4\'c2 \'b5\'b6\'b8\'b3 \'bc\'d2\'bd\'ba\'bf\'cd \'b4\'eb\'bb\'f3\'c0\'b8\'b7\'ce \'ba\'d0\'b8\'ae\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  Destination FIFO Register Set: Stores the context (src/dst/cnt/etc) for the DMA Transfer Request (TR) in progress, or pending, in the Write Controller.\par
\bullet  Destination FIFO Register Set : \'c1\'f8\'c7\'e0\'c1\'df\'c0\'ce DMA \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR) \'b6\'c7\'b4\'c2 \'be\'b2\'b1\'e2 \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'c4\'c1\'c5\'d8\'bd\'ba\'c6\'ae (src / dst / cnt / etc)\'b8\'a6 \'c0\'fa\'c0\'e5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The pending register must allow the source controller to begin processing a new TR while the distant register set processes the previous TR.\par
\'b0\'e8\'b7\'f9\'c1\'df\'c0\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'bf\'f8\'b0\'dd \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b0\'a1 \'c0\'cc\'c0\'fc TR\'c0\'bb \'c3\'b3\'b8\'ae\'c7\'cf\'b4\'c2 \'b5\'bf\'be\'c8 \'bc\'d2\'bd\'ba \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b0\'a1 \'bb\'f5\'b7\'ce\'bf\'ee TR\'c0\'bb \'c3\'b3\'b8\'ae\'c7\'cf\'b5\'b5\'b7\'cf \'c7\'e3\'bf\'eb\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Channel FIFO: Temporary holding buffer for in-flight data.\par
\bullet  \'c3\'a4\'b3\'ce FIFO : \'b1\'e2\'b3\'bb \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'d3\'bd\'c3\'b7\'ce \'ba\'b8\'b0\'fc\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The read return data of the source peripheral is stored in the Data FIFO, and then is written to the destination peripheral by the write command/data bus.\par
\'bc\'d2\'bd\'ba \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'c0\'c7 \'c6\'c7\'b5\'b6 \'b8\'ae\'c5\'cf \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd FIFO\'bf\'a1 \'c0\'fa\'c0\'e5\'b5\'c7\'b0\'ed, \'b1\'d7 \'c8\'c4 \'b1\'e2\'b7\'cf \'b8\'ed\'b7\'c9 / \'b5\'a5\'c0\'cc\'c5\'cd \'b9\'f6\'bd\'ba\'bf\'a1 \'c0\'c7\'c7\'d8 \'b8\'f1\'c0\'fb\'c1\'f6 \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'bf\'a1 \'b1\'e2\'b7\'cf\'b5\'c8\'b4\'d9.\par
\par
\bullet  Read Controller/Interconnect Read Interface: The Interconnect read interface issues optimally sized read commands to the source peripheral, based on a burst size of 128 bytes and available landing space in the channel FIFO.\par
\bullet  \'c0\'d0\'b1\'e2 \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af / \'c0\'ce\'c5\'cd\'c4\'bf\'b3\'d8\'c6\'ae \'c0\'d0\'b1\'e2 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba : \'c0\'ce\'c5\'cd\'c4\'bf\'b3\'d8\'c6\'ae \'c0\'d0\'b1\'e2 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'b4\'c2 128 \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'c7 \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2\'bf\'cd \'c3\'a4\'b3\'ce FIFO\'c0\'c7 \'b0\'a1\'bf\'eb \'b7\'a3\'b5\'f9 \'b0\'f8\'b0\'a3\'bf\'a1 \'b5\'fb\'b6\'f3 \'c3\'d6\'c0\'fb\'c0\'c7 \'c5\'a9\'b1\'e2\'c0\'c7 \'c0\'d0\'b1\'e2 \'b8\'ed\'b7\'c9\'c0\'bb \'bc\'d2\'bd\'ba \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'b7\'ce \'b9\'df\'c7\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Write controller/Interconnect Write interface: The local interconnect write interface issues optimally sized write commands to the destination peripheral, based on a burst size of 128 bytes and available data in the channel FIFO.\par
\bullet  \'be\'b2\'b1\'e2 \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af / \'bb\'f3\'c8\'a3 \'bf\'ac\'b0\'e1 \'be\'b2\'b1\'e2 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba : \'b7\'ce\'c4\'c3 \'bb\'f3\'c8\'a3 \'bf\'ac\'b0\'e1 \'be\'b2\'b1\'e2 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'b4\'c2 128 \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'c7 \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2\'bf\'cd \'c3\'a4\'b3\'ce FIFO\'bf\'a1 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'d1 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'b1\'e2\'b9\'dd\'c0\'b8\'b7\'ce \'b4\'eb\'bb\'f3 \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'bf\'a1 \'c3\'d6\'c0\'fb \'c5\'a9\'b1\'e2\'c0\'c7 \'be\'b2\'b1\'e2 \'b8\'ed\'b7\'c9\'c0\'bb \'bd\'c7\'c7\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Completion interface: sends completion codes to the EDMA_TPCC when a transfer completes and generates interrupts and chained events in the TPCC module.\par
\bullet  \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba : \'c0\'fc\'bc\'db\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'b0\'ed TPCC \'b8\'f0\'b5\'e2\'bf\'a1\'bc\'ad \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'b9\'d7 \'bf\'ac\'b0\'e1 \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba \'c7\'d2 \'b6\'a7 \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b8\'a6 EDMA_TPCC\'b7\'ce \'c0\'fc\'bc\'db\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Configuration port: Slave interface that provides read/write access to program registers and read access to all memory-mapped TPTC registers.\par
\bullet  \'b1\'b8\'bc\'ba \'c6\'f7\'c6\'ae : \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'be\'d7\'bc\'bc\'bd\'ba\'bf\'cd \'b8\'f0\'b5\'e7 \'b8\'de\'b8\'f0\'b8\'ae \'b8\'ca\'c7\'ce \'b5\'c8 TPTC \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'d0\'b1\'e2 \'be\'d7\'bc\'bc\'bd\'ba\'b8\'a6 \'c1\'a6\'b0\'f8\'c7\'cf\'b4\'c2 \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
When one EDMA_TPTC module is idle and receive its first TR, DMA program register set receives the TR, where it transitions to the DMA source active set and the destination FIFO register set immediately.\par
\'c7\'cf\'b3\'aa\'c0\'c7 EDMA_TPTC \'b8\'f0\'b5\'e2\'c0\'cc \'c0\'af\'c8\'de \'bb\'f3\'c5\'c2\'c0\'cc\'b0\'ed \'c3\'b9 \'b9\'f8\'c2\'b0 TR\'c0\'bb \'bc\'f6\'bd\'c5\'c7\'cf\'b8\'e9 DMA \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b4\'c2 TR\'c0\'bb \'bc\'f6\'bd\'c5\'c7\'cf\'bf\'a9 DMA \'bc\'d2\'bd\'ba \'c8\'b0\'bc\'ba \'bc\'bc\'c6\'ae\'b7\'ce \'c0\'fc\'c8\'af\'b5\'c7\'b0\'ed \'b4\'eb\'bb\'f3 FIFO \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b0\'a1 \'c1\'ef\'bd\'c3 \'bc\'b3\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The second TR (if pending from EDMA_TPCC) is loaded into the DMA program set, ensuring it can start as soon as possible when the active transfer completes.\par
\'b5\'ce \'b9\'f8\'c2\'b0 TR (EDMA_TPCC\'bf\'a1\'bc\'ad \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'b0\'e6\'bf\'ec)\'c0\'ba DMA \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'bc\'bc\'c6\'ae\'b7\'ce\'b7\'ce\'b5\'e5\'b5\'c7\'be\'ee \'c8\'b0\'bc\'ba \'c0\'fc\'bc\'db\'c0\'cc \'bf\'cf\'b7\'e1 \'b5\'c9 \'b6\'a7 \'b0\'a1\'b4\'c9\'c7\'d1 \'c7\'d1 \'bb\'a1\'b8\'ae \'bd\'c3\'c0\'db\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
As soon as the current active set is exhausted, the TR is loaded from the DMA program register set into the DMA source active register set as well as to the appropriate entry in the destination FIFO register set.\par
\'c7\'f6\'c0\'e7 \'c8\'b0\'bc\'ba \'bc\'bc\'c6\'ae\'b0\'a1 \'b0\'ed\'b0\'a5 \'b5\'c7 \'c0\'da\'b8\'b6\'c0\'da, TR\'c0\'ba DMA \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b7\'ce\'ba\'ce\'c5\'cd DMA \'bc\'d2\'bd\'ba \'c8\'b0\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'bb\'d3\'b8\'b8 \'be\'c6\'b4\'cf\'b6\'f3 \'b8\'f1\'c0\'fb\'c1\'f6 FIFO \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'c0\'c7 \'c0\'fb\'c0\'fd\'c7\'d1 \'bf\'a3\'c6\'ae\'b8\'ae\'b7\'ce \'b7\'ce\'b5\'f9\'b5\'c8\'b4\'d9.\par
\par
The read controller issues read commands controlled by the rules of command fragmentation and optimization.\par
\'c0\'d0\'b1\'e2 \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'b8\'ed\'b7\'c9 \'c1\'b6\'b0\'a2\'c8\'ad \'b9\'d7 \'c3\'d6\'c0\'fb\'c8\'ad \'b1\'d4\'c4\'a2\'bf\'a1 \'b5\'fb\'b6\'f3 \'c1\'a6\'be\'ee\'b5\'c7\'b4\'c2 \'c0\'d0\'b1\'e2 \'b8\'ed\'b7\'c9\'c0\'bb \'b3\'bb \'ba\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
These are issued only when the data FIFO has space available for the data read.\par
\'c0\'cc\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd FIFO\'bf\'a1 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'d0\'b1\'e2\'bf\'a1 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'d1 \'b0\'f8\'b0\'a3\'c0\'cc\'c0\'d6\'b4\'c2 \'b0\'e6\'bf\'ec\'bf\'a1\'b8\'b8 \'b9\'df\'b1\'de\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
When sufficient data is in the data FIFO, the write controller starts issuing a write command again following the rules for command fragmentation and optimization.\par
\'c3\'e6\'ba\'d0\'c7\'d1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'b5\'a5\'c0\'cc\'c5\'cd FIFO\'bf\'a1 \'c0\'d6\'c0\'b8\'b8\'e9 \'be\'b2\'b1\'e2 \'c1\'a6\'be\'ee\'b1\'e2\'b4\'c2 \'b8\'ed\'b7\'c9 \'ba\'d0\'c7\'d2 \'b9\'d7 \'c3\'d6\'c0\'fb\'c8\'ad\'bf\'a1 \'b4\'eb\'c7\'d1 \'b1\'d4\'c4\'a2\'bf\'a1 \'b5\'fb\'b6\'f3 \'b4\'d9\'bd\'c3 \'be\'b2\'b1\'e2 \'b8\'ed\'b7\'c9\'c0\'bb \'b9\'df\'c7\'e0\'c7\'cf\'b1\'e2 \'bd\'c3\'c0\'db\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Depending on the number of entries, the read controller can process up to two or four transfer requests ahead of the destination subject to the amount of free data FIFO.\par
\'c7\'d7\'b8\'f1 \'bc\'f6\'bf\'a1 \'b5\'fb\'b6\'f3 \'c0\'d0\'b1\'e2 \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'b4\'eb\'bb\'f3 \'b5\'a5\'c0\'cc\'c5\'cd\'ba\'b8\'b4\'d9 \'c3\'d6\'b4\'eb 2 ~ 4 \'b0\'b3\'c0\'c7 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'bb \'c3\'b3\'b8\'ae \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.2 Types of EDMA controller Transfers\par
16.2.5.2 EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'c0\'fc\'bc\'db \'c0\'af\'c7\'fc\par
\par
An EDMA transfer is always defined in terms of three dimensions.\par
EDMA \'c0\'fc\'bc\'db\'c0\'ba \'c7\'d7\'bb\'f3 3 \'c2\'f7\'bf\'f8\'c0\'b8\'b7\'ce \'c1\'a4\'c0\'c7\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Figure 16-18 shows the three dimensions used by EDMA controller transfers.\par
\'b1\'d7\'b8\'b2 16-18\'c0\'ba EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'c0\'fc\'bc\'db\'bf\'a1 \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 \'bc\'bc \'b0\'a1\'c1\'f6 \'c2\'f7\'bf\'f8\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
These three dimensions are defined as:\par
\'c0\'cc \'bc\'bc \'b0\'a1\'c1\'f6 \'c2\'f7\'bf\'f8\'c0\'ba \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'cc \'c1\'a4\'c0\'c7\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  1st Dimension or Array (A): The 1st dimension in a transfer consists of EDMA_TPCC_ABCNT_n[15:0] ACNT contiguous bytes.\par
\bullet  1 \'c2\'f7\'bf\'f8 \'b6\'c7\'b4\'c2 \'b9\'e8\'bf\'ad (A) : \'c0\'fc\'bc\'db\'c0\'c7 \'c3\'b9 \'b9\'f8\'c2\'b0 \'c2\'f7\'bf\'f8\'c0\'ba EDMA_TPCC_ABCNT_n [15 : 0] ACNT \'bf\'ac\'bc\'d3 \'b9\'d9\'c0\'cc\'c6\'ae\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  2nd Dimension or Frame (B): The 2nd dimension in a transfer consists of EDMA_TPCC_ABCNT_n[31:16] BCNT arrays of ACNT bytes.\par
\bullet  2 \'c2\'f7\'bf\'f8 \'b6\'c7\'b4\'c2 \'c7\'c1\'b7\'b9\'c0\'d3 (B) : \'c0\'fc\'bc\'db\'c0\'c7 \'b5\'ce \'b9\'f8\'c2\'b0 \'c2\'f7\'bf\'f8\'c0\'ba ACNT \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'c7 EDMA_TPCC_ABCNT_n [31:16] BCNT \'b9\'e8\'bf\'ad\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Each array transfer in the 2nd dimension is separated from each other by an index programmed using bit-fields EDMA_TPCC_BIDX_n[15:0] SBIDX or EDMA_TPCC_BIDX_n[31:16] DBIDX.\par
2 \'c2\'f7\'bf\'f8\'c0\'c7 \'b0\'a2 \'b9\'e8\'bf\'ad \'c0\'fc\'bc\'db\'c0\'ba \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5 EDMA_TPCC_BIDX_n [15 : 0] SBIDX \'b6\'c7\'b4\'c2 EDMA_TPCC_BIDX_n [31:16] DBIDX\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c8 \'c0\'ce\'b5\'a6\'bd\'ba\'b7\'ce \'bc\'ad\'b7\'ce \'b1\'b8\'ba\'d0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  3rd Dimension or Block (C): The 3rd dimension in a transfer consists of CCNT frames of BCNT arrays of ACNT bytes.\par
\bullet  3 \'c2\'f7\'bf\'f8 \'b6\'c7\'b4\'c2 \'ba\'ed\'b7\'cf (C) : \'c0\'fc\'bc\'db\'c0\'c7 3 \'c2\'f7\'bf\'f8\'c0\'ba ACNT \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'c7 BCNT \'b9\'e8\'bf\'ad\'c0\'c7 CCNT \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'b8\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The Count for 3rd Dimension is defined in register EDMA_TPCC_CCNT_n[15:0] CCNT.\par
Count for Third Dimension\'c0\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_CCNT_n [15 : 0] CCNT\'bf\'a1 \'c1\'a4\'c0\'c7\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Each transfer in the 3rd dimension is separated from the previous by an index programmed using EDMA_TPCC_CIDX_n[15:0] SCIDX or EDMA_TPCC_CIDX_n[31:16] DCIDX.\par
3 \'c2\'f7\'bf\'f8\'bf\'a1\'bc\'ad\'c0\'c7 \'b0\'a2 \'c0\'fc\'bc\'db\'c0\'ba EDMA_TPCC_CIDX_n [15 : 0] SCIDX \'b6\'c7\'b4\'c2 EDMA_TPCC_CIDX_n [31:16] DCIDX\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c8 \'bb\'f6\'c0\'ce\'bf\'a1 \'c0\'c7\'c7\'d8 \'c0\'cc\'c0\'fc\'b0\'fa \'ba\'d0\'b8\'ae\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
NOTE: The reference point for the index depends on the synchronization type.\par
\'c2\'fc\'b0\'ed : \'c0\'ce\'b5\'a6\'bd\'ba\'c0\'c7 \'c2\'fc\'c1\'b6 \'c1\'f6\'c1\'a1\'c0\'ba \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'af\'c7\'fc\'bf\'a1 \'b5\'fb\'b6\'f3 \'b4\'d9\'b8\'a8\'b4\'cf\'b4\'d9.\par
\par
The amount of data transferred upon receipt of a trigger/synchronization event is controlled by the synchronization types (EDMA_TPCC_OPT_n[2] SYNCDIM bit).\par
\'c6\'ae\'b8\'ae\'b0\'c5 / \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'cc\'ba\'a5\'c6\'ae \'bc\'f6\'bd\'c5\'bd\'c3 \'c0\'fc\'bc\'db\'b5\'c7\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'be\'e7\'c0\'ba \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'af\'c7\'fc (EDMA_TPCC_OPT_n [2] SYNCDIM \'ba\'f1\'c6\'ae)\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'a6\'be\'ee\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
For these three dimensions, only two synchronization types are supported:\par
\'c0\'cc \'bc\'bc \'b0\'a1\'c1\'f6 \'c2\'f7\'bf\'f8\'c0\'c7 \'b0\'e6\'bf\'ec \'b5\'ce \'b0\'a1\'c1\'f6 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'af\'c7\'fc \'b8\'b8 \'c1\'f6\'bf\'f8\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 A-synchronized transfers and ABsynchronized transfers.\par
  A- \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db \'b9\'d7 AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db.\par
\par
16.2.5.2.1 A-Synchronized Transfers\par
16.2.5.2.1 A \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\par
\par
In an A-synchronized transfer, each EDMA sync event initiates the transfer of the 1st dimension of EDMA_TPCC_ABCNT_n[15:0] ACNT bytes, or one array of ACNT bytes.\par
A- \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'bf\'a1\'bc\'ad \'b0\'a2 EDMA \'b5\'bf\'b1\'e2 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 EDMA_TPCC_ABCNT_n [15 : 0] ACNT \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'c7 \'c3\'b9 \'b9\'f8\'c2\'b0 \'c2\'f7\'bf\'f8 \'b6\'c7\'b4\'c2 ACNT \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'c7 \'c7\'d1 \'b9\'e8\'bf\'ad \'c0\'fc\'bc\'db\'c0\'bb \'bd\'c3\'c0\'db\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
 Each event/TR packet conveys the transfer information for one array only.\par
  \'b0\'a2 \'c0\'cc\'ba\'a5\'c6\'ae / TR \'c6\'d0\'c5\'b6\'c0\'ba \'c7\'cf\'b3\'aa\'c0\'c7 \'be\'ee\'b7\'b9\'c0\'cc\'bf\'a1 \'b4\'eb\'c7\'d8\'bc\'ad\'b8\'b8 \'c0\'fc\'bc\'db \'c1\'a4\'ba\'b8\'b8\'a6 \'c0\'fc\'b4\'de\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Thus, BCNT \'a1\'bf CCNT events are needed to completely service a PaRAM set.\par
\'b5\'fb\'b6\'f3\'bc\'ad PaRAM \'bc\'bc\'c6\'ae\'b8\'a6 \'bf\'cf\'c0\'fc\'c8\'f7 \'bc\'ad\'ba\'f1\'bd\'ba\'c7\'cf\'b7\'c1\'b8\'e9 BCNT \'a1\'bf CCNT \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c7\'ca\'bf\'e4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Arrays are always separated by EDMA_TPCC_BIDX_n[15:0]SBIDX and EDMA_TPCC_BIDX_n[31:16] DBIDX, as shown in Figure 16-19, where the start address of Array N is equal to the start address of Array N \endash  1 plus source (SRC) or destination (DST) in EDMA_TPCC_BIDX_n register.\par
\'b9\'e8\'bf\'ad\'c0\'ba \'c7\'d7\'bb\'f3 \'b1\'d7\'b8\'b2 16-19\'bf\'a1\'bc\'ad\'bf\'cd \'b0\'b0\'c0\'cc EDMA_TPCC_BIDX_n [15 : 0] SBIDX \'b9\'d7 EDMA_TPCC_BIDX_n [31:16] DBIDX\'b7\'ce \'b1\'b8\'ba\'d0\'b5\'cb\'b4\'cf\'b4\'d9. \'bf\'a9\'b1\'e2\'bc\'ad \'b9\'e8\'bf\'ad N\'c0\'c7 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'b4\'c2 Array N - 1\'c0\'c7 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2 + \'bc\'d2\'bd\'ba SRC) \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3 (DST)\'c0\'bb EDMA_TPCC_BIDX_n \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c0\'fa\'c0\'e5\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
Frames are always separated by EDMA_TPCC_CIDX_n[15:0] SCIDX and EDMA_TPCC_CIDX_n[31:16] DCIDX.\par
\'c7\'c1\'b7\'b9\'c0\'d3\'c0\'ba \'c7\'d7\'bb\'f3 EDMA_TPCC_CIDX_n [15 : 0] SCIDX \'b9\'d7 EDMA_TPCC_CIDX_n [31:16] DCIDX\'b7\'ce \'b1\'b8\'ba\'d0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
For A-synchronized transfers, after the frame is exhausted, the address is updated by adding SRCCIDX/DSTCIDX to the beginning address of the last array in the frame.\par
A \'b5\'bf\'b1\'e2\'bd\'c4 \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'cc \'b0\'ed\'b0\'a5 \'b5\'c8 \'c8\'c4 \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'b9\'e8\'bf\'ad\'c0\'c7 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'bf\'a1 SRCCIDX / DSTCIDX\'b8\'a6 \'c3\'df\'b0\'a1\'c7\'cf\'bf\'a9 \'c1\'d6\'bc\'d2\'b0\'a1 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 As in Figure 16-19, SRCCIDX / DSTCIDX is the difference between the start of Frame 0 Array 3 to the start of Frame 1 Array 0.\par
  \'b1\'d7\'b8\'b2 16-19\'bf\'a1\'bc\'ad\'bf\'cd \'b0\'b0\'c0\'cc SRCCIDX / DSTCIDX\'b4\'c2 \'c7\'c1\'b7\'b9\'c0\'d3 0 \'b9\'e8\'bf\'ad 3\'c0\'c7 \'bd\'c3\'c0\'db\'b0\'fa \'c7\'c1\'b7\'b9\'c0\'d3 1 \'b9\'e8\'bf\'ad 0\'c0\'c7 \'bd\'c3\'c0\'db \'bb\'e7\'c0\'cc\'c0\'c7 \'c2\'f7\'c0\'cc\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Figure 16-19 shows an A-synchronized transfer of 3 (CCNT) frames of 4 (BCNT) arrays of n (ACNT) bytes.\par
\'b1\'d7\'b8\'b2 16-19\'b4\'c2 3 (CCNT) \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 n (ACNT) \'b9\'d9\'c0\'cc\'c6\'ae 4 (BCNT) \'b9\'e8\'bf\'ad\'c0\'c7 A- \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
In this example, a total of 12 sync events (BCNT \'a1\'bf CCNT) exhaust a PaRAM set.\par
\'c0\'cc \'bf\'b9\'bf\'a1\'bc\'ad\'b4\'c2 \'c3\'d1 12 \'b0\'b3\'c0\'c7 \'b5\'bf\'b1\'e2 \'c0\'cc\'ba\'a5\'c6\'ae (BCNT \'a1\'bf CCNT)\'b0\'a1 PaRAM \'bc\'bc\'c6\'ae\'b8\'a6 \'bc\'d2\'b8\'f0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
See Figure 16-19 for details on parameter set updates.\par
\'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'bc\'bc\'c6\'ae \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba \'b1\'d7\'b8\'b2 16-19\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.2.2 AB-Synchronized Transfers\par
16.2.5.2.2 AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\par
\par
In a AB-synchronized transfer, each EDMA sync event initiates the transfer of 2 dimensions or one frame.\par
AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'bf\'a1\'bc\'ad \'b0\'a2 EDMA \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 2 \'c2\'f7\'bf\'f8 \'b6\'c7\'b4\'c2 \'c7\'cf\'b3\'aa\'c0\'c7 \'c7\'c1\'b7\'b9\'c0\'d3 \'c0\'fc\'bc\'db\'c0\'bb \'bd\'c3\'c0\'db\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Each event/TR packet conveys information for one entire frame of BCNT_n arrays of ACNT_n bytes.\par
\'b0\'a2 \'c0\'cc\'ba\'a5\'c6\'ae / TR \'c6\'d0\'c5\'b6\'c0\'ba ACNT_n \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'c7 BCNT_n \'be\'ee\'b7\'b9\'c0\'cc\'c0\'c7 \'c0\'fc\'c3\'bc \'c7\'c1\'b7\'b9\'c0\'d3\'bf\'a1 \'b4\'eb\'c7\'d1 \'c1\'a4\'ba\'b8\'b8\'a6 \'c0\'fc\'b4\'de\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Thus, EDMA_TPCC_CCNT_n events are needed to completely service a PaRAM set.\par
\'b5\'fb\'b6\'f3\'bc\'ad, PaRAM \'bc\'bc\'c6\'ae\'b8\'a6 \'bf\'cf\'c0\'fc\'c8\'f7 \'bc\'ad\'ba\'f1\'bd\'ba\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8\'bc\'ad\'b4\'c2 EDMA_TPCC_CCNT_n \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c7\'ca\'bf\'e4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Arrays are always separated by EDMA_TPCC_BIDX_n[15:0] SBIDX and EDMA_TPCC_BIDX_n[31:16] DBIDX as shown in Figure 16-20.\par
\'b9\'e8\'bf\'ad\'c0\'ba \'b1\'d7\'b8\'b2 16-20\'bf\'a1\'bc\'ad\'bf\'cd \'b0\'b0\'c0\'cc \'c7\'d7\'bb\'f3 EDMA_TPCC_BIDX_n [15 : 0] SBIDX \'b9\'d7 EDMA_TPCC_BIDX_n [31:16] DBIDX\'b7\'ce \'b1\'b8\'ba\'d0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Frames are always separated by SRCCIDX and DSTCIDX.\par
\'c7\'c1\'b7\'b9\'c0\'d3\'c0\'ba \'c7\'d7\'bb\'f3 SRCCIDX \'b9\'d7 DSTCIDX\'b7\'ce \'b1\'b8\'ba\'d0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Note that for AB-synchronized transfers, after a TR for the frame is submitted, the address update is to add EDMA_TPCC_CIDX_n[15:0] SCIDX / EDMA_TPCC_CIDX_n[31:16] DCIDX to the beginning address of the beginning array in the frame.\par
AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec \'c7\'c1\'b7\'b9\'c0\'d3\'bf\'a1 \'b4\'eb\'c7\'d1 TR\'c0\'cc \'c1\'a6\'c3\'e2 \'b5\'c8 \'c8\'c4 \'c1\'d6\'bc\'d2 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b4\'c2 \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'bd\'c3\'c0\'db \'b9\'e8\'bf\'ad\'c0\'c7 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'bf\'a1 EDMA_TPCC_CIDX_n [15 : 0] SCIDX / EDMA_TPCC_CIDX_n [31:16] DCIDX\'b8\'a6 \'c3\'df\'b0\'a1\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
This is different from A-synchronized transfers where the address is updated by adding SRCCIDX/DSTCIDX to the start address of the last array in the frame.\par
\'c0\'cc\'b0\'cd\'c0\'ba \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'b9\'e8\'bf\'ad\'c0\'c7 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'bf\'a1 SRCCIDX / DSTCIDX\'b8\'a6 \'c3\'df\'b0\'a1\'c7\'cf\'bf\'a9 \'c1\'d6\'bc\'d2\'b0\'a1 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b5\'c7\'b4\'c2 A- \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'b0\'fa \'b4\'d9\'b8\'a8\'b4\'cf\'b4\'d9.\par
\par
See Section 16.2.5.3.6 Parameter Set Updates for details on parameter set updates.\par
\'c6\'c4\'b6\'f3\'b9\'cc\'c5\'cd \'bc\'bc\'c6\'ae \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba \'bc\'bd\'bc\'c7 16.2.5.3.6 \'c6\'c4\'b6\'f3\'b9\'cc\'c5\'cd \'bc\'bc\'c6\'ae \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
Figure 16-20 shows an AB-synchronized transfer of 3 (CCNT) frames of 4 (BCNT) arrays of n (ACNT) bytes.\par
\'b1\'d7\'b8\'b2 16-20\'c0\'ba n (ACNT) \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'c7 4 (BCNT) \'b9\'e8\'bf\'ad\'c0\'c7 3 (CCNT) \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
In this example, a total of 3 sync events (CCNT) exhaust a PaRAM set;\par
\'c0\'cc \'bf\'b9\'bf\'a1\'bc\'ad\'b4\'c2 \'c3\'d1 3 \'b0\'b3\'c0\'c7 \'b5\'bf\'b1\'e2 \'c0\'cc\'ba\'a5\'c6\'ae (CCNT)\'b0\'a1 PaRAM \'bc\'bc\'c6\'ae\'b8\'a6 \'bc\'d2\'b8\'f0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
that is, a total of 3 transfers of 4 arrays each completes the transfer.\par
\'c1\'ef, \'c3\'d1 4 \'b0\'b3\'c0\'c7 \'be\'ee\'b7\'b9\'c0\'cc\'b8\'a6 \'c3\'d1 3 \'c8\'b8 \'c0\'fc\'bc\'db\'c7\'cf\'b8\'e9 \'c0\'fc\'bc\'db\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
NOTE: ABC-synchronized transfers are not directly supported.\par
\'c2\'fc\'b0\'ed : ABC \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'ba \'c1\'f7\'c1\'a2 \'c1\'f6\'bf\'f8\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
It can be logically achieved by chaining between multiple AB-synchronized transfers.\par
\'bf\'a9\'b7\'af \'b0\'b3\'c0\'c7 AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'b0\'a3\'bf\'a1 \'c3\'bc\'c0\'ce\'c0\'bb \'bf\'ac\'b0\'e1\'c7\'cf\'bf\'a9 \'b3\'ed\'b8\'ae\'c0\'fb\'c0\'b8\'b7\'ce \'b4\'de\'bc\'ba \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
NOTE: VCP does not support Const/FIFO mode DMA transfers. The EDMA should be configured for AB-Synchronized transfer with ACNT = 8, BCNT = number of elements.\par
\'c2\'fc\'b0\'ed : VCP\'b4\'c2 Const / FIFO \'b8\'f0\'b5\'e5 DMA \'c0\'fc\'bc\'db\'c0\'bb \'c1\'f6\'bf\'f8\'c7\'cf\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9. EDMA\'b4\'c2 ACNT = 8, BCNT = \'bf\'e4\'bc\'d2 \'bc\'f6\'c0\'c7 AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'bb \'c0\'a7\'c7\'d8 \'b1\'b8\'bc\'ba\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.3 Parameter RAM (PaRAM)\par
16.2.5.3 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 RAM (PaRAM)\par
\par
The EDMA controller is a RAM-based architecture.\par
EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 RAM \'b1\'e2\'b9\'dd \'be\'c6\'c5\'b0\'c5\'d8\'c3\'b3\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
 The transfer context (source/destination addresses, count, indexes, etc.) for DMA or QDMA channels is programmed in a parameter RAM table in EDMA_TPCC.\par
  DMA \'b6\'c7\'b4\'c2 QDMA \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'fc\'bc\'db \'c4\'c1\'c5\'d8\'bd\'ba\'c6\'ae (\'bc\'d2\'bd\'ba / \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2, \'c4\'ab\'bf\'ee\'c6\'ae, \'c0\'ce\'b5\'a6\'bd\'ba \'b5\'ee)\'b4\'c2 EDMA_TPCC\'c0\'c7 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 RAM \'c5\'d7\'c0\'cc\'ba\'ed\'bf\'a1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The PaRAM table is segmented into multiple PaRAM sets.\par
PaRAM \'c5\'d7\'c0\'cc\'ba\'ed\'c0\'ba \'bf\'a9\'b7\'af PaRAM \'bc\'bc\'c6\'ae\'b7\'ce \'ba\'d0\'c7\'d2\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Each PaRAM set includes eight four-byte PaRAM set entries (32-bytes total per PaRAM set), which includes typical DMA transfer parameters such as source address, destination address, transfer counts, indexes, options, etc.\par
\'b0\'a2 PaRAM \'bc\'bc\'c6\'ae\'bf\'a1\'b4\'c2 8 \'b0\'b3\'c0\'c7 4 \'b9\'d9\'c0\'cc\'c6\'ae PaRAM \'bc\'bc\'c6\'ae \'c7\'d7\'b8\'f1 (PaRAM \'bc\'bc\'c6\'ae \'b4\'e7 \'c3\'d1 32 \'b9\'d9\'c0\'cc\'c6\'ae)\'c0\'cc \'c6\'f7\'c7\'d4\'b5\'c7\'b8\'e7, \'bf\'a9\'b1\'e2\'bf\'a1\'b4\'c2 \'bc\'d2\'bd\'ba \'c1\'d6\'bc\'d2, \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2, \'c0\'fc\'bc\'db \'c8\'bd\'bc\'f6, \'bb\'f6\'c0\'ce, \'bf\'c9\'bc\'c7 \'b5\'ee\'b0\'fa \'b0\'b0\'c0\'ba \'c0\'cf\'b9\'dd\'c0\'fb\'c0\'ce DMA \'c0\'fc\'bc\'db \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b0\'a1 \'c6\'f7\'c7\'d4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The PaRAM structure supports flexible ping-pong, circular buffering, channel chaining, and auto-reloading (linking)..\par
PaRAM \'b1\'b8\'c1\'b6\'b4\'c2 \'c0\'af\'bf\'ac\'c7\'d1 \'c5\'b9\'b1\'b8, \'bf\'f8\'c7\'fc \'b9\'f6\'c6\'db\'b8\'b5, \'c3\'a4\'b3\'ce \'c3\'bc\'c0\'ce \'b9\'d7 \'c0\'da\'b5\'bf \'b4\'d9\'bd\'c3\'b7\'ce\'b5\'e5 (\'b8\'b5\'c5\'a9)\'b8\'a6 \'c1\'f6\'bf\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The contents of the PaRAM include the following:\par
PaRAM\'c0\'c7 \'b3\'bb\'bf\'eb\'c0\'ba \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  512 PaRAM sets\par
\bullet  512 PaRAM \'bc\'bc\'c6\'ae\par
\par
\bullet  64 channels that are direct mapped and can be used as link or QDMA sets if not used for DMA channels\par
\bullet  DMA \'c3\'a4\'b3\'ce\'bf\'a1 \'bb\'e7\'bf\'eb\'b5\'c7\'c1\'f6 \'be\'ca\'b4\'c2 \'b0\'e6\'bf\'ec \'c1\'f7\'c1\'a2 \'b8\'c5\'c7\'ce\'b5\'c7\'b0\'ed \'b8\'b5\'c5\'a9 \'b6\'c7\'b4\'c2 QDMA \'bc\'bc\'c6\'ae\'b7\'ce \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6\'c0\'d6\'b4\'c2 64 \'b0\'b3 \'c3\'a4\'b3\'ce\par
\par
\bullet  64 channels remain for link or QDMA sets By default, all channels map to PaRAM set to 0, they should be remapped before use by EDMA_TPCC_DCHMAPN_m and EDMA_TPCC_QCHMAPN_j registers.\par
\bullet  \'b8\'b5\'c5\'a9 \'b6\'c7\'b4\'c2 QDMA \'bc\'bc\'c6\'ae\'bf\'a1\'b4\'c2 64 \'b0\'b3\'c0\'c7 \'c3\'a4\'b3\'ce\'c0\'cc \'b3\'b2\'be\'c6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9. \'b1\'e2\'ba\'bb\'c0\'fb\'c0\'b8\'b7\'ce \'b8\'f0\'b5\'e7 \'c3\'a4\'b3\'ce\'c0\'ba PaRAM\'bf\'a1 \'b8\'c5\'c7\'ce\'b5\'c7\'be\'ee 0\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'c7\'b8\'e7, EDMA_TPCC_DCHMAPN_m \'b9\'d7 EDMA_TPCC_QCHMAPN_j \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c0\'c7\'c7\'d8 \'bb\'e7\'bf\'eb\'b5\'c7\'b1\'e2 \'c0\'fc\'bf\'a1 \'c0\'e7 \'b8\'c5\'c7\'ce\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.3.1 PaRAM\par
\par
Each parameter set of PaRAM is organized into eight 32-bit words or 32 bytes, as shown in Figure 16-21 and described in Table 16-91.\par
PaRAM\'c0\'c7 \'b0\'a2 \'c6\'c4\'b6\'f3\'b9\'cc\'c5\'cd \'bc\'bc\'c6\'ae\'b4\'c2 \'b1\'d7\'b8\'b2 16-21\'b0\'fa \'c7\'a5 16-91\'bf\'a1 \'bc\'b3\'b8\'ed \'b5\'c8 \'b0\'cd\'c3\'b3\'b7\'b3 8 \'b0\'b3\'c0\'c7 32 \'ba\'f1\'c6\'ae \'bf\'f6\'b5\'e5 \'b6\'c7\'b4\'c2 32 \'b9\'d9\'c0\'cc\'c6\'ae\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Each PaRAM set consists of 16-bit and 32-bit parameters.\par
\'b0\'a2 PaRAM \'bc\'bc\'c6\'ae\'b4\'c2 16 \'ba\'f1\'c6\'ae \'b9\'d7 32 \'ba\'f1\'c6\'ae \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.2.5.3.2 EDMA Channel PaRAM Set Entry Fields\par
16.2.5.3.2 EDMA \'c3\'a4\'b3\'ce PaRAM \'bc\'b3\'c1\'a4 \'c0\'d4\'b7\'c2 \'c7\'ca\'b5\'e5\par
\par
16.2.5.3.2.1 Channel Options Parameter (OPT)\par
16.2.5.3.2.1 \'c3\'a4\'b3\'ce \'bf\'c9\'bc\'c7 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 (OPT)\par
\par
For detailed information about the channel options parameter, see the EDMA_TPCC_OPT_n register description in Section 16.2.8.2.2.1, EDMA_TPCC Register Description.\par
\'c3\'a4\'b3\'ce \'bf\'c9\'bc\'c7 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'c1\'a4\'ba\'b8\'b4\'c2 \'bc\'bd\'bc\'c7 16.2.8.2.2.1, EDMA_TPCC \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'b3\'b8\'ed\'c0\'c7 EDMA_TPCC_OPT_n \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'b3\'b8\'ed\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.3.2.2 Channel Source Address (SRC)\par
16.2.5.3.2.2 \'c3\'a4\'b3\'ce \'bc\'d2\'bd\'ba \'c1\'d6\'bc\'d2 (SRC)\par
\par
The 32-bit source address parameter specifies the starting byte address of the source.\par
32 \'ba\'f1\'c6\'ae \'bc\'d2\'bd\'ba \'c1\'d6\'bc\'d2 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b4\'c2 \'bc\'d2\'bd\'ba\'c0\'c7 \'bd\'c3\'c0\'db \'b9\'d9\'c0\'cc\'c6\'ae \'c1\'d6\'bc\'d2\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
For SAM in increment mode, there are no alignment restrictions imposed by EDMA.\par
\'c1\'f5\'b0\'a1 \'b8\'f0\'b5\'e5\'c0\'c7 SAM\'c0\'c7 \'b0\'e6\'bf\'ec EDMA\'bf\'a1 \'c0\'c7\'c7\'d1 \'c1\'a4\'b7\'c4 \'c1\'a6\'c7\'d1\'c0\'cc \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
For SAM in constant addressing mode, it must program the source address to be aligned to a 256-bit aligned address (5 LSBs of address must be 0).\par
\'bb\'f3\'bc\'f6 \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5\'c0\'c7 SAM\'c0\'c7 \'b0\'e6\'bf\'ec, \'bc\'d2\'bd\'ba \'c1\'d6\'bc\'d2\'b8\'a6 256 \'ba\'f1\'c6\'ae \'c1\'a4\'b7\'c4 \'c1\'d6\'bc\'d2 (5 LSB\'c0\'c7 \'c1\'d6\'bc\'d2\'b0\'a1 0\'c0\'cc\'be\'ee\'be\'df \'c7\'d4)\'b7\'ce \'c1\'a4\'b7\'c4\'b5\'c7\'b5\'b5\'b7\'cf \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
If this rule is not observed, the EDMA_TPTC returns an error.\par
\'c0\'cc \'b1\'d4\'c4\'a2\'c0\'cc \'c1\'d8\'bc\'f6\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 EDMA_TPTC\'b0\'a1 \'bf\'c0\'b7\'f9\'b8\'a6 \'b8\'ae\'c5\'cf\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Refer to Section 16.2.5.12.3 Error Generation for additional details.\par
\'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 16.2.5.12.3 \'bf\'c0\'b7\'f9 \'bb\'fd\'bc\'ba\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.3.2.3 Channel Destination Address (DST) .\par
16.2.5.3.2.3 \'c3\'a4\'b3\'ce \'b8\'f1\'c0\'fb\'c1\'f6 \'c1\'d6\'bc\'d2 (DST)\par
\par
The 32-bit destination address parameter specifies the starting byte address of the destination.\par
32 \'ba\'f1\'c6\'ae \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b4\'c2 \'b4\'eb\'bb\'f3\'c0\'c7 \'bd\'c3\'c0\'db \'b9\'d9\'c0\'cc\'c6\'ae \'c1\'d6\'bc\'d2\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
For DAM in increment mode, there are no alignment restrictions imposed by EDMA.\par
\'c1\'f5\'b0\'a1 \'b8\'f0\'b5\'e5\'c0\'c7 DAM\'c0\'c7 \'b0\'e6\'bf\'ec, EDMA\'bf\'a1 \'c0\'c7\'c7\'d1 \'c1\'a4\'b7\'c4 \'c1\'a6\'c7\'d1\'c0\'cc \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
For DAM in constant addressing mode, it must program the destination address to be aligned to a 256-bit aligned address (5 LSBs of address must be 0).\par
\'bb\'f3\'bc\'f6 \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5\'c0\'c7 DAM\'c0\'c7 \'b0\'e6\'bf\'ec \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2\'b0\'a1 256 \'ba\'f1\'c6\'ae \'c1\'a4\'b7\'c4 \'c1\'d6\'bc\'d2 (5LSB\'c0\'c7 \'c1\'d6\'bc\'d2\'b0\'a1 0\'c0\'cc\'be\'ee\'be\'df \'c7\'d4)\'b7\'ce \'c1\'a4\'b7\'c4\'b5\'c7\'b5\'b5\'b7\'cf \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
If this rule is not observed, the EDMA_TPTC returns an error. Refer to Section 16.2.5.12.3 Error Generation for additional details.\par
\'c0\'cc \'b1\'d4\'c4\'a2\'c0\'cc \'c1\'d8\'bc\'f6\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e9 EDMA_TPTC\'b0\'a1 \'bf\'c0\'b7\'f9\'b8\'a6 \'b8\'ae\'c5\'cf\'c7\'d5\'b4\'cf\'b4\'d9. \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 16.2.5.12.3 \'bf\'c0\'b7\'f9 \'bb\'fd\'bc\'ba\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.3.2.4 Count for 1st Dimension (ACNT)\par
16.2.5.3.2.4 1 \'c2\'f7 \'b0\'e8\'bc\'f6 (ACNT)\'bf\'a1 \'b4\'eb\'c7\'d1 \'b0\'e8\'bc\'f6\par
\par
EDMA_TPCC_ABCNT_n[15:0] ACNT represents the number of bytes within the 1st dimension of a transfer.\par
EDMA_TPCC_ABCNT_n [15 : 0] ACNT\'b4\'c2 \'c0\'fc\'bc\'db\'c0\'c7 1 \'c2\'f7\'bf\'f8 \'b3\'bb\'c0\'c7 \'b9\'d9\'c0\'cc\'c6\'ae \'bc\'f6\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
ACNT is a 16-bit unsigned value with valid values between 0 and 65 535.\par
ACNT\'b4\'c2 0\'b0\'fa 65 535 \'bb\'e7\'c0\'cc\'c0\'c7 \'c0\'af\'c8\'bf\'c7\'d1 \'b0\'aa\'c0\'bb \'b0\'ae\'b4\'c2 16 \'ba\'f1\'c6\'ae \'ba\'ce\'c8\'a3\'be\'f8\'b4\'c2 \'b0\'aa\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Therefore, the maximum number of bytes in an array is 65 535 bytes (64K \endash  1 bytes).\par
\'b5\'fb\'b6\'f3\'bc\'ad \'b9\'e8\'bf\'ad\'c0\'c7 \'c3\'d6\'b4\'eb \'b9\'d9\'c0\'cc\'c6\'ae \'bc\'f6\'b4\'c2 65 535 \'b9\'d9\'c0\'cc\'c6\'ae (64K - 1 \'b9\'d9\'c0\'cc\'c6\'ae)\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
ACNT must be greater than or equal to 1 for a TR to be submitted to EDMA_TPTC.\par
TR\'c0\'cc EDMA_TPTC\'bf\'a1 \'c1\'a6\'c3\'e2 \'b5\'c7\'b7\'c1\'b8\'e9 ACNT\'b0\'a1 1\'ba\'b8\'b4\'d9 \'c5\'a9\'b0\'c5\'b3\'aa \'b0\'b0\'be\'c6\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
A transfer with ACNT equal to 0 is considered either a null or dummy transfer.\par
ACNT\'b0\'a1 0 \'c0\'ce \'c0\'fc\'bc\'db\'c0\'ba null \'b6\'c7\'b4\'c2 \'b4\'f5\'b9\'cc \'c0\'fc\'bc\'db\'c0\'b8\'b7\'ce \'b0\'a3\'c1\'d6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 A dummy or null transfer generates a completion code depending on the settings of the completion bit fields in EDMA_TPCC_OPT_n.\par
  \'b4\'f5\'b9\'cc \'b6\'c7\'b4\'c2 \'b3\'ce (null) \'c0\'fc\'bc\'db\'c0\'ba EDMA_TPCC_OPT_n\'c0\'c7 \'bf\'cf\'b7\'e1 \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5 \'bc\'b3\'c1\'a4\'bf\'a1 \'b5\'fb\'b6\'f3 \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Refer to Section 16.2.5.3.5 Dummy Versus Null Transfer Comparison and Section 16.2.5.5.3 Dummy or Null Completion for details on dummy/null completion conditions.\par
dummy / null \'bf\'cf\'b7\'e1 \'c1\'b6\'b0\'c7\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 16.2.5.3.5 Dummy \'b4\'eb Null \'c0\'fc\'bc\'db \'ba\'f1\'b1\'b3 \'b9\'d7 16.2.5.5.3 Dummy \'b6\'c7\'b4\'c2 Null Completion\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.3.2.5 Count for 2nd Dimension (BCNT)\par
\par
EDMA_TPCC_ABCNT_n[15:0] BCNT is a 16-bit unsigned value that specifies the number of arrays of length ACNT.\par
EDMA_TPCC_ABCNT_n [15 : 0] BCNT\'b4\'c2 \'b1\'e6\'c0\'cc\'b0\'a1 ACNT \'c0\'ce \'b9\'e8\'bf\'ad\'c0\'c7 \'bc\'f6\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'cf\'b4\'c2 16 \'ba\'f1\'c6\'ae \'ba\'ce\'c8\'a3\'be\'f8\'b4\'c2 \'b0\'aa\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
For normal operation, valid values for BCNT are between 1 and 65 535.\par
\'c1\'a4\'bb\'f3 \'c0\'db\'b5\'bf\'c0\'c7 \'b0\'e6\'bf\'ec BCNT\'c0\'c7 \'c0\'af\'c8\'bf\'c7\'d1 \'b0\'aa\'c0\'ba 1\'b0\'fa 65 535 \'bb\'e7\'c0\'cc\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Therefore, the maximum number of arrays in a frame is 65 535 (64K \endash  1 arrays).\par
\'b5\'fb\'b6\'f3\'bc\'ad \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'c3\'d6\'b4\'eb \'b9\'e8\'bf\'ad \'bc\'f6\'b4\'c2 65 535 (64K - 1 \'b9\'e8\'bf\'ad)\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
 A transfer with BCNT equal to 0 is considered either a null or dummy transfer.\par
  BCNT\'b0\'a1 0 \'c0\'ce \'c0\'fc\'bc\'db\'c0\'ba \'b3\'ce (null) \'c0\'fc\'bc\'db \'b6\'c7\'b4\'c2 \'b4\'f5\'b9\'cc \'c0\'fc\'bc\'db\'c0\'b8\'b7\'ce \'b0\'a3\'c1\'d6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
A dummy or null transfer generates a completion code depending on the settings of the completion bit fields in EDMA_TPCC_OPT_n.\par
\'b4\'f5\'b9\'cc \'b6\'c7\'b4\'c2 \'b3\'ce (null) \'c0\'fc\'bc\'db\'c0\'ba EDMA_TPCC_OPT_n\'c0\'c7 \'bf\'cf\'b7\'e1 \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5 \'bc\'b3\'c1\'a4\'bf\'a1 \'b5\'fb\'b6\'f3 \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Refer to Section 16.2.5.3.5 Dummy Versus Null Transfer Comparison and Section 16.2.5.5.3 Dummy or Null Completion for details on dummy/null completion conditions.\par
dummy / null \'bf\'cf\'b7\'e1 \'c1\'b6\'b0\'c7\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 16.2.5.3.5 Dummy \'b4\'eb Null \'c0\'fc\'bc\'db \'ba\'f1\'b1\'b3 \'b9\'d7 16.2.5.5.3 Dummy \'b6\'c7\'b4\'c2 Null Completion\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.3.2.6 Count for 3rd Dimension (CCNT)\par
16.2.5.3.2.6 3 \'c2\'f7 \'b0\'e8\'bc\'f6 \'b0\'e8\'bb\'ea (CCNT)\par
\par
EDMA_TPCC_CCNT_n[15:0] CCNT is a 16-bit unsigned value that specifies the number of frames in a block.\par
EDMA_TPCC_CCNT_n [15 : 0] CCNT\'b4\'c2 \'ba\'ed\'b7\'cf\'c0\'c7 \'c7\'c1\'b7\'b9\'c0\'d3 \'bc\'f6\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'cf\'b4\'c2 16 \'ba\'f1\'c6\'ae \'ba\'ce\'c8\'a3\'be\'f8\'b4\'c2 \'b0\'aa\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
 Valid values for CCNT are between 1 and 65 535. Therefore, the maximum number of frames in a block is 65 535 (64K \endash  1 frames).\par
  CCNT\'c0\'c7 \'c0\'af\'c8\'bf\'c7\'d1 \'b0\'aa\'c0\'ba 1\'b0\'fa 65 535\'c0\'d4\'b4\'cf\'b4\'d9. \'b5\'fb\'b6\'f3\'bc\'ad \'ba\'ed\'b7\'cf\'c0\'c7 \'c3\'d6\'b4\'eb \'c7\'c1\'b7\'b9\'c0\'d3 \'bc\'f6\'b4\'c2 65 535 (64K - 1 \'c7\'c1\'b7\'b9\'c0\'d3)\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
 A transfer with CCNT equal to 0 is considered either a null or dummy transfer.\par
  CCNT\'b0\'a1 0 \'c0\'ce \'c0\'fc\'bc\'db\'c0\'ba \'b3\'ce \'b6\'c7\'b4\'c2 \'b4\'f5\'b9\'cc \'c0\'fc\'bc\'db\'c0\'b8\'b7\'ce \'b0\'a3\'c1\'d6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
A dummy or null transfer generates a completion code depending on the settings of the completion bit fields in EDMA_TPCC_OPT_n.\par
\'b4\'f5\'b9\'cc \'b6\'c7\'b4\'c2 \'b3\'ce (null) \'c0\'fc\'bc\'db\'c0\'ba EDMA_TPCC_OPT_n\'c0\'c7 \'bf\'cf\'b7\'e1 \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5 \'bc\'b3\'c1\'a4\'bf\'a1 \'b5\'fb\'b6\'f3 \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
A CCNT value of 0 is considered either a null or dummy transfer.\par
CCNT \'b0\'aa 0\'c0\'ba \'b3\'ce (null) \'b6\'c7\'b4\'c2 \'b4\'f5\'b9\'cc (dummy) \'c0\'fc\'bc\'db\'c0\'b8\'b7\'ce \'b0\'a3\'c1\'d6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Refer to Section 16.2.5.3.5 Dummy Versus Null Transfer Comparison and Section 16.2.5.5.3 Dummy or Null Completion for details on dummy/null completion conditions.\par
dummy / null \'bf\'cf\'b7\'e1 \'c1\'b6\'b0\'c7\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 16.2.5.3.5 Dummy \'b4\'eb Null \'c0\'fc\'bc\'db \'ba\'f1\'b1\'b3 \'b9\'d7 16.2.5.5.3 Dummy \'b6\'c7\'b4\'c2 Null Completion\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.3.2.7 BCNT Reload (BCNTRLD)\par
16.2.5.3.2.7 BCNT \'c0\'e7\'b7\'ce\'b5\'e5 (BCNTRLD)\par
\par
\par
EDMA_TPCC_LNK_n[31:16] BCNTRLD is a 16-bit unsigned value used to reload the EDMA_TPCC_ABCNT_n[15:0] BCNT field once the last array in the 2nd dimension is transferred.\par
EDMA_TPCC_LNK_n [31:16] BCNTRLD\'b4\'c2 2 \'c2\'f7\'bf\'f8\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'b9\'e8\'bf\'ad\'c0\'cc \'c0\'fc\'bc\'db\'b5\'c7\'b8\'e9 EDMA_TPCC_ABCNT_n [15 : 0] BCNT \'c7\'ca\'b5\'e5\'b8\'a6 \'b4\'d9\'bd\'c3\'b7\'ce\'b5\'e5\'c7\'cf\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 16 \'ba\'f1\'c6\'ae \'ba\'ce\'c8\'a3\'be\'f8\'b4\'c2 \'b0\'aa\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
This field is only used for A-synchronized transfers.\par
\'c0\'cc \'c7\'ca\'b5\'e5\'b4\'c2 A \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'bf\'a1\'b8\'b8 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
In this case, the EDMA_TPCC decrements the BCNT value by 1 on each TR submission.\par
\'c0\'cc \'b0\'e6\'bf\'ec, EDMA_TPCC\'b4\'c2 \'b0\'a2 TR \'c1\'a6\'c3\'e2\'bd\'c3 BCNT \'b0\'aa\'c0\'bb 1 \'be\'bf \'b0\'a8\'bc\'d2\'bd\'c3\'c5\'b5\'b4\'cf\'b4\'d9.\par
\par
When BCNT reaches 0, the EDMA_TPCC decrements CCNT and uses the BCNTRLD value to reinitialize the BCNT value.\par
BCNT\'b0\'a1 0\'bf\'a1 \'b5\'b5\'b4\'de\'c7\'cf\'b8\'e9 EDMA_TPCC\'b4\'c2 CCNT\'b8\'a6 \'b0\'a8\'bc\'d2\'bd\'c3\'c5\'b0\'b0\'ed BCNTRLD \'b0\'aa\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 BCNT \'b0\'aa\'c0\'bb \'b4\'d9\'bd\'c3 \'c3\'ca\'b1\'e2\'c8\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
For AB-synchronized transfers, the EDMA_TPCC submits the BCNT in the TR and the EDMA_TPTC decrements BCNT appropriately.\par
\par
AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec EDMA_TPCC\'b0\'a1 TR\'c0\'c7 BCNT\'b8\'a6 \'c1\'a6\'c3\'e2\'c7\'cf\'b0\'ed EDMA_TPTC\'b0\'a1 BCNT\'b8\'a6 \'c0\'fb\'c0\'fd\'c8\'f7 \'b0\'a8\'bc\'d2\'bd\'c3\'c5\'b5\'b4\'cf\'b4\'d9.\par
\par
For AB-synchronized transfers, BCNTRLD is not used.\par
AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec, BCNTRLD\'b4\'c2 \'bb\'e7\'bf\'eb\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.3.2.8 Source B Index (SBIDX)\par
16.2.5.3.2.8 \'bc\'d2\'bd\'ba B \'c0\'ce\'b5\'a6\'bd\'ba (SBIDX)\par
\par
EDMA_TPCC_BIDX_n[15:0] SBIDX is a 16-bit signed value (2s complement) used for source address modification between each array in the 2nd dimension.\par
EDMA_TPCC_BIDX_n [15 : 0] SBIDX\'b4\'c2 2 \'c2\'f7\'bf\'f8\'c0\'c7 \'b0\'a2 \'b9\'e8\'bf\'ad \'bb\'e7\'c0\'cc\'c0\'c7 \'bc\'d2\'bd\'ba \'c1\'d6\'bc\'d2 \'bc\'f6\'c1\'a4\'bf\'a1 \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 16 \'ba\'f1\'c6\'ae \'ba\'ce\'c8\'a3\'c0\'d6\'b4\'c2 \'b0\'aa (2s \'ba\'b8\'bc\'f6)\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
 Valid values for EDMA_TPCC_BIDX_n[15:0] SBIDX are between \endash 32 768 and 32 767.\par
EDMA_TPCC_BIDX_n [15 : 0] SBIDX\'bf\'a1 \'c0\'af\'c8\'bf\'c7\'d1 \'b0\'aa\'c0\'ba -32 768\'b0\'fa 32 767 \'bb\'e7\'c0\'cc\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
It provides a byte address offset from the beginning of the source array to the beginning of the next source array.\par
\'bc\'d2\'bd\'ba \'b9\'e8\'bf\'ad\'c0\'c7 \'bd\'c3\'c0\'db \'ba\'ce\'ba\'d0\'bf\'a1\'bc\'ad \'b4\'d9\'c0\'bd \'bc\'d2\'bd\'ba \'b9\'e8\'bf\'ad\'c0\'c7 \'bd\'c3\'c0\'db \'ba\'ce\'ba\'d0\'b1\'ee\'c1\'f6\'c0\'c7 \'b9\'d9\'c0\'cc\'c6\'ae \'c1\'d6\'bc\'d2 \'bf\'c0\'c7\'c1\'bc\'c2\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
It applies to both A-synchronized and ABsynchronized transfers.\par
\'c0\'cc\'b0\'cd\'c0\'ba A- \'b5\'bf\'b1\'e2\'c8\'ad \'b9\'d7 AB- \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db \'b8\'f0\'b5\'ce\'bf\'a1 \'c0\'fb\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Some examples:\par
\'b8\'ee \'b0\'a1\'c1\'f6 \'bf\'b9 :\par
\par
\bullet  EDMA_TPCC_BIDX_n[15:0] SBIDX = 0000h (0): no address offset from the beginning of an array to the beginning of the next array. All arrays are fixed to the same beginning address.\par
\bullet  EDMA_TPCC_BIDX_n [15 : 0] SBIDX = 0000h (0) : \'b9\'e8\'bf\'ad \'bd\'c3\'c0\'db \'ba\'ce\'ba\'d0\'bf\'a1\'bc\'ad \'b4\'d9\'c0\'bd \'b9\'e8\'bf\'ad \'bd\'c3\'c0\'db \'ba\'ce\'ba\'d0\'b1\'ee\'c1\'f6 \'bf\'c0\'c7\'c1\'bc\'c2 \'b5\'c8 \'c1\'d6\'bc\'d2\'b0\'a1 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9. \'b8\'f0\'b5\'e7 \'b9\'e8\'bf\'ad\'c0\'ba \'b5\'bf\'c0\'cf\'c7\'d1 \'bd\'c3\'c0\'db \'c1\'d6\'bc\'d2\'b7\'ce \'b0\'ed\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  EDMA_TPCC_BIDX_n[15:0] SBIDX = 0003h (+3): the address offset from the beginning of an array to the beginning of the next array in a frame is 3 bytes.\par
\bullet  EDMA_TPCC_BIDX_n [15 : 0] SBIDX = 0003h (+3) : \'b9\'e8\'bf\'ad\'c0\'c7 \'bd\'c3\'c0\'db\'bf\'a1\'bc\'ad \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'b4\'d9\'c0\'bd \'b9\'e8\'bf\'ad \'bd\'c3\'c0\'db\'b1\'ee\'c1\'f6\'c0\'c7 \'c1\'d6\'bc\'d2 \'bf\'c0\'c7\'c1\'bc\'c2\'c0\'ba 3 \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
For example, if the current array begins at address 1000h, the next array begins at 1003h.\par
\'bf\'b9\'b8\'a6 \'b5\'e9\'be\'ee \'c7\'f6\'c0\'e7 \'b9\'e8\'bf\'ad\'c0\'cc \'c1\'d6\'bc\'d2 1000h\'bf\'a1\'bc\'ad \'bd\'c3\'c0\'db\'c7\'cf\'b8\'e9 \'b4\'d9\'c0\'bd \'b9\'e8\'bf\'ad\'c0\'ba 1003h\'bf\'a1\'bc\'ad \'bd\'c3\'c0\'db\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  EDMA_TPCC_BIDX_n[15:0] SBIDX = FFFFh (\endash 1): the address offset from the beginning of an array to the beginning of the next array in a frame is \endash 1 byte.\par
\bullet  EDMA_TPCC_BIDX_n [15 : 0] SBIDX = FFFFh (-1) : \'b9\'e8\'bf\'ad\'c0\'c7 \'bd\'c3\'c0\'db\'bf\'a1\'bc\'ad \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'b4\'d9\'c0\'bd \'b9\'e8\'bf\'ad \'bd\'c3\'c0\'db\'b1\'ee\'c1\'f6\'c0\'c7 \'c1\'d6\'bc\'d2 \'bf\'c0\'c7\'c1\'bc\'c2\'c0\'ba -1 \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
For example, if the current array begins at address 5054h, the next array begins at 5053h.\par
\'bf\'b9\'b8\'a6 \'b5\'e9\'be\'ee \'c7\'f6\'c0\'e7 \'b9\'e8\'bf\'ad\'c0\'cc \'c1\'d6\'bc\'d2 5054h\'bf\'a1\'bc\'ad \'bd\'c3\'c0\'db\'c7\'cf\'b8\'e9 \'b4\'d9\'c0\'bd \'b9\'e8\'bf\'ad\'c0\'ba 5053h\'bf\'a1\'bc\'ad \'bd\'c3\'c0\'db\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.2.5.3.2.9 Destination B Index (DBIDX)\par
16.2.5.3.2.9 \'b4\'eb\'bb\'f3 B \'c0\'ce\'b5\'a6\'bd\'ba (DBIDX)\par
\par
EDMA_TPCC_BIDX_n[31:16] DBIDX is a 16-bit signed value (2s complement) used for destination address modification between each array in the 2nd dimension.\par
EDMA_TPCC_BIDX_n [31:16] DBIDX\'b4\'c2 2 \'c2\'f7\'bf\'f8\'c0\'c7 \'b0\'a2 \'b9\'e8\'bf\'ad \'bb\'e7\'c0\'cc\'c0\'c7 \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2 \'bc\'f6\'c1\'a4\'bf\'a1 \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 16 \'ba\'f1\'c6\'ae \'ba\'ce\'c8\'a3\'c0\'d6\'b4\'c2 \'b0\'aa (2s \'ba\'b8\'bc\'f6)\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Valid values for EDMA_TPCC_BIDX_n[31:16] DBIDX are between \endash 32 768 and 32 767. It provides a byte address offset from the beginning of the destination array to the beginning of the next destination array within the current frame.\par
EDMA_TPCC_BIDX_n [31:16] DBIDX\'c0\'c7 \'c0\'af\'c8\'bf\'c7\'d1 \'b0\'aa\'c0\'ba -32 768\'b0\'fa 32 767 \'bb\'e7\'c0\'cc\'c0\'d4\'b4\'cf\'b4\'d9.\'c0\'cc \'b0\'aa\'c0\'ba \'b4\'eb\'bb\'f3 \'b9\'e8\'bf\'ad\'c0\'c7 \'bd\'c3\'c0\'db \'ba\'ce\'ba\'d0\'bf\'a1\'bc\'ad \'c7\'f6\'c0\'e7 \'c7\'c1\'b7\'b9\'c0\'d3 \'b3\'bb\'c0\'c7 \'b4\'d9\'c0\'bd \'b4\'eb\'bb\'f3 \'b9\'e8\'bf\'ad \'bd\'c3\'c0\'db \'ba\'ce\'ba\'d0\'b1\'ee\'c1\'f6\'c0\'c7 \'b9\'d9\'c0\'cc\'c6\'ae \'c1\'d6\'bc\'d2 \'bf\'c0\'c7\'c1\'bc\'c2\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
It applies to both A-synchronized and AB-synchronized transfers. Refer to Section 16.2.5.3.2.8 Source B Index (SBIDX) for examples.\par
\'c0\'cc\'b0\'cd\'c0\'ba A- \'b5\'bf\'b1\'e2\'c8\'ad \'b9\'d7 AB- \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db \'b8\'f0\'b5\'ce\'bf\'a1 \'c0\'fb\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9. \'bf\'b9\'c1\'a6\'b4\'c2 16.2.5.3.2.8 \'bc\'d2\'bd\'ba B \'c0\'ce\'b5\'a6\'bd\'ba (SBIDX)\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.3.2.10 Source C Index (SCIDX)\par
16.2.5.3.2.10 \'bc\'d2\'bd\'ba C \'bb\'f6\'c0\'ce (SCIDX)\par
\par
EDMA_TPCC_CIDX_n[15:0] SCIDX is a 16-bit signed value (2s complement) used for source address modification in the 3rd dimension.\par
EDMA_TPCC_CIDX_n [15 : 0] SCIDX\'b4\'c2 3 \'c2\'f7\'bf\'f8\'bf\'a1\'bc\'ad \'bc\'d2\'bd\'ba \'c1\'d6\'bc\'d2\'b8\'a6 \'bc\'f6\'c1\'a4\'c7\'cf\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 16 \'ba\'f1\'c6\'ae \'ba\'ce\'c8\'a3\'c0\'d6\'b4\'c2 \'b0\'aa (2\'c0\'c7 \'ba\'b8\'bc\'f6)\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Valid values for EDMA_TPCC_CIDX_n[15:0] SCIDX are between \endash 32 768 and 32 767.\par
EDMA_TPCC_CIDX_n [15 : 0] SCIDX\'bf\'a1 \'c0\'af\'c8\'bf\'c7\'d1 \'b0\'aa\'c0\'ba -32 768\'b0\'fa 32 767 \'bb\'e7\'c0\'cc\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
It provides a byte address offset from the beginning of the current array (pointed to by SRC address) to the beginning of the first source array in the next frame.\par
\'c7\'f6\'c0\'e7 \'b9\'e8\'bf\'ad\'c0\'c7 \'bd\'c3\'c0\'db \'ba\'ce\'ba\'d0 (SRC \'c1\'d6\'bc\'d2\'b0\'a1 \'b0\'a1\'b8\'ae\'c5\'b0\'b4\'c2)\'ba\'ce\'c5\'cd \'b4\'d9\'c0\'bd \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'c3\'b9 \'b9\'f8\'c2\'b0 \'bc\'d2\'bd\'ba \'b9\'e8\'bf\'ad\'c0\'c7 \'bd\'c3\'c0\'db \'ba\'ce\'ba\'d0\'b1\'ee\'c1\'f6\'c0\'c7 \'b9\'d9\'c0\'cc\'c6\'ae \'c1\'d6\'bc\'d2 \'bf\'c0\'c7\'c1\'bc\'c2\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
It applies to both Asynchronized and AB-synchronized transfers.\par
\'ba\'f1 \'b5\'bf\'b1\'e2\'c8\'ad \'b9\'d7 AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db \'b8\'f0\'b5\'ce\'bf\'a1 \'c0\'fb\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
NOTE: When SCIDX is applied, the current array in an A-synchronized transfer is the last array in the frame (Figure 16-19), while the current array in an AB-synchronized transfer is the first array in the frame (Figure 16-20).\par
\'c2\'fc\'b0\'ed : SCIDX\'b0\'a1 \'c0\'fb\'bf\'eb\'b5\'c9 \'b6\'a7 A- \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'c7 \'c7\'f6\'c0\'e7 \'b9\'e8\'bf\'ad\'c0\'ba \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'b9\'e8\'bf\'ad (\'b1\'d7\'b8\'b2 16-19)\'c0\'cc\'b0\'ed AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'c7 \'c7\'f6\'c0\'e7 \'b9\'e8\'bf\'ad\'c0\'ba \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'c3\'b9 \'b9\'f8\'c2\'b0 \'b9\'e8\'bf\'ad\'c0\'d4\'b4\'cf\'b4\'d9 (\'b1\'d7\'b8\'b2 16-20).\par
\par
16.2.5.3.2.11 Destination C Index (DCIDX)\par
16.2.5.3.2.11 \'b4\'eb\'bb\'f3 C \'bb\'f6\'c0\'ce (DCIDX)\par
\par
EDMA_TPCC_CIDX_n[31:16] DCIDX is a 16-bit signed value (2s complement) used for destination address modification in the 3rd dimension.\par
EDMA_TPCC_CIDX_n [31:16] DCIDX\'b4\'c2 3 \'c2\'f7\'bf\'f8\'bf\'a1\'bc\'ad \'b8\'f1\'c0\'fb\'c1\'f6 \'c1\'d6\'bc\'d2 \'bc\'f6\'c1\'a4\'bf\'a1 \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 16 \'ba\'f1\'c6\'ae \'ba\'ce\'c8\'a3\'c0\'d6\'b4\'c2 \'b0\'aa (2s \'ba\'b8\'bc\'f6)\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Valid values are between \endash 32 768 and 32 767. It provides a byte address offset from the beginning of the current array (pointed to by DST address) to the beginning of the first destination array TR in the next frame.\par
\'c0\'af\'c8\'bf\'c7\'d1 \'b0\'aa\'c0\'ba -32 768\'b0\'fa 32 767 \'bb\'e7\'c0\'cc\'c0\'d4\'b4\'cf\'b4\'d9. \'c7\'f6\'c0\'e7 \'b9\'e8\'bf\'ad\'c0\'c7 \'bd\'c3\'c0\'db (DST \'c1\'d6\'bc\'d2\'b0\'a1 \'b0\'a1\'b8\'ae\'c5\'b0\'b4\'c2)\'bf\'a1\'bc\'ad \'b4\'d9\'c0\'bd \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'c3\'b9 \'b9\'f8\'c2\'b0 \'b4\'eb\'bb\'f3 \'b9\'e8\'bf\'ad TR\'c0\'c7 \'bd\'c3\'c0\'db\'b1\'ee\'c1\'f6\'c0\'c7 \'b9\'d9\'c0\'cc\'c6\'ae \'c1\'d6\'bc\'d2 \'bf\'c0\'c7\'c1\'bc\'c2\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
It applies to both A-synchronized and AB-synchronized transfers.\par
\'c0\'cc\'b0\'cd\'c0\'ba A- \'b5\'bf\'b1\'e2\'c8\'ad \'b9\'d7 AB- \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db \'b8\'f0\'b5\'ce\'bf\'a1 \'c0\'fb\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
NOTE: When DCIDX is applied, the current array in an A-synchronized transfer is the last array in the frame (Figure 16-19), while the current array in a AB-synchronized transfer is the first array in the frame (Figure 16-20).\par
\'c2\'fc\'b0\'ed : DCIDX\'b0\'a1 \'c0\'fb\'bf\'eb\'b5\'c9 \'b6\'a7 A- \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'c7 \'c7\'f6\'c0\'e7 \'b9\'e8\'bf\'ad\'c0\'ba \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'b9\'e8\'bf\'ad (\'b1\'d7\'b8\'b2 16-19)\'c0\'cc\'b0\'ed AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'c7 \'c7\'f6\'c0\'e7 \'b9\'e8\'bf\'ad\'c0\'ba \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'c7 \'c3\'b9 \'b9\'f8\'c2\'b0 \'b9\'e8\'bf\'ad\'c0\'d4\'b4\'cf\'b4\'d9 (\'b1\'d7\'b8\'b2 16-20).\par
\par
16.2.5.3.2.12 Link Address (LINK)\par
16.2.5.3.2.12 \'b8\'b5\'c5\'a9 \'c1\'d6\'bc\'d2 (LINK)\par
\par
The EDMA_TPCC provides a mechanism, called linking, to reload the current PaRAM set upon its natural termination (that is, after the count fields are decremented to 0) with a new PaRAM set.\par
EDMA_TPCC\'b4\'c2 \'bb\'f5\'b7\'ce\'bf\'ee PaRAM \'bc\'bc\'c6\'ae\'b7\'ce \'c0\'da\'bf\'ac \'c1\'be\'b7\'e1\'bd\'c3 (\'c1\'ef, \'b0\'e8\'bc\'f6 \'c7\'ca\'b5\'e5\'b0\'a1 0\'c0\'b8\'b7\'ce \'b0\'a8\'bc\'d2 \'b5\'c8 \'c8\'c4) \'c7\'f6\'c0\'e7 PaRAM \'bc\'bc\'c6\'ae\'b8\'a6 \'b4\'d9\'bd\'c3\'b7\'ce\'b5\'e5\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'b8\'b5\'c5\'a9\'b6\'f3\'b0\'ed\'c7\'cf\'b4\'c2 \'b8\'de\'c4\'bf\'b4\'cf\'c1\'f2\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The 16-bit parameter EDMA_TPCC_LNK_n[15:0] LINK specifies the byte address offset in the PaRAM from which the EDMA_TPCC loads/reloads the next PaRAM set during linking.\par
16- \'ba\'f1\'c6\'ae \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 EDMA_TPCC_LNK_n [15 : 0] LINK\'b4\'c2 EDMA_TPCC\'b0\'a1 \'b8\'b5\'c5\'a9\'c7\'cf\'b4\'c2 \'b5\'bf\'be\'c8 \'b4\'d9\'c0\'bd PaRAM \'bc\'bc\'c6\'ae\'b8\'a6\'b7\'ce\'b5\'e5 / \'b4\'d9\'bd\'c3\'b7\'ce\'b5\'e5\'c7\'cf\'b4\'c2 PaRAM\'c0\'c7 \'b9\'d9\'c0\'cc\'c6\'ae \'c1\'d6\'bc\'d2 \'bf\'c0\'c7\'c1\'bc\'c2\'c0\'bb \'c1\'f6\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
It must program the link address to point to a valid aligned 32-byte PaRAM set.\par
\'c0\'af\'c8\'bf\'c7\'d1 \'c1\'a4\'c7\'d5 \'b5\'c8 32 \'b9\'d9\'c0\'cc\'c6\'ae PaRAM \'bc\'bc\'c6\'ae\'b8\'a6 \'b0\'a1\'b8\'ae \'c5\'b0\'b5\'b5\'b7\'cf \'b8\'b5\'c5\'a9 \'c1\'d6\'bc\'d2\'b8\'a6 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The 5 LSBs of the LINK field should be cleared to 0.\par
LINK \'c7\'ca\'b5\'e5\'c0\'c7 5LSB\'b4\'c2 0\'c0\'b8\'b7\'ce \'c5\'ac\'b8\'ae\'be\'ee\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPCC ignores the upper 2 bits of the LINK entry, allowing the flexibility of programming the link address as either an absolute/literal byte address or use the PaRAM-base-relative offset address.\par
EDMA_TPCC\'b4\'c2 \'b8\'b5\'c5\'a9 \'c1\'d6\'bc\'d2\'c0\'c7 \'bb\'f3\'c0\'a7 2 \'ba\'f1\'c6\'ae\'b8\'a6 \'b9\'ab\'bd\'c3\'c7\'cf\'b9\'c7\'b7\'ce \'b8\'b5\'c5\'a9 \'c1\'d6\'bc\'d2\'b8\'a6 \'c0\'fd\'b4\'eb / \'b8\'ae\'c5\'cd\'b7\'b2 \'b9\'d9\'c0\'cc\'c6\'ae \'c1\'d6\'bc\'d2\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'cf\'b0\'c5\'b3\'aa PaRAM- \'b1\'e2\'b9\'dd \'bb\'f3\'b4\'eb \'bf\'c0\'c7\'c1\'bc\'c2 \'c1\'d6\'bc\'d2\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Therefore, if it use the literal address with a range from 4000h to 7FFFh, it will be treated as a PaRAMbase- relative value of 0000h to 3FFFh.\par
\'b5\'fb\'b6\'f3\'bc\'ad 4000h\'bf\'a1\'bc\'ad 7FFFh \'b9\'fc\'c0\'a7\'c0\'c7 \'b8\'ae\'c5\'cd\'b7\'b2 \'c1\'d6\'bc\'d2\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 PaRAMbase \'bb\'f3\'b4\'eb \'b0\'aa 0000h\'bf\'a1\'bc\'ad 3FFFh\'b7\'ce \'c3\'b3\'b8\'ae\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
It should check that the programed value in the EDMA_TPCC_LNK_n[15:0] LINK field is correctly, so that link update is requested from a PaRAM address that falls in the range of the available PaRAM addresses on the device.\par
EDMA_TPCC_LNK_n [15 : 0] \'b8\'b5\'c5\'a9 \'c7\'ca\'b5\'e5\'c0\'c7 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'b5\'c8 \'b0\'aa\'c0\'cc \'bf\'c3\'b9\'d9 \'b8\'a5\'c1\'f6 \'c8\'ae\'c0\'ce\'c7\'cf\'bf\'a9 \'c0\'e5\'c4\'a1\'c0\'c7 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'d1 PaRAM \'c1\'d6\'bc\'d2 \'b9\'fc\'c0\'a7\'bf\'a1 \'bc\'d3\'c7\'cf\'b4\'c2 PaRAM \'c1\'d6\'bc\'d2\'bf\'a1\'bc\'ad \'b8\'b5\'c5\'a9 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b8\'a6 \'bf\'e4\'c3\'bb\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Value of FFFFh in EDMA_TPCC_LNK_n[15:0] LINK bit-field is referred to as a NULL link that should cause the EDMA_TPCC to perform an internal write of 0 to all entries of the current PaRAM set, except for the EDMA_TPCC_LNK_n[15:0]LINK field is set to FFFFh. Also, see Section 16.2.5.5 Completion of a DMA Transfer for details on terminating a transfer.\par
EDMA_TPCC_LNK_n [15 : 0]\'bf\'a1\'bc\'ad FFFFh\'c0\'c7 \'b0\'aa LINK \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b4\'c2 EDMA_TPCC\'b0\'a1 EDMA_TPCC_LNK_n [15 : 0]\'c0\'bb \'c1\'a6\'bf\'dc\'c7\'d1 \'c7\'f6\'c0\'e7 PaRAM \'bc\'bc\'c6\'ae\'c0\'c7 \'b8\'f0\'b5\'e7 \'bf\'a3\'c6\'ae\'b8\'ae\'bf\'a1 0\'c0\'c7 \'b3\'bb\'ba\'ce \'be\'b2\'b1\'e2\'b8\'a6 \'bc\'f6\'c7\'e0\'c7\'cf\'b0\'d4\'c7\'cf\'b4\'c2 NULL \'b8\'b5\'c5\'a9\'b6\'f3\'b0\'ed\'c7\'d5\'b4\'cf\'b4\'d9. ] LINK \'c7\'ca\'b5\'e5\'b0\'a1 FFFFh\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9. \'b6\'c7\'c7\'d1 \'c0\'fc\'bc\'db \'c1\'be\'b7\'e1\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 16.2.5.5 \'c0\'fd DMA \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.3.3 Null PaRAM Set\par
16.2.5.3.3 \'b3\'ce PaRAM \'bc\'bc\'c6\'ae\par
\par
A null PaRAM set is defined as a PaRAM set where all count fields (EDMA_TPCC_ABCNT_n[15:0] ACNT, EDMA_TPCC_ABCNT_n[31:16] BCNT, and EDMA_TPCC_CCNT_n[15:0] CCNT) are cleared to 0.\par
\'b3\'ce PaRAM \'bc\'bc\'c6\'ae\'b4\'c2 \'b8\'f0\'b5\'e7 \'c4\'ab\'bf\'ee\'c6\'ae \'c7\'ca\'b5\'e5 (EDMA_TPCC_ABCNT_n [15 : 0] ACNT, EDMA_TPCC_ABCNT_n [31:16] BCNT \'b9\'d7 EDMA_TPCC_CCNT_n [15 : 0] CCNT)\'b0\'a1 0\'c0\'b8\'b7\'ce \'c5\'ac\'b8\'ae\'be\'ee\'b5\'c7\'b4\'c2 PaRAM \'bc\'bc\'c6\'ae\'b7\'ce \'c1\'a4\'c0\'c7\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
If a PaRAM set associated with a channel is a NULL set, then when serviced by the EDMA_TPCC, the bit corresponding to the channel is set in the associated event missed register (EDMA_TPCC_EMR, EDMA_TPCC_EMRH, or EDMA_TPCC_QEMR).\par
\'c3\'a4\'b3\'ce\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'b0\'a1 NULL \'bc\'bc\'c6\'ae\'c0\'cc\'b8\'e9, EDMA_TPCC\'bf\'a1 \'c0\'c7\'c7\'d8 \'bc\'ad\'ba\'f1\'bd\'ba \'b5\'c9 \'b6\'a7, \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c0\'c0\'c7\'cf\'b4\'c2 \'ba\'f1\'c6\'ae\'b4\'c2 \'bf\'ac\'b0\'fc\'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'a9\'b6\'f4 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (EDMA_TPCC_EMR, EDMA_TPCC_EMRH \'b6\'c7\'b4\'c2 EDMA_TPCC_QEMR)\'bf\'a1 \'bc\'b3\'c1\'a4\'b5\'c8\'b4\'d9.\par
\par
This bit remains set in the associated secondary event register (EDMA_TPCC_SER, EDMA_TPCC_SERH, or EDMA_TPCC_QSER).\par
\'c0\'cc \'ba\'f1\'c6\'ae\'b4\'c2 \'bf\'ac\'b0\'fc\'b5\'c8 2 \'c2\'f7 \'c0\'cc\'ba\'a5\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (EDMA_TPCC_SER, EDMA_TPCC_SERH \'b6\'c7\'b4\'c2 EDMA_TPCC_QSER)\'bf\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
This implies that any future events on the same channel are ignored by the EDMA_TPCC and it is required to clear the bit in EDMA_TPCC_SER, EDMA_TPCC_SERH, or EDMA_TPCC_QSER for the channel.\par
\'c0\'cc\'b0\'cd\'c0\'ba EDMA_TPCC\'bf\'a1 \'c0\'c7\'c7\'d8 \'b5\'bf\'c0\'cf\'c7\'d1 \'c3\'a4\'b3\'ce\'c0\'c7 \'c0\'e5\'b7\'a1 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'b9\'ab\'bd\'c3\'b5\'c7\'b0\'ed \'c7\'d8\'b4\'e7 \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d1 EDMA_TPCC_SER, EDMA_TPCC_SERH \'b6\'c7\'b4\'c2 EDMA_TPCC_QSER\'c0\'c7 \'ba\'f1\'c6\'ae\'b8\'a6 \'c1\'f6\'bf\'ef \'c7\'ca\'bf\'e4\'b0\'a1 \'c0\'d6\'c0\'bd\'c0\'bb \'c0\'c7\'b9\'cc\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
This is considered an error condition, since events are not expected on a channel that is configured as a null transfer.\par
null \'c0\'fc\'bc\'db\'c0\'b8\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'c8 \'c3\'a4\'b3\'ce\'bf\'a1\'bc\'ad\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'bf\'b9\'bb\'f3\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'b8\'b9\'c7\'b7\'ce \'c0\'cc\'b4\'c2 \'bf\'c0\'b7\'f9 \'c1\'b6\'b0\'c7\'c0\'b8\'b7\'ce \'b0\'a3\'c1\'d6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.2.5.3.4 Dummy PaRAM Set\par
16.2.5.3.4 \'b4\'f5\'b9\'cc PaRAM \'bc\'bc\'c6\'ae\par
\par
A dummy PaRAM set is defined as a PaRAM set where at least one of the count fields (EDMA_TPCC_ABCNT_n[15:0] ACNT, EDMA_TPCC_ABCNT_n[31:16] BCNT, or EDMA_TPCC_CCNT_n[15:0] CCNT) is cleared to 0 and at least one of the count fields is nonzero.\par
\'b4\'f5\'b9\'cc PaRAM \'bc\'bc\'c6\'ae\'b4\'c2 \'c4\'ab\'bf\'ee\'c6\'ae \'c7\'ca\'b5\'e5\'b5\'e9 (EDMA_TPCC_ABCNT_n [15 : 0] ACNT, EDMA_TPCC_ABCNT_n [31:16] BCNT \'b6\'c7\'b4\'c2 EDMA_TPCC_CCNT_n [15 : 0] CCNT) \'c1\'df \'c0\'fb\'be\'ee\'b5\'b5 \'c7\'cf\'b3\'aa\'b0\'a1 0\'c0\'b8\'b7\'ce \'c5\'ac\'b8\'ae\'be\'ee \'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'b7\'ce\'bc\'ad \'c1\'a4\'c0\'c7\'b5\'c7\'b8\'e7, \'c4\'ab\'bf\'ee\'c6\'ae \'c7\'ca\'b5\'e5 \'c1\'df \'c0\'fb\'be\'ee\'b5\'b5 \'c7\'cf\'b3\'aa\'b4\'c2 0\'c0\'cc \'be\'c6\'b4\'d5\'b4\'cf\'b4\'d9.\par
\par
If a PaRAM set associated with a channel is a dummy set, then when serviced by the EDMA_TPCC, it will not set the bit corresponding to the channel (DMA/QDMA) in the event missed register (EDMA_TPCC_EMR, EDMA_TPCC_EMRH, or EDMA_TPCC_QEMR) and the secondary event register (EDMA_TPCC_SER, EDMA_TPCC_SERH, or EDMA_TPCC_QSER) bit gets cleared similar to a normal transfer.\par
\'c3\'a4\'b3\'ce\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'b0\'a1 \'b4\'f5\'b9\'cc \'bc\'bc\'c6\'ae \'c0\'ce \'b0\'e6\'bf\'ec, EDMA_TPCC\'bf\'a1 \'c0\'c7\'c7\'d8 \'bc\'ad\'ba\'f1\'bd\'ba \'b5\'c9 \'b6\'a7 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'a9\'b6\'f4 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (EDMA_TPCC_EMR, EDMA_TPCC_EMRH \'b6\'c7\'b4\'c2 EDMA_TPCC_QEMR)\'c0\'c7 \'c3\'a4\'b3\'ce (DMA / QDMA)\'bf\'a1 \'c7\'d8\'b4\'e7\'c7\'cf\'b4\'c2 \'ba\'f1\'c6\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'c1\'f6 \'be\'ca\'b0\'ed 2 \'c2\'f7 \'c0\'cc\'ba\'a5\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (EDMA_TPCC_SER, EDMA_TPCC_SERH \'b6\'c7\'b4\'c2 EDMA_TPCC_QSER) \'ba\'f1\'c6\'ae\'b4\'c2 \'c1\'a4\'bb\'f3 \'c0\'fc\'bc\'db\'b0\'fa \'ba\'f1\'bd\'c1\'c7\'cf\'b0\'d4 \'c1\'f6\'bf\'f6\'c1\'fd\'b4\'cf\'b4\'d9.\par
\par
Future events on that channel are serviced.\par
\'c7\'d8\'b4\'e7 \'c3\'a4\'b3\'ce\'c0\'c7 \'c7\'e2\'c8\'c4 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c3\'b3\'b8\'ae\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
A dummy transfer is a legal transfer of 0 bytes.\par
\'b4\'f5\'b9\'cc \'c0\'fc\'bc\'db\'c0\'ba 0 \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'c7 \'bf\'c3\'b9\'d9\'b8\'a5 \'c0\'fc\'bc\'db\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
16.2.5.3.5 Dummy Versus Null Transfer Comparison\par
16.2.5.3.5 \'b4\'f5\'b9\'cc\'bf\'cd \'b3\'ce (null) \'c0\'fc\'b4\'de \'ba\'f1\'b1\'b3\par
\par
There are some differences in the way the EDMA_TPCC logic treats a dummy versus a null transfer request.\par
EDMA_TPCC \'b3\'ed\'b8\'ae\'b0\'a1 \'b4\'f5\'b9\'cc \'b4\'eb \'b3\'ce (Null) \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'bb \'c3\'b3\'b8\'ae\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\'bf\'a1\'b4\'c2 \'b8\'ee \'b0\'a1\'c1\'f6 \'c2\'f7\'c0\'cc\'c1\'a1\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
A null transfer request is an error condition, but a dummy transfer is a legal transfer of 0 bytes.\par
\'b3\'ce \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'ba \'bf\'c0\'b7\'f9 \'c1\'b6\'b0\'c7\'c0\'cc\'c1\'f6\'b8\'b8 \'b4\'f5\'b9\'cc \'c0\'fc\'bc\'db\'c0\'ba 0 \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'c7 \'c0\'af\'c8\'bf\'c7\'d1 \'c0\'fc\'bc\'db\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
A null transfer causes an error bit (En) in EDMA_TPCC_EMR to get set and the En bit in EDMA_TPCC_SER remains set, essentially preventing any further transfers on that channel without clearing the associated error registers.\par
\'b3\'ce \'c0\'fc\'bc\'db\'c0\'ba EDMA_TPCC_EMR\'c0\'c7 \'bf\'c0\'b7\'f9 \'ba\'f1\'c6\'ae (En)\'b0\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'b5\'b5\'b7\'cf\'c7\'cf\'b0\'ed EDMA_TPCC_SER\'c0\'c7 En \'ba\'f1\'c6\'ae\'b4\'c2 \'bc\'b3\'c1\'a4\'b5\'c8 \'c3\'a4\'b7\'ce \'c0\'af\'c1\'f6\'b5\'c7\'be\'ee \'b0\'fc\'b7\'c3 \'bf\'c0\'b7\'f9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c1\'f6\'bf\'ec\'c1\'f6 \'be\'ca\'b0\'ed \'c7\'d8\'b4\'e7 \'c3\'a4\'b3\'ce\'bf\'a1\'bc\'ad\'c0\'c7 \'b4\'f5 \'c0\'cc\'bb\'f3\'c0\'c7 \'c0\'fc\'bc\'db\'c0\'bb \'ba\'bb\'c1\'fa\'c0\'fb\'c0\'b8\'b7\'ce \'b9\'e6\'c1\'f6\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Table 16-92 summarizes the conditions and effects of null and dummy transfer requests.\par
\'c7\'a5 16-92\'b4\'c2 null \'b9\'d7 dummy \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'c7 \'c1\'b6\'b0\'c7\'b0\'fa \'bf\'b5\'c7\'e2\'c0\'bb \'bf\'e4\'be\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.3.6 Parameter Set Updates\par
16.2.5.3.6 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'bc\'bc\'c6\'ae \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\par
\par
When a TR is submitted for a given DMA/QDMA channel and its corresponding PaRAM set, the EDMA_TPCC is responsible for updating the PaRAM set in anticipation of the next trigger event.\par
\'c1\'f6\'c1\'a4\'b5\'c8 DMA / QDMA \'c3\'a4\'b3\'ce \'b9\'d7 \'c7\'d8\'b4\'e7 PaRAM \'bc\'bc\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d8 TR\'c0\'cc \'c1\'a6\'c3\'e2\'b5\'c7\'b8\'e9 EDMA_TPCC\'b4\'c2 \'b4\'d9\'c0\'bd \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'bf\'b9\'bb\'f3\'c7\'cf\'bf\'a9 PaRAM \'bc\'bc\'c6\'ae\'b8\'a6 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
For events that are not final, this includes address and count updates; for final events, this includes the linkupdate.\par
\'c3\'d6\'c1\'be\'c0\'fb\'c0\'cc\'c1\'f6 \'be\'ca\'c0\'ba \'c0\'cc\'ba\'a5\'c6\'ae\'c0\'c7 \'b0\'e6\'bf\'ec \'c1\'d6\'bc\'d2 \'b9\'d7 \'c4\'ab\'bf\'ee\'c6\'ae \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b0\'a1 \'c6\'f7\'c7\'d4\'b5\'cb\'b4\'cf\'b4\'d9. \'c3\'d6\'c1\'be \'c0\'cc\'ba\'a5\'c6\'ae\'bf\'a1\'b4\'c2 linkupdate\'b0\'a1 \'c6\'f7\'c7\'d4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The specific PaRAM set entries that are updated depend on the channel\rquote s synchronization type (Asynchronized or B-synchronized) and the current state of the PaRAM set.\par
\'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b5\'c7\'b4\'c2 \'c6\'af\'c1\'a4 PaRAM \'bc\'bc\'c6\'ae \'c7\'d7\'b8\'f1\'c0\'ba \'c3\'a4\'b3\'ce\'c0\'c7 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'af\'c7\'fc (\'ba\'f1\'b5\'bf\'b1\'e2\'bd\'c4 \'b6\'c7\'b4\'c2 B- \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'ca) \'b9\'d7 PaRAM \'bc\'bc\'c6\'ae\'c0\'c7 \'c7\'f6\'c0\'e7 \'bb\'f3\'c5\'c2\'bf\'a1 \'b5\'fb\'b6\'f3 \'b4\'d9\'b8\'a8\'b4\'cf\'b4\'d9.\par
\par
 A B-update refers to the decrementing of EDMA_TPCC_ABCNT_n[31:16] BCNT in the case of A-synchronized transfers after the submission of successive TRs.\par
  B- \'b0\'bb\'bd\'c5\'c0\'ba \'bf\'ac\'bc\'d3\'c0\'fb\'c0\'ce TR\'c0\'c7 \'c1\'a6\'c3\'e2 \'c0\'cc\'c8\'c4\'bf\'a1 A- \'b5\'bf\'b1\'e2\'bd\'c4 \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec\'bf\'a1 EDMA_TPCC_ABCNT_n [31:16] BCNT\'c0\'c7 \'b0\'a8\'bc\'d2\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'bd\'b4\'d9.\par
\par
A C-update refers to the decrementing of CCNT in the case of Asynchronized transfers after BCNT TRs for EDMA_TPCC_ABCNT_n[15:0] ACNT byte transfers have submitted.\par
C \'b0\'bb\'bd\'c5\'c0\'ba EDMA_TPCC_ABCNT_n [15 : 0] ACNT Y\'c0\'cc\'c6\'ae \'c0\'fc\'bc\'db\'c0\'cc \'c1\'a6\'c3\'e2 \'b5\'c8 BCNT TR \'c0\'cc\'c8\'c4\'c0\'c7 \'ba\'f1\'b5\'bf\'b1\'e2 \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec CCNT\'c0\'c7 \'b0\'a8\'bc\'d2\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'bf\'b4\'cf\'b4\'d9.\par
\par
For AB-synchronized transfers, a C-update refers to the decrementing of EDMA_TPCC_CCNT_n[15:0] CCNT after submission of every transfer request.\par
AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec C \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b4\'c2 \'b8\'f0\'b5\'e7 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'bb \'c1\'a6\'c3\'e2 \'c7\'d1 \'c8\'c4 EDMA_TPCC_CCNT_n [15 : 0] CCNT\'c0\'c7 \'b0\'a8\'bc\'d2\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
Refer to Table 16-93 for details and conditions on the parameter updates.\par
\'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'b0\'bb\'bd\'c5\'bf\'a1 \'b4\'eb\'c7\'d1 \'bc\'bc\'ba\'ce \'bb\'e7\'c7\'d7 \'b9\'d7 \'c1\'b6\'b0\'c7\'c0\'ba \'c7\'a5 16-93\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
A link update occurs when the PaRAM set is exhausted, as described in Section 16.2.5.3.7 Linking Transfers.\par
\'b8\'b5\'c5\'a9 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b4\'c2 \'bc\'bd\'bc\'c7 16.2.5.3.7 \'c0\'fc\'bc\'db \'bf\'ac\'b0\'e1\'bf\'a1\'bc\'ad \'bc\'b3\'b8\'ed \'b5\'c8 \'b0\'cd\'c3\'b3\'b7\'b3 PaRAM \'bc\'bc\'c6\'ae\'b0\'a1 \'b8\'f0\'b5\'ce \'bc\'d2\'b8\'f0 \'b5\'c9 \'b6\'a7 \'b9\'df\'bb\'fd\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
After the TR is read from the PaRAM (and is in process of being submitted to EDMA_TPTC), the following fields are updated if needed:.\par
TR\'c0\'cc PaRAM\'bf\'a1\'bc\'ad \'c0\'d0\'c8\'f7\'b0\'ed (\'b1\'d7\'b8\'ae\'b0\'ed EDMA_TPTC\'bf\'a1 \'c1\'a6\'c3\'e2\'b5\'c7\'b4\'c2 \'b0\'fa\'c1\'a4\'bf\'a1\'bc\'ad) \'c7\'ca\'bf\'e4\'c7\'cf\'b4\'d9\'b8\'e9 \'b4\'d9\'c0\'bd \'c7\'ca\'b5\'e5\'b0\'a1 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  A-synchronized: BCNT, CCNT, SRC, DST.\par
\bullet  A- \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'ca : BCNT, CCNT, SRC, DST.\par
\par
\bullet  AB-synchronized: CCNT, SRC, DST.\par
\bullet  AB \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'ca : CCNT, SRC, DST.\par
\par
The following fields are not updated (except for during linking, where all fields are overwritten by the link PaRAM set):\par
\'b4\'d9\'c0\'bd \'c7\'ca\'b5\'e5\'b4\'c2 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9 (\'b8\'b5\'c5\'a9 \'c1\'df, PaRAM \'b8\'b5\'c5\'a9\'b0\'a1 \'b8\'f0\'b5\'e7 \'c7\'ca\'b5\'e5\'b8\'a6 \'b5\'a4\'be\'ee \'be\'b2\'b4\'c2 \'b0\'e6\'bf\'ec \'c1\'a6\'bf\'dc).\par
\bullet  A-synchronized: EDMA_TPCC_ABCNT_n[15:0] ACNT, EDMA_TPCC_LNK_n[31:16] BCNTRLD,\par
EDMA_TPCC_BIDX_n[15:0] SBIDX, EDMA_TPCC_BIDX_n[31:16] DBIDX,\par
EDMA_TPCC_CIDX_n[15:0] SCIDX, EDMA_TPCC_CIDX_n[31:16] DCIDX, EDMA_TPCC_OPT_n,\par
EDMA_TPCC_LNK_n[15:0]LINK.\par
\bullet  AB-synchronized: EDMA_TPCC_ABCNT_n[15:0] ACNT, EDMA_TPCC_ABCNT_n[31:16] BCNT,\par
EDMA_TPCC_LNK_n[31:16] BCNTRLD, EDMA_TPCC_BIDX_n[15:0] SBIDX,\par
EDMA_TPCC_BIDX_n[31:16] DBIDX, EDMA_TPCC_CIDX_n[15:0] SCIDX,\par
EDMA_TPCC_CIDX_n[31:16] DCIDX, EDMA_TPCC_OPT_n, EDMA_TPCC_LNK_n[15:0]LINK.\par
\par
NOTE: PaRAM updates only pertain to the information that is needed to properly submit the next transfer request to the EDMA_TPTC.\par
\'c2\'fc\'b0\'ed : PaRAM \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b4\'c2 \'b4\'d9\'c0\'bd \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'bb EDMA_TPTC\'bf\'a1 \'bf\'c3\'b9\'d9\'b8\'a3\'b0\'d4 \'c1\'a6\'c3\'e2\'c7\'cf\'b4\'c2 \'b5\'a5 \'c7\'ca\'bf\'e4\'c7\'d1 \'c1\'a4\'ba\'b8\'bf\'a1\'b8\'b8 \'c0\'fb\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Updates that occur while data is moved within a transfer request are tracked within the transfer controller, and is detailed in Section 16.2.5.12 EDMA Transfer Controller (EDMA_TPTC).\par
\'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb \'b3\'bb\'bf\'a1\'bc\'ad \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'c0\'cc\'b5\'bf\'b5\'c7\'b4\'c2 \'b5\'bf\'be\'c8 \'b9\'df\'bb\'fd\'c7\'cf\'b4\'c2 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b4\'c2 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'b3\'bb\'bf\'a1\'bc\'ad \'c3\'df\'c0\'fb\'b5\'c7\'b8\'e7 16.2.5.12 EDMA \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af (EDMA_TPTC)\'bf\'a1\'bc\'ad \'c0\'da\'bc\'bc\'c8\'f7 \'bc\'b3\'b8\'ed\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
For A-synchronized transfers, the EDMA_TPCC always submits a TRP for EDMA_TPCC_ABCNT_n[15:0] ACNT bytes (EDMA_TPCC_ABCNT_n[31:16] BCNT = 1 and EDMA_TPCC_CCNT_n[15:0] CCNT = 1).\par
A- \'b5\'bf\'b1\'e2 \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec EDMA_TPCC\'b4\'c2 \'c7\'d7\'bb\'f3 EDMA_TPCC_ABCNT_n [15 : 0] ACNT \'b9\'d9\'c0\'cc\'c6\'ae (EDMA_TPCC_ABCNT_n [31:16] BCNT = 1 \'b9\'d7 EDMA_TPCC_CCNT_n [15 : 0] CCNT = 1)\'bf\'a1 \'b4\'eb\'c7\'d1 TRP\'b8\'a6 \'c1\'a6\'c3\'e2\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
For AB-synchronized transfers, the EDMA_TPCC always submits a TRP for EDMA_TPCC_ABCNT_n[15:0] ACNT bytes of BCNT arrays (EDMA_TPCC_CCNT_n[15:0] CCNT = 1).\par
AB \'b5\'bf\'b1\'e2 \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec, EDMA_TPCC\'b4\'c2 \'c7\'d7\'bb\'f3 BCNT \'be\'ee\'b7\'b9\'c0\'cc\'c0\'c7 EDMA_TPCC_ABCNT_n [15 : 0] ACNT \'b9\'d9\'c0\'cc\'c6\'ae (EDMA_TPCC_CCNT_n [15 : 0] CCNT = 1)\'bf\'a1 \'b4\'eb\'c7\'d1 TRP\'b8\'a6 \'c1\'a6\'c3\'e2\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPTC is responsible for updating source and destination addresses within the array based on EDMA_TPCC_ABCNT_n[15:0] ACNT and EDMA_TPCC_OPT_n[10:8] FWID.\par
EDMA_TPTC\'b4\'c2 EDMA_TPCC_ABCNT_n [15 : 0] ACNT \'b9\'d7 EDMA_TPCC_OPT_n [10 : 8] FWID\'b8\'a6 \'b1\'e2\'b9\'dd\'c0\'b8\'b7\'ce \'be\'ee\'b7\'b9\'c0\'cc \'b3\'bb\'c0\'c7 \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2\'b8\'a6 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
For AB-synchronized transfers, the EDMA_TPTC is also responsible to update source and destination addresses between arrays based on EDMA_TPCC_BIDX_n[15:0] SBIDX and EDMA_TPCC_BIDX_n[31:16] DBIDX.\par
AB \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec, EDMA_TPTC\'b4\'c2 EDMA_TPCC_BIDX_n [15 : 0] SBIDX \'b9\'d7 EDMA_TPCC_BIDX_n [31:16] DBIDX\'b8\'a6 \'b1\'e2\'b9\'dd\'c0\'b8\'b7\'ce \'be\'ee\'b7\'b9\'c0\'cc \'b0\'a3\'c0\'c7 \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2\'b8\'a6 \'b0\'bb\'bd\'c5 \'c7\'d2 \'c3\'a5\'c0\'d3\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
NOTE: The EDMA_TPCC includes no special hardware to detect when an indexed address update calculation overflows/underflows.\par
\'c2\'fc\'b0\'ed : EDMA_TPCC\'bf\'a1\'b4\'c2 \'c0\'ce\'b5\'a6\'bd\'cc \'b5\'c8 \'c1\'d6\'bc\'d2 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae \'b0\'e8\'bb\'ea\'c0\'cc \'bf\'c0\'b9\'f6\'c7\'c3\'b7\'ce / \'be\'f0\'b4\'f5 \'c7\'c3\'b7\'ce\'bf\'ec \'c7\'d2 \'b6\'a7 \'b0\'a8\'c1\'f6 \'c7\'d2 \'c6\'af\'ba\'b0\'c7\'d1 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee\'b0\'a1 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The address update will wrap across boundaries as programmed by the user.\par
\'c1\'d6\'bc\'d2 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b4\'c2 \'bb\'e7\'bf\'eb\'c0\'da\'b0\'a1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c7\'d1\'b4\'eb\'b7\'ce \'b0\'e6\'b0\'e8\'b8\'a6 \'b3\'d1\'be\'ee \'b0\'a8\'b4\'cf\'b4\'d9.\par
\par
 It should ensure that no transfer is allowed to cross internal port boundaries between peripherals.\par
\'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1 \'b0\'a3\'c0\'c7 \'b3\'bb\'ba\'ce \'c6\'f7\'c6\'ae \'b0\'e6\'b0\'e8\'b8\'a6 \'b0\'a1\'b7\'ce \'c1\'f6\'b8\'a3\'b4\'c2 \'c0\'fc\'bc\'db\'c0\'cc \'c7\'e3\'bf\'eb\'b5\'c7\'c1\'f6 \'be\'ca\'be\'c6\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
 A single TR must target a single source/destination slave endpoint.\par
  \'b4\'dc\'c0\'cf TR\'c0\'ba \'b4\'dc\'c0\'cf \'bc\'d2\'bd\'ba / \'b8\'f1\'c0\'fb\'c1\'f6 \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea \'bf\'a3\'b5\'e5 \'c6\'f7\'c0\'ce\'c6\'ae\'b8\'a6 \'b4\'eb\'bb\'f3\'c0\'b8\'b7\'ce\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.3.7 Linking Transfers\par
16.2.5.3.7 \'c0\'fc\'bc\'db \'bf\'ac\'b0\'e1\par
\par
The EDMA_TPCC provides a mechanism known as linking, which allows the entire PaRAM set to be reloaded from a location within the PaRAM memory map (for both DMA and QDMA channels).\par
EDMA_TPCC\'b4\'c2 PaRAM \'b8\'de\'b8\'f0\'b8\'ae \'b8\'ca (DMA \'b9\'d7 QDMA \'c3\'a4\'b3\'ce \'b8\'f0\'b5\'ce) \'b3\'bb\'c0\'c7 \'c0\'a7\'c4\'a1\'bf\'a1\'bc\'ad \'c0\'fc\'c3\'bc PaRAM \'bc\'bc\'c6\'ae\'b8\'a6 \'b4\'d9\'bd\'c3\'b7\'ce\'b5\'e5 \'c7\'d2 \'bc\'f6\'c0\'d6\'b4\'c2 \'bf\'ac\'b0\'e1\'c0\'cc\'b6\'f3\'b4\'c2 \'b8\'de\'c4\'bf\'b4\'cf\'c1\'f2\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Linking is especially useful for maintaining ping-pong buffers, circular buffering, and repetitive/continuous transfers with no CPU intervention.\par
\'b8\'b5\'c5\'a9\'b4\'c2 \'c7\'ce\'c6\'fe \'b9\'f6\'c6\'db \'bc\'f8\'c8\'af \'b9\'f6\'c6\'db\'b8\'b5 \'b9\'d7 CPU \'b0\'b3\'c0\'d4\'be\'f8\'c0\'cc \'b9\'dd\'ba\'b9 / \'bf\'ac\'bc\'d3 \'c0\'fc\'bc\'db\'c0\'bb \'c0\'af\'c1\'f6\'c7\'cf\'b4\'c2 \'b5\'a5 \'c6\'af\'c8\'f7 \'c0\'af\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Upon completion of a transfer, the current transfer parameters are reloaded with the parameter set pointed that the 16-bit link address field of the current parameter set points to.\par
\'c0\'fc\'bc\'db\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'b8\'e9 \'c7\'f6\'c0\'e7 \'c0\'fc\'bc\'db \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b4\'c2 \'c7\'f6\'c0\'e7 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'c1\'fd\'c7\'d5\'c0\'c7 16 \'ba\'f1\'c6\'ae \'b8\'b5\'c5\'a9 \'c1\'d6\'bc\'d2 \'c7\'ca\'b5\'e5\'b0\'a1 \'b0\'a1\'b8\'ae\'c5\'b0\'b4\'c2 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'c1\'fd\'c7\'d5\'c0\'b8\'b7\'ce \'b4\'d9\'bd\'c3\'b7\'ce\'b5\'e5\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Linking only occurs when the EDMA_TPCC_OPT_n[3] STATIC bit is cleared.\par
\'b8\'b5\'c5\'a9\'b4\'c2 EDMA_TPCC_OPT_n [3] STATIC \'ba\'f1\'c6\'ae\'b0\'a1 \'c1\'f6\'bf\'f6\'c1\'fa \'b6\'a7\'b8\'b8 \'b9\'df\'bb\'fd\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
NOTE: It should always link a transfer (EDMA or QDMA) to another useful transfer.\par
\'c2\'fc\'b0\'ed : \'c7\'d7\'bb\'f3 \'c0\'fc\'bc\'db (EDMA \'b6\'c7\'b4\'c2 QDMA)\'c0\'bb \'b4\'d9\'b8\'a5 \'c0\'af\'bf\'eb\'c7\'d1 \'c0\'fc\'bc\'db\'bf\'a1 \'bf\'ac\'b0\'e1\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
If it must terminate a transfer, then link the transfer to a NULL parameter set.\par
\'c0\'fc\'bc\'db\'c0\'bb \'c1\'be\'b7\'e1\'c7\'d8\'be\'df\'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec \'c0\'fc\'bc\'db\'c0\'bb NULL \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'bc\'bc\'c6\'ae\'bf\'a1 \'bf\'ac\'b0\'e1\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
Refer to Section 16.2.5.3.3 Null PaRAM Set.\par
Section 16.2.5.3.3 Null PaRAM Set\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
The link update occurs after the current PaRAM set event parameters have been exhausted.\par
\'b8\'b5\'c5\'a9 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b4\'c2 \'c7\'f6\'c0\'e7 PaRAM \'bc\'bc\'c6\'ae \'c0\'cc\'ba\'a5\'c6\'ae \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b0\'a1 \'b8\'f0\'b5\'ce \'bc\'d2\'b8\'f0 \'b5\'c8 \'c8\'c4\'bf\'a1 \'b9\'df\'bb\'fd\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
An event's parameters are exhausted when the EDMA channel controller has submitted all of the transfers that are associated with the PaRAM set.\par
EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b0\'a1 PaRAM \'bc\'bc\'c6\'ae\'bf\'cd \'b0\'fc\'b7\'c3\'b5\'c8 \'b8\'f0\'b5\'e7 \'c0\'fc\'bc\'db\'c0\'bb \'c1\'a6\'c3\'e2\'c7\'cf\'b8\'e9 \'c0\'cc\'ba\'a5\'c6\'ae \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b0\'a1 \'b8\'f0\'b5\'ce \'bc\'d2\'b8\'f0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
A link update occurs for null and dummy transfers depending on the state of the EDMA_TPCC_OPT_n[3] STATIC bit and the EDMA_TPCC_LNK_n[15:0] LINK field.\par
  EDMA_TPCC_LNK_n [15 : 0] LINK\'c0\'c7 \'b0\'aa\'c0\'cc FFFFh \'c0\'ce \'b0\'e6\'bf\'ec, null PaRAM \'bc\'bc\'c6\'ae (\'b8\'f0\'b5\'ce 0 \'b9\'d7 EDMA_TPCC_LNK_n [15 : 0] LINK\'b0\'a1 FFFFh\'b7\'ce \'bc\'b3\'c1\'a4 \'b5\'ca)\'b0\'a1 \'c7\'f6\'c0\'e7 PaRAM\'bf\'a1 \'b1\'e2\'b7\'cf\'b5\'cb\'b4\'cf\'b4\'d9 (null \'b6\'c7\'b4\'c2 dummy) \'bc\'bc\'c6\'ae.\par
\par
 In both cases (null or dummy), if the value of EDMA_TPCC_LNK_n[15:0] LINK is FFFFh, then a null PaRAM set (with all 0s and EDMA_TPCC_LNK_n[15:0] LINK set to FFFFh) is written to the current PaRAM set.\par
\'ba\'f1\'bd\'c1\'c7\'cf\'b0\'d4, EDMA_TPCC_LNK_n [15 : 0] LINK\'b0\'a1 FFFFh \'c0\'cc\'bf\'dc\'c0\'c7 \'b0\'aa\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'c7\'b8\'e9 EDMA_TPCC_LNK_n [15 : 0] LINK\'b0\'a1 \'b0\'a1\'b8\'ae\'c5\'b0\'b4\'c2 \'c0\'fb\'c0\'fd\'c7\'d1 PaRAM \'c0\'a7\'c4\'a1\'b0\'a1 \'c7\'f6\'c0\'e7 PaRAM \'bc\'bc\'c6\'ae\'b7\'ce \'ba\'b9\'bb\'e7\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Similarly, if EDMA_TPCC_LNK_n[15:0] LINK is set to a value other than FFFFh, then the appropriate PaRAM location that EDMA_TPCC_LNK_n[15:0] LINK points to is copied to the current PaRAM set.\par
\'b8\'b5\'c5\'a9 \'b0\'bb\'bd\'c5\'c0\'ba EDMA_TPCC_OPT_n [3] STATIC \'ba\'f1\'c6\'ae \'b9\'d7 EDMA_TPCC_LNK_n [15 : 0] \'b8\'b5\'c5\'a9 \'c7\'ca\'b5\'e5\'c0\'c7 \'bb\'f3\'c5\'c2\'bf\'a1 \'b5\'fb\'b6\'f3 \'b3\'ce (null) \'b9\'d7 \'b4\'f5\'b9\'cc (dummy) \'c0\'fc\'bc\'db\'bf\'a1 \'b4\'eb\'c7\'d8 \'b9\'df\'bb\'fd\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Once the channel completion conditions are met for an event, the transfer parameters that are located at the link address are loaded into the current DMA or QDMA channel\rquote s associated parameter set.\par
\'c0\'cc\'ba\'a5\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 \'c3\'a4\'b3\'ce \'bf\'cf\'b7\'e1 \'c1\'b6\'b0\'c7\'c0\'cc \'c3\'e6\'c1\'b7\'b5\'c7\'b8\'e9 \'b8\'b5\'c5\'a9 \'c1\'d6\'bc\'d2\'bf\'a1\'c0\'d6\'b4\'c2 \'c0\'fc\'bc\'db \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b0\'a1 \'c7\'f6\'c0\'e7 DMA \'b6\'c7\'b4\'c2 QDMA \'c3\'a4\'b3\'ce\'c0\'c7 \'b0\'fc\'b7\'c3 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'bc\'bc\'c6\'ae\'b7\'ce\'b7\'ce\'b5\'e5\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
This indicates that the EDMA_TPCC reads the entire set (eight words) from the PaRAM set specified by EDMA_TPCC_LNK_n[15:0] LINK and writes all eight words to the PaRAM set that is associated with the current channel.\par
\'c0\'cc\'b0\'cd\'c0\'ba EDMA_TPCC\'b0\'a1 EDMA_TPCC_LNK_n [15 : 0] LINK\'bf\'a1 \'c1\'f6\'c1\'a4\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'bf\'a1\'bc\'ad \'c0\'fc\'c3\'bc \'bc\'bc\'c6\'ae (8 \'b0\'b3 \'b4\'dc\'be\'ee)\'b8\'a6 \'c0\'d0\'b0\'ed \'c7\'f6\'c0\'e7 \'c3\'a4\'b3\'ce\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'bf\'a1 8 \'b0\'b3 \'b4\'dc\'be\'ee\'b8\'a6 \'b8\'f0\'b5\'ce \'be\'b2\'b4\'c2 \'b0\'cd\'c0\'bb \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
Figure 16-22 shows an example of a linked transfer.\par
\'b1\'d7\'b8\'b2 16-22\'b4\'c2 \'b8\'b5\'c5\'a9 \'b5\'c8 \'c0\'fc\'bc\'db\'c0\'c7 \'bf\'b9\'b8\'a6 \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
Any PaRAM set in the PaRAM can be used as a link/reload parameter set.\par
PaRAM\'bf\'a1 \'bc\'b3\'c1\'a4\'b5\'c8 PaRAM\'c0\'ba \'b8\'b5\'c5\'a9 / \'c0\'e7\'b7\'ce\'b5\'e5 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'bc\'bc\'c6\'ae\'b7\'ce \'bb\'e7\'bf\'eb\'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The PaRAM sets associated with peripheral synchronization events (refer to Section 16.2.5.6 Event, Channel, and PaRAM Mapping) only use for linking if the corresponding events are disabled.\par
\'c1\'d6\'ba\'af \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'cc\'ba\'a5\'c6\'ae (\'bc\'bd\'bc\'c7 16.2.5.6 \'c0\'cc\'ba\'a5\'c6\'ae, \'c3\'a4\'b3\'ce \'b9\'d7 PaRAM \'b8\'c5\'c7\'ce \'c2\'fc\'c1\'b6)\'bf\'cd \'b0\'fc\'b7\'c3\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'b4\'c2 \'c7\'d8\'b4\'e7 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'b0\'e6\'bf\'ec\'bf\'a1\'b8\'b8 \'bf\'ac\'b0\'e1\'bf\'a1 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
If a PaRAM set location is defined as a QDMA channel PaRAM set (by EDMA_TPCC_QCHMAPN_j register), then copying the link PaRAM set into the current QDMA channel PaRAM set is recognized as a trigger event.\par
PaRAM \'bc\'bc\'c6\'ae \'c0\'a7\'c4\'a1\'b0\'a1 QDMA \'c3\'a4\'b3\'ce PaRAM \'bc\'bc\'c6\'ae (EDMA_TPCC_QCHMAPN_j \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c0\'c7\'c7\'d8)\'b7\'ce \'c1\'a4\'c0\'c7\'b5\'c7\'b8\'e9, \'b8\'b5\'c5\'a9 PaRAM \'bc\'bc\'c6\'ae\'b8\'a6 \'c7\'f6\'c0\'e7 QDMA \'c3\'a4\'b3\'ce PaRAM \'bc\'bc\'c6\'ae\'b7\'ce \'ba\'b9\'bb\'e7\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'cc\'ba\'a5\'c6\'ae\'b7\'ce \'c0\'ce\'bd\'c4\'b5\'c8\'b4\'d9.\par
\par
It is latched in EDMA_TPCC_QER because a write to the trigger word was performed.\par
\'c6\'ae\'b8\'ae\'b0\'c5 \'b4\'dc\'be\'ee\'bf\'a1 \'b4\'eb\'c7\'d1 \'be\'b2\'b1\'e2\'b0\'a1 \'bc\'f6\'c7\'e0\'b5\'c7\'be\'fa\'c0\'b8\'b9\'c7\'b7\'ce EDMA_TPCC_QER\'bf\'a1 \'b7\'a1\'c4\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
This feature is used to create a linked list of transfers using a single QDMA channel and multiple PaRAM sets.\par
\'c0\'cc \'b1\'e2\'b4\'c9\'c0\'ba \'b4\'dc\'c0\'cf QDMA \'c3\'a4\'b3\'ce\'b0\'fa \'bf\'a9\'b7\'af PaRAM \'bc\'bc\'c6\'ae\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'bf\'ac\'b0\'e1 \'b8\'f1\'b7\'cf\'c0\'bb \'b8\'b8\'b5\'e5\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Refer to Section 16.2.5.4.2 QDMA Channels.\par
\'bc\'bd\'bc\'c7 16.2.5.4.2 QDMA \'c3\'a4\'b3\'ce\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
(p3784)Linking to itself replicates the behavior of auto-initialization, thus facilitating the use of circular buffering and repetitive transfers.\par
\'c0\'da\'c3\'bc \'b8\'b5\'c5\'a9\'b4\'c2 \'c0\'da\'b5\'bf \'c3\'ca\'b1\'e2\'c8\'ad\'c0\'c7 \'b5\'bf\'c0\'db\'c0\'bb \'ba\'b9\'c1\'a6\'c7\'cf\'b9\'c7\'b7\'ce \'bf\'f8\'c7\'fc \'b9\'f6\'c6\'db\'b8\'b5 \'b9\'d7 \'b9\'dd\'ba\'b9\'c0\'fb \'c0\'ce \'c0\'fc\'bc\'db\'c0\'bb \'bf\'eb\'c0\'cc\'c7\'cf\'b0\'d4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
After an EDMA channel exhausts its current PaRAM set, it reloads all of the parameter set entries from another PaRAM set, which is initialized with values that are identical to the original PaRAM set.\par
EDMA \'c3\'a4\'b3\'ce\'c0\'ba \'c7\'f6\'c0\'e7 PaRAM \'bc\'bc\'c6\'ae\'b8\'a6 \'bc\'d2\'b8\'f0 \'c7\'d1 \'c8\'c4 \'b4\'d9\'b8\'a5 PaRAM \'bc\'bc\'c6\'ae\'c0\'c7 \'b8\'f0\'b5\'e7 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'bc\'bc\'c6\'ae \'c7\'d7\'b8\'f1\'c0\'bb \'b4\'d9\'bd\'c3\'b7\'ce\'b5\'e5\'c7\'d5\'b4\'cf\'b4\'d9.\'c0\'cc PaRAM \'bc\'bc\'c6\'ae\'b4\'c2 \'bf\'f8\'b7\'a1 PaRAM \'bc\'bc\'c6\'ae\'bf\'cd \'b5\'bf\'c0\'cf\'c7\'d1 \'b0\'aa\'c0\'b8\'b7\'ce \'c3\'ca\'b1\'e2\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Figure 16-23 shows an example of a linked to self transfer.\par
\'b1\'d7\'b8\'b2 16-23\'c0\'ba\'c0\'da\'b0\'a1 \'c0\'fc\'bc\'db\'bf\'a1 \'b8\'b5\'c5\'a9 \'b5\'c8 \'bf\'b9\'b8\'a6 \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
 Here, the PaRAM set 511has the link field pointing to the address of parameter set 511 (linked to self).\par
  \'bf\'a9\'b1\'e2\'bc\'ad, PaRAM \'bc\'bc\'c6\'ae (511)\'b4\'c2 (\'c0\'da\'b1\'e2\'bf\'a1 \'b8\'b5\'c5\'a9 \'b5\'c8) \'c6\'c4\'b6\'f3\'b9\'cc\'c5\'cd \'bc\'bc\'c6\'ae (511)\'c0\'c7 \'be\'ee\'b5\'e5\'b7\'b9\'bd\'ba\'b8\'a6 \'b0\'a1\'b8\'ae\'c5\'b0\'b4\'c2 \'b8\'b5\'c5\'a9 \'c7\'ca\'b5\'e5\'b8\'a6 \'b0\'ae\'b4\'c2\'b4\'d9.\par
\par
 NOTE: If the in EDMA_TPCC_OPT_n[3] STATIC bit is set for a PaRAM set, then link updates are not performed.\par
\'c2\'fc\'b0\'ed : EDMA_TPCC_OPT_n [3] STATIC \'ba\'f1\'c6\'ae\'b0\'a1 PaRAM \'bc\'bc\'c6\'ae\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'c7\'b8\'e9 \'b8\'b5\'c5\'a9 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b0\'a1 \'bc\'f6\'c7\'e0\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.3.8 Constant Addressing Mode Transfers/Alignment Issues\par
16.2.5.3.8 \'c0\'cf\'c1\'a4\'c7\'d1 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5 \'c0\'fc\'bc\'db / \'c1\'a4\'b7\'c4 \'b9\'ae\'c1\'a6\par
\par
If either EDMA_TPCC_OPT_n[0] SAM or EDMA_TPCC_OPT_n[1] DAM is set (constant addressing mode), then the source or destination address must be aligned to a 256-bit aligned address, respectively, and the corresponding EDMA_TPCC_BIDX_n is an even multiple of 32 bytes (256 bits).\par
EDMA_TPCC_OPT_n [0] SAM \'b6\'c7\'b4\'c2 EDMA_TPCC_OPT_n [1] DAM\'c0\'cc \'bc\'b3\'c1\'a4\'b5\'c7\'b8\'e9 (\'bb\'f3\'bc\'f6 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5) \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2\'b4\'c2 \'b0\'a2\'b0\'a2 256 \'ba\'f1\'c6\'ae \'c1\'a4\'b7\'c4 \'c1\'d6\'bc\'d2\'b7\'ce \'c1\'a4\'b7\'c4\'b5\'c7\'be\'ee\'be\'df\'c7\'cf\'b8\'e7 \'c7\'d8\'b4\'e7 EDMA_TPCC_BIDX_n\'c0\'ba 32\'c0\'c7 \'c2\'a6\'bc\'f6 \'b9\'e8\'bc\'f6\'c0\'d4\'b4\'cf\'b4\'d9 \'b9\'d9\'c0\'cc\'c6\'ae (256 \'ba\'f1\'c6\'ae).\par
\par
The EDMA_TPCC does not recognize errors here, but the EDMA_TPTC asserts an error if this is not true.\par
EDMA_TPCC\'b4\'c2 \'bf\'a9\'b1\'e2\'bf\'a1\'bc\'ad \'bf\'c0\'b7\'f9\'b8\'a6 \'c0\'ce\'bd\'c4\'c7\'cf\'c1\'f6 \'b8\'f8\'c7\'cf\'c1\'f6\'b8\'b8, \'bb\'e7\'bd\'c7\'c0\'cc \'be\'c6\'b4\'d1 \'b0\'e6\'bf\'ec EDMA_TPTC\'b4\'c2 \'bf\'c0\'b7\'f9\'b8\'a6 \'c7\'a5\'bd\'c3\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Refer to Section 16.2.5.12.3 Error Generation.\par
\'bc\'bd\'bc\'c7 16.2.5.12.3 \'bf\'c0\'b7\'f9 \'bb\'fd\'bc\'ba\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
NOTE: The constant addressing (CONST) mode has limited applicability.\par
\'c2\'fc\'b0\'ed : \'bb\'f3\'bc\'f6 \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc (CONST) \'b8\'f0\'b5\'e5\'b4\'c2 \'c0\'fb\'bf\'eb \'b9\'fc\'c0\'a7\'b0\'a1 \'c1\'a6\'c7\'d1\'c0\'fb\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
The EDMA is configured for the constant addressing mode (EDMA_TPCC_OPT_n[0] SAM / EDMA_TPCC_OPT_n[1] DAM = 1) only if the transfer source or destination (on-chip memory, off-chip memory controllers, slave peripherals) support the constant addressing mode.\par
\'c0\'fc\'bc\'db \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b8\'f1\'c0\'fb\'c1\'f6 (\'bf\'c2 - \'c4\'a8 \'b8\'de\'b8\'f0\'b8\'ae, \'bf\'c0\'c7\'c1 - \'c4\'a8 \'b8\'de\'b8\'f0\'b8\'ae \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af, \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1)\'b0\'a1 \'bb\'f3\'bc\'f6 \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc\'c0\'bb \'c1\'f6\'bf\'f8\'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec\'bf\'a1\'b8\'b8 EDMA\'b0\'a1 \'bb\'f3\'bc\'f6 \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5 (EDMA_TPCC_OPT_n [0] SAM / EDMA_TPCC_OPT_n [1] DAM = 1) \'b9\'e6\'b9\'fd.\par
\par
 If the constant addressing mode is not supported, the similar logical transfer can be achieved using the increment (INCR) mode (EDMA_TPCC_OPT_n[0] SAM / EDMA_TPCC_OPT_n[1] DAM =0) by appropriately programming the count and indices values.\par
  \'bb\'f3\'bc\'f6 \'be\'ee\'b5\'e5\'b7\'b9\'bd\'cc \'b8\'f0\'b5\'e5\'b0\'a1 \'c1\'f6\'bf\'f8\'b5\'c7\'c1\'f6 \'be\'ca\'b4\'c2 \'b0\'e6\'bf\'ec \'c4\'ab\'bf\'ee\'c6\'ae \'b9\'d7 \'c0\'ce\'b5\'a6\'bd\'ba \'b0\'aa\'c0\'bb \'c0\'fb\'c0\'fd\'c8\'f7 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'cf\'bf\'a9 INCR (\'c1\'f5\'ba\'d0) \'b8\'f0\'b5\'e5 (EDMA_TPCC_OPT_n [0] SAM / EDMA_TPCC_OPT_n [1] DAM = 0)\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'c0\'af\'bb\'e7\'c7\'d1 \'b3\'ed\'b8\'ae \'c0\'fc\'bc\'db\'c0\'bb \'bc\'f6\'c7\'e0 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.3.9 Element Size\par
16.2.5.3.9 \'bf\'e4\'bc\'d2 \'c5\'a9\'b1\'e2\par
\par
The EDMA controller does not use element-size and element-indexing.\par
EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'bf\'e4\'bc\'d2 \'c5\'a9\'b1\'e2 \'b9\'d7 \'bf\'e4\'bc\'d2 \'bb\'f6\'c0\'ce\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Instead, all transfers are defined in terms of all three dimensions:\par
\'b4\'eb\'bd\'c5 \'b8\'f0\'b5\'e7 \'c0\'fc\'bc\'db\'c0\'ba \'bc\'bc \'b0\'a1\'c1\'f6 \'c2\'f7\'bf\'f8\'c0\'b8\'b7\'ce \'c1\'a4\'c0\'c7\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 EDMA_TPCC_ABCNT_n[15:0] ACNT, EDMA_TPCC_ABCNT_n[31:16] BCNT, and EDMA_TPCC_CCNT_n[15:0] CCNT.\par
  EDMA_TPCC_ABCNT_n [15 : 0] ACNT, EDMA_TPCC_ABCNT_n [31:16] BCNT \'b9\'d7 EDMA_TPCC_CCNT_n [15 : 0] CCNT\'b8\'a6 \'c6\'f7\'c7\'d4\'c7\'d1\'b4\'d9.\par
\par
An element-indexed transfer is logically achieved by programming EDMA_TPCC_ABCNT_n[15:0] ACNT to the size of the element and EDMA_TPCC_ABCNT_n[31:16] BCNT to the number of elements that need to be transferred.\par
\'bf\'e4\'bc\'d2 \'c0\'ce\'b5\'a6\'bd\'ba \'c0\'fc\'bc\'db\'c0\'ba EDMA_TPCC_ABCNT_n [15 : 0] ACNT\'b8\'a6 \'bf\'e4\'bc\'d2\'c0\'c7 \'c5\'a9\'b1\'e2\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'cf\'b0\'ed EDMA_TPCC_ABCNT_n [31:16] BCNT\'b8\'a6 \'c0\'fc\'bc\'db\'c7\'d8\'be\'df\'c7\'cf\'b4\'c2 \'bf\'e4\'bc\'d2 \'bc\'f6\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'cf\'bf\'a9 \'b3\'ed\'b8\'ae\'c0\'fb\'c0\'b8\'b7\'ce \'bc\'f6\'c7\'e0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
For example: If there are 16-bit audio data and 256 audio samples that must be transferred to a serial port, therefore the EDMA_TPCC_ABCNT_n[15:0] ACNT = 2 (2 bytes) and EDMA_TPCC_ABCNT_n[31:16] BCNT = 256.\par
\'bf\'b9 : 16 \'ba\'f1\'c6\'ae \'bf\'c0\'b5\'f0\'bf\'c0 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd 256 \'b0\'b3\'c0\'c7 \'bf\'c0\'b5\'f0\'bf\'c0 \'bb\'f9\'c7\'c3\'c0\'cc \'c1\'f7\'b7\'c4 \'c6\'f7\'c6\'ae\'b7\'ce \'c0\'fc\'bc\'db\'b5\'c7\'be\'ee\'be\'df\'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec EDMA_TPCC_ABCNT_n [15 : 0] ACNT = 2 (2 \'b9\'d9\'c0\'cc\'c6\'ae) \'b9\'d7 EDMA_TPCC_ABCNT_n [31:16] BCNT = 256\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
16.2.5.4 Initiating a DMA Transfer\par
16.2.5.4 DMA \'c0\'fc\'bc\'db \'bd\'c3\'c0\'db\'c7\'cf\'b1\'e2\par
\par
There are multiple ways to initiate a programmed data transfer using the EDMA_TPCC channel controller.\par
EDMA_TPCC \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c8 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'bc\'db\'c0\'bb \'bd\'c3\'c0\'db\'c7\'cf\'b4\'c2 \'bf\'a9\'b7\'af \'b0\'a1\'c1\'f6 \'b9\'e6\'b9\'fd\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Transfers on DMA channels are initiated by three sources.\par
DMA \'c3\'a4\'b3\'ce\'c0\'c7 \'c0\'fc\'bc\'db\'c0\'ba \'bc\'bc \'b0\'a1\'c1\'f6 \'bc\'d2\'bd\'ba\'b7\'ce \'bd\'c3\'c0\'db\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
They are listed as follows:\par
\'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'cc \'b3\'aa\'bf\'ad\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  Event-triggered transfer request (this is the typical usage of EDMA controller): A peripheral, system, or externally-generated event triggers a transfer request.\par
\bullet  \'c0\'cc\'ba\'a5\'c6\'ae \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (\'c0\'cc\'b0\'cd\'c0\'ba EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 \'c0\'cf\'b9\'dd\'c0\'fb\'c0\'ce \'bb\'e7\'bf\'eb\'b9\'fd \'c0\'d3) : \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1, \'bd\'c3\'bd\'ba\'c5\'db \'b6\'c7\'b4\'c2 \'bf\'dc\'ba\'ce\'bf\'a1\'bc\'ad \'bb\'fd\'bc\'ba \'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'bb \'c6\'ae\'b8\'ae\'b0\'c5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Manually-triggered transfer request:The CPU manually triggers a transfer by writing a 1 to the corresponding bit in the event set registers (EDMA_TPCC_ESR / EDMA_TPCC_ESRH).\par
\bullet  \'bc\'f6\'b5\'bf \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb : CPU\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae \'bc\'bc\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (EDMA_TPCC_ESR / EDMA_TPCC_ESRH)\'c0\'c7 \'c7\'d8\'b4\'e7 \'ba\'f1\'c6\'ae\'bf\'a1 1\'c0\'bb \'be\'b2\'b8\'e9 \'bc\'f6\'b5\'bf\'c0\'b8\'b7\'ce \'c0\'fc\'bc\'db\'c0\'bb \'c6\'ae\'b8\'ae\'b0\'c5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Chain-triggered transfer request: A transfer is triggered on the completion of another transfer or subtransfer.\par
\bullet  \'c3\'bc\'c0\'ce \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb : \'b4\'d9\'b8\'a5 \'c0\'fc\'bc\'db \'b6\'c7\'b4\'c2 \'c7\'cf\'c0\'a7 \'c0\'fc\'bc\'db\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'b8\'e9 \'c0\'fc\'bc\'db\'c0\'cc \'c6\'ae\'b8\'ae\'b0\'c5\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Transfers on QDMA channels are initiated by two sources. They are as follows:\par
QDMA \'c3\'a4\'b3\'ce\'c0\'bb \'c5\'eb\'c7\'d1 \'c0\'fc\'bc\'db\'c0\'ba \'b5\'ce \'b0\'a1\'c1\'f6 \'bc\'d2\'bd\'ba\'bf\'a1 \'c0\'c7\'c7\'d8 \'bd\'c3\'c0\'db\'b5\'cb\'b4\'cf\'b4\'d9. \'b1\'d7\'b5\'e9\'c0\'ba \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'bd\'c0\'b4\'cf\'b4\'d9 :\par
\par
\bullet  Auto-triggered transfer request: Writing to the programmed trigger word triggers a transfer.\par
\bullet  \'c0\'da\'b5\'bf \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb : \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c8 \'c6\'ae\'b8\'ae\'b0\'c5 \'bf\'f6\'b5\'e5\'bf\'a1 \'be\'b2\'b1\'e2\'b0\'a1 \'c0\'fc\'bc\'db\'c0\'bb \'c6\'ae\'b8\'ae\'b0\'c5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Link-triggered transfer requests: Writing to the trigger word triggers the transfer when linking occurs.\par
\bullet  \'b8\'b5\'c5\'a9 \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb : \'bf\'ac\'b0\'e1\'c0\'cc \'b9\'df\'bb\'fd\'c7\'d2 \'b6\'a7 \'c6\'ae\'b8\'ae\'b0\'c5 \'bf\'f6\'b5\'e5\'bf\'a1 \'be\'b2\'b1\'e2\'b0\'a1 \'c0\'fc\'bc\'db\'c0\'bb \'c6\'ae\'b8\'ae\'b0\'c5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.4.1 DMA Channel\par
16.2.5.4.1 DMA \'c3\'a4\'b3\'ce\par
\par
16.2.5.4.1.1 Event-Triggered Transfer Request\par
16.2.5.4.1.1 \'c0\'cc\'ba\'a5\'c6\'ae \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\par
\par
When an event is asserted from a peripheral or device pins, it gets latched in the corresponding bit of the event register (EDMA_TPCC_ER[31:0] En = 1).\par
\'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1 \'b3\'aa \'c0\'e5\'c4\'a1 \'c7\'c9\'c0\'b8\'b7\'ce\'ba\'ce\'c5\'cd \'be\'ee\'bc\'ad \'c6\'ae\'b5\'c7\'b8\'e9 \'c0\'cc\'ba\'a5\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'c7\'d8\'b4\'e7 \'ba\'f1\'c6\'ae (EDMA_TPCC_ER [31 : 0] En = 1)\'bf\'a1 \'b7\'a1\'c4\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
For more information about peripheral events to EDMA events mapping, refer to the device data manual.\par
EDMA \'c0\'cc\'ba\'a5\'c6\'ae \'b8\'ca\'c7\'ce\'bf\'a1 \'b4\'eb\'c7\'d1 \'c1\'d6\'ba\'af \'c0\'cc\'ba\'a5\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'c1\'a4\'ba\'b8\'b4\'c2 \'b5\'f0\'b9\'d9\'c0\'cc\'bd\'ba \'b5\'a5\'c0\'cc\'c5\'cd \'b8\'c5\'b4\'ba\'be\'f3\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
If the corresponding event in the event enable register (EDMA_TPCC_EER) is enabled (EDMA_TPCC_EER[31:0] En = 1), then the EDMA_TPCC prioritizes and queues the event in the appropriate event queue.\par
\'c0\'cc\'ba\'a5\'c6\'ae \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (EDMA_TPCC_EER)\'c0\'c7 \'c7\'d8\'b4\'e7 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'d1 \'b0\'e6\'bf\'ec (EDMA_TPCC_EER [31 : 0] En = 1), EDMA_TPCC\'b4\'c2 \'c7\'d8\'b4\'e7 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'cf\'b0\'ed \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'b3\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
When the event reaches the head of the queue, it is evaluated for submission as\par
a transfer request to the transfer controller.\par
\'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'c7 \'c7\'ec\'b5\'e5\'bf\'a1 \'b5\'b5\'b4\'de\'c7\'cf\'b8\'e9 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'b8\'b7\'ce\'bc\'ad \'c1\'a6\'c3\'e2\'c0\'bb \'c0\'a7\'c7\'d8 \'c6\'f2\'b0\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
If the PaRAM set is valid (not a NULL set), then a transfer request packet (TRP) is submitted to the EDMA_TPTC and the EDMA_TPCC_ER[31:0] En bit is cleared.\par
PaRAM \'bc\'bc\'c6\'ae\'b0\'a1 \'c0\'af\'c8\'bf\'c7\'cf\'b8\'e9 (NULL \'bc\'bc\'c6\'ae\'b0\'a1 \'be\'c6\'b4\'d1), \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb \'c6\'d0\'c5\'b6 (TRP)\'c0\'cc EDMA_TPTC\'bf\'a1 \'c1\'a6\'c3\'e2\'b5\'c7\'b0\'ed EDMA_TPCC_ER [31 : 0] En \'ba\'f1\'c6\'ae\'b0\'a1 \'c1\'f6\'bf\'f6\'c1\'fd\'b4\'cf\'b4\'d9.\par
\par
At this point, a new event can be safely received by the EDMA_TPCC.\par
\'c0\'cc \'bd\'c3\'c1\'a1\'bf\'a1\'bc\'ad \'bb\'f5 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 EDMA_TPCC\'b0\'a1 \'be\'c8\'c0\'fc\'c7\'cf\'b0\'d4 \'bc\'f6\'bd\'c5 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
If the PaRAM set associated with the channel is a NULL set (see Section 16.2.5.3.3 Null PaRAM Set), then no transfer request (TR) is submitted and the corresponding EDMA_TPCC_ER[31:0] En bit is cleared and simultaneously the corresponding channel bit is set in the event miss register (EDMA_TPCC_EMR[31:0] En = 1) to indicate that the event was discarded due to a null TR being serviced.\par
\'c3\'a4\'b3\'ce\'b0\'fa \'b0\'fc\'b7\'c3\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'b0\'a1 NULL \'bc\'bc\'c6\'ae (\'bc\'bd\'bc\'c7 16.2.5.3.3 Null PaRAM \'bc\'bc\'c6\'ae \'c2\'fc\'c1\'b6) \'c0\'ce \'b0\'e6\'bf\'ec \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR)\'c0\'cc \'c1\'a6\'c3\'e2\'b5\'c7\'c1\'f6 \'be\'ca\'b0\'ed \'c7\'d8\'b4\'e7 EDMA_TPCC_ER [31 : 0] En \'ba\'f1\'c6\'ae\'b0\'a1 \'c1\'f6\'bf\'f6\'c1\'f6\'b0\'ed \'b5\'bf\'bd\'c3\'bf\'a1 \'bb\'f3\'c0\'c0\'c7\'cf\'b4\'c2 \'c3\'a4\'b3\'ce \'ba\'f1\'c6\'ae\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'a9\'b6\'f4 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (EDMA_TPCC_EMR [31 : 0] En = 1)\'bf\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'be\'ee \'b3\'ce TR\'c0\'cc \'bc\'ad\'ba\'f1\'bd\'ba \'b5\'ca\'c0\'b8\'b7\'ce \'c0\'ce\'c7\'d8 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c6\'f3\'b1\'e2\'b5\'c7\'be\'fa\'c0\'bd\'c0\'bb \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
Good programming practices should include cleaning the event missed error before re-triggering the DMA channel.\par
\'c1\'c1\'c0\'ba \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'bb\'e7\'b7\'ca\'bf\'a1\'b4\'c2 DMA \'c3\'a4\'b3\'ce\'c0\'bb \'b4\'d9\'bd\'c3 \'c6\'ae\'b8\'ae\'b0\'c5\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'a9\'b6\'f4 \'bf\'c0\'b7\'f9\'b8\'a6 \'c1\'a6\'b0\'c5\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'c6\'f7\'c7\'d4\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
When an event is received, the corresponding event bit in the event register is set (EDMA_TPCC_ER[31:0] En = 1), regardless of the state of EDMA_TPCC_EER[31:0] En.\par
\'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'bc\'f6\'bd\'c5\'b5\'c7\'b8\'e9 EDMA_TPCC_EER [31 : 0] En\'c0\'c7 \'bb\'f3\'c5\'c2\'bf\'a1 \'b0\'fc\'b0\'e8\'be\'f8\'c0\'cc \'c0\'cc\'ba\'a5\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'c7\'d8\'b4\'e7 \'c0\'cc\'ba\'a5\'c6\'ae \'ba\'f1\'c6\'ae\'b0\'a1 \'bc\'b3\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9 (EDMA_TPCC_ER [31 : 0] En = 1).\par
\par
If the event is disabled when an external event is received (EDMA_TPCC_ER[31:0] En = 1 and EDMA_TPCC_EER[31:0] En = 0), the EDMA_TPCC_ER[31:0] En bit remains set.\par
\'bf\'dc\'ba\'ce \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'bc\'f6\'bd\'c5 \'b5\'c9 \'b6\'a7 (EDMA_TPCC_ER [31 : 0] En = 1 \'b9\'d7 EDMA_TPCC_EER [31 : 0] En = 0) \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'bb\'e7\'bf\'eb \'ba\'d2\'b0\'a1\'b4\'c9\'c7\'cf\'b8\'e9 EDMA_TPCC_ER [31 : 0] En \'ba\'f1\'c6\'ae\'b0\'a1 \'bc\'b3\'c1\'a4 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'af\'c1\'f6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
If the event is subsequently enabled (EDMA_TPCC_EER[31:0] En = 1), then the pending event is processed by the EDMA_TPCC and the TR is processed/submitted, after which the EDMA_TPCC_ER[31:0] En bit is cleared.\par
\'c0\'cc\'c8\'c4\'bf\'a1 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'cf\'b0\'d4\'b5\'c7\'b8\'e9 (EDMA_TPCC_EER [31 : 0] En = 1), \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 EDMA_TPCC\'bf\'a1 \'c0\'c7\'c7\'d8 \'c3\'b3\'b8\'ae\'b5\'c7\'b0\'ed TR\'c0\'cc \'c3\'b3\'b8\'ae / \'c1\'a6\'c3\'e2 \'b5\'c8 \'c8\'c4 EDMA_TPCC_ER [31 : 0] En \'ba\'f1\'c6\'ae\'b0\'a1 \'c1\'f6\'bf\'f6\'c1\'fd\'b4\'cf\'b4\'d9.\par
\par
If an event is being processed (prioritized or is in the event queue) and another sync event is received for the same channel prior to the original being cleared (EDMA_TPCC_ER[31:0] En != 0), then the second event is registered as a missed event in the corresponding bit of the event missed register (EDMA_TPCC_EMR[31:0] En = 1).\par
\'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c3\'b3\'b8\'ae \'c1\'df\'c0\'cf \'b6\'a7 (\'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b8\'c5\'b0\'dc \'c1\'f6\'b0\'c5\'b3\'aa \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'c0\'d6\'c0\'bd) \'bf\'f8\'ba\'bb\'c0\'cc \'bb\'e8\'c1\'a6\'b5\'c7\'b1\'e2 \'c0\'fc\'bf\'a1 \'b5\'bf\'c0\'cf\'c7\'d1 \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'d9\'b8\'a5 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'bc\'f6\'bd\'c5\'b5\'c7\'b8\'e9 (EDMA_TPCC_ER [31 : 0] En! = 0), \'b5\'ce \'b9\'f8\'c2\'b0 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'b5\'ee\'b7\'cf\'b5\'cb\'b4\'cf\'b4\'d9 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'a9\'b6\'f4 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (EDMA_TPCC_EMR [31 : 0] En = 1)\'c0\'c7 \'c7\'d8\'b4\'e7 \'ba\'f1\'c6\'ae\'bf\'a1\'bc\'ad \'b4\'a9\'b6\'f4 \'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae\'b7\'ce \'c3\'b3\'b8\'ae\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.4.1.2 Manually-Triggered Transfer Request\par
16.2.5.4.1.2  \'bc\'f6\'b5\'bf\'c0\'b8\'b7\'ce \'c6\'ae\'b8\'ae\'b0\'c5 \'b5\'c8 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\par
\par
The CPU or any peripheral device module initiates a DMA transfer by writing to the event set register EDMA_TPCC_ESR.\par
CPU \'b6\'c7\'b4\'c2 \'c0\'d3\'c0\'c7\'c0\'c7 \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1 \'b8\'f0\'b5\'e2\'c0\'ba \'c0\'cc\'ba\'a5\'c6\'ae \'bc\'bc\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_ESR\'bf\'a1 \'b1\'e2\'b7\'cf\'c7\'d4\'c0\'b8\'b7\'ce\'bd\'e1 DMA \'c0\'fc\'bc\'db\'c0\'bb \'b0\'b3\'bd\'c3\'c7\'d1\'b4\'d9.\par
\par
Writing a 1 to an event bit in the EDMA_TPCC_ESR results in the event being prioritized/queued in the appropriate event queue, regardless of the state of the EDMA_TPCC_EER[31:0] En bit.\par
EDMA_TPCC_ESR\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae \'ba\'f1\'c6\'ae\'bf\'a1 1\'c0\'bb \'b1\'e2\'b7\'cf\'c7\'cf\'b8\'e9 EDMA_TPCC_EER [31 : 0] En \'ba\'f1\'c6\'ae\'c0\'c7 \'bb\'f3\'c5\'c2\'bf\'a1 \'b0\'fc\'b0\'e8\'be\'f8\'c0\'cc \'c7\'d8\'b4\'e7 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'c1\'f6\'c1\'a4\'b5\'c7\'b0\'c5\'b3\'aa \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'b3\'d6\'be\'ee\'c1\'fd\'b4\'cf\'b4\'d9.\par
\par
When the event reaches the head of the queue, it is evaluated for submission as a transfer request to the transfer controller.\par
\'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'c7 \'c7\'ec\'b5\'e5\'bf\'a1 \'b5\'b5\'b4\'de\'c7\'cf\'b8\'e9 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'b8\'b7\'ce\'bc\'ad \'c1\'a6\'c3\'e2\'c0\'bb \'c0\'a7\'c7\'d8 \'c6\'f2\'b0\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
As in the event-triggered transfers, if the PaRAM set associated with the channel is valid (it is not a null set) then the TR is submitted to the associated EDMA_TPTC and the channel can be triggered again.\par
\'c0\'cc\'ba\'a5\'c6\'ae \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db\'b0\'fa \'b8\'b6\'c2\'f9\'b0\'a1\'c1\'f6\'b7\'ce \'c3\'a4\'b3\'ce\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'b0\'a1 \'c0\'af\'c8\'bf\'c7\'cf\'b8\'e9 (null \'bc\'bc\'c6\'ae\'b0\'a1 \'be\'c6\'b4\'d4) TR\'c0\'cc \'bf\'ac\'b0\'fc\'b5\'c8 EDMA_TPTC\'bf\'a1 \'c1\'a6\'c3\'e2\'b5\'c7\'b0\'ed \'c3\'a4\'b3\'ce\'c0\'bb \'b4\'d9\'bd\'c3 \'c6\'ae\'b8\'ae\'b0\'c5 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
If the PaRAM set associated with the channel is a NULL set (see Section 16.2.5.3.3 Null PaRAM Set), then no transfer request (TR) is submitted and the corresponding EDMA_TPCC_ER[31:0] En bit is cleared and simultaneously the corresponding channel bit is set in the event miss register EDMA_TPCC_EMR[31:0] En = 1 to indicate that the event was discarded due to a null TR being serviced.\par
\'c3\'a4\'b3\'ce\'b0\'fa \'b0\'fc\'b7\'c3\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'b0\'a1 NULL \'bc\'bc\'c6\'ae (\'bc\'bd\'bc\'c7 16.2.5.3.3 Null PaRAM \'bc\'bc\'c6\'ae \'c2\'fc\'c1\'b6) \'c0\'ce \'b0\'e6\'bf\'ec \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR)\'c0\'cc \'c1\'a6\'c3\'e2\'b5\'c7\'c1\'f6 \'be\'ca\'b0\'ed \'c7\'d8\'b4\'e7 EDMA_TPCC_ER [31 : 0] En \'ba\'f1\'c6\'ae\'b0\'a1 \'c1\'f6\'bf\'f6\'c1\'f6\'b0\'ed \'b5\'bf\'bd\'c3\'bf\'a1 \'c7\'d8\'b4\'e7 \'c3\'a4\'b3\'ce \'ba\'f1\'c6\'ae\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'a9\'b6\'f4 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_EMR [31 : 0] En = 1\'bf\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'be\'ee null TR\'c0\'cc \'bc\'ad\'ba\'f1\'bd\'ba \'b5\'ca\'c0\'b8\'b7\'ce \'c0\'ce\'c7\'d8 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'bb\'e8\'c1\'a6\'b5\'c7\'be\'fa\'c0\'bd\'c0\'bb \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
Good programming practices should include clearing the event missed error before re-triggering the DMA channel..\par
\'c1\'c1\'c0\'ba \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'bb\'e7\'b7\'ca\'bf\'a1\'b4\'c2 DMA \'c3\'a4\'b3\'ce\'c0\'bb \'b4\'d9\'bd\'c3 \'c6\'ae\'b8\'ae\'b0\'c5\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'a9\'b6\'f4 \'bf\'c0\'b7\'f9\'b8\'a6 \'c1\'f6\'bf\'ec\'b4\'c2 \'b0\'cd\'c0\'cc \'c6\'f7\'c7\'d4\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
If an event is being processed (prioritized or is in the event queue) and the same channel is manually set by a write to the corresponding channel bit of the event set register EDMA_TPCC_ESR[31:0] En = 1 prior to the original being cleared EDMA_TPCC_ESR[31:0] En = 0, then the second event is registered as a missed event in the corresponding bit of the event missed register EDMA_TPCC_EMR[31:0] En = 1.\par
\'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c3\'b3\'b8\'ae \'c1\'df\'c0\'cc\'b0\'c5\'b3\'aa (\'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'c1\'f6\'c1\'a4\'b5\'c7\'be\'fa\'b0\'c5\'b3\'aa \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'c0\'d6\'b4\'c2 \'b0\'e6\'bf\'ec) \'bf\'f8\'b7\'a1 \'c3\'a4\'b3\'ce\'c0\'cc \'bb\'e8\'c1\'a6\'b5\'c7\'b1\'e2 \'c0\'fc\'bf\'a1 \'c0\'cc\'ba\'a5\'c6\'ae \'bc\'bc\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_ESR [31 : 0] En = 1\'c0\'c7 \'c7\'d8\'b4\'e7 \'c3\'a4\'b3\'ce \'ba\'f1\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 \'be\'b2\'b1\'e2\'b7\'ce \'b5\'bf\'c0\'cf\'c7\'d1 \'c3\'a4\'b3\'ce\'c0\'cc \'bc\'f6\'b5\'bf\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'c7\'b4\'c2 \'b0\'e6\'bf\'ec EDMA_TPCC_ESR [31 : 0] En = 0\'c0\'cc\'b8\'e9 \'b5\'ce \'b9\'f8\'c2\'b0 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'b4\'a9\'b6\'f4 \'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae\'b7\'ce \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'a9\'b6\'f4 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_EMR [31 : 0] En = 1\'c0\'c7 \'c7\'d8\'b4\'e7 \'ba\'f1\'c6\'ae\'bf\'a1 \'b5\'ee\'b7\'cf\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.2.5.4.1.3 Chain-Triggered Transfer Request\par
\'c3\'bc\'c0\'ce \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb 16.2.5.4.1.3\par
\par
Chaining is a mechanism by which the completion of one transfer automatically sets the event for another channel.\par
\'c3\'bc\'c0\'ce \'bf\'ac\'b0\'e1\'c0\'ba \'c7\'cf\'b3\'aa\'c0\'c7 \'c0\'fc\'bc\'db\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'b8\'e9 \'c0\'da\'b5\'bf\'c0\'b8\'b7\'ce \'b4\'d9\'b8\'a5 \'c3\'a4\'b3\'ce\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'b4\'c2 \'b8\'de\'c4\'bf\'b4\'cf\'c1\'f2\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
When a chained completion code is detected, the value of which is dictated by the transfer completion code EDMA_TPCC_OPT_n[17:12] TCC of the PaRAM set associated with the channel, it results in the corresponding bit in the chained event register EDMA_TPCC_CER to be setEDMA_TPCC_CER[31:0] E[TCC] = 1).\par
\'c3\'a4\'b3\'ce\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'c0\'c7 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5 EDMA_TPCC_OPT_n [17:12] TCC\'bf\'a1 \'c0\'c7\'c7\'d8 \'b0\'aa\'c0\'cc \'b0\'e1\'c1\'a4\'b5\'c7\'b4\'c2 \'c3\'bc\'c0\'ce \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b0\'a1 \'b0\'a8\'c1\'f6\'b5\'c7\'b8\'e9 \'bf\'ac\'b0\'e1\'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_CER\'c0\'c7 \'c7\'d8\'b4\'e7 \'ba\'f1\'c6\'ae\'b0\'a1 setED_TPCC_CER [31 : 0] E [TCC] = 1 \'c0\'cc\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Once a bit is set in EDMA_TPCC_CER, the EDMA_TPCC prioritizes and queues the event in the appropriate event queue.\par
EDMA_TPCC_CER\'bf\'a1 \'ba\'f1\'c6\'ae\'b0\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'b8\'e9, EDMA_TPCC\'b4\'c2 \'c7\'d8\'b4\'e7 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'c0\'c7 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'cf\'b0\'ed \'c5\'a5\'bf\'a1 \'b4\'eb\'b1\'e2\'bd\'c3\'c5\'b5\'b4\'cf\'b4\'d9.\par
\par
When the event reaches the head of the queue, it is evaluated for submission as a transfer request to the transfer controller.\par
\'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'c7 \'c7\'ec\'b5\'e5\'bf\'a1 \'b5\'b5\'b4\'de\'c7\'cf\'b8\'e9 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'b8\'b7\'ce\'bc\'ad \'c1\'a6\'c3\'e2\'c0\'bb \'c0\'a7\'c7\'d8 \'c6\'f2\'b0\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
As in the event-triggered transfers, if the PaRAM set associated with the channel is valid (it is not a null set) then the TR is submitted to the associated EDMA_TPTC and the channel can be triggered again.\par
\'c0\'cc\'ba\'a5\'c6\'ae \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db\'b0\'fa \'b8\'b6\'c2\'f9\'b0\'a1\'c1\'f6\'b7\'ce \'c3\'a4\'b3\'ce\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'b0\'a1 \'c0\'af\'c8\'bf\'c7\'cf\'b8\'e9 (null \'bc\'bc\'c6\'ae\'b0\'a1 \'be\'c6\'b4\'d4) TR\'c0\'cc \'bf\'ac\'b0\'fc\'b5\'c8 EDMA_TPTC\'bf\'a1 \'c1\'a6\'c3\'e2\'b5\'c7\'b0\'ed \'c3\'a4\'b3\'ce\'c0\'bb \'b4\'d9\'bd\'c3 \'c6\'ae\'b8\'ae\'b0\'c5 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
If the PaRAM set associated with the channel is a NULL set (see Section 16.2.5.3.3 Null PaRAM Set), then no transfer request (TR) is submitted and the corresponding EDMA_TPCC_CER[31:0] En bit is cleared and simultaneously the corresponding channel bit is set in the event miss register EDMA_TPCC_EMR[31:0] En = 1 to indicate that the event was discarded due to a null TR being serviced.\par
\'c3\'a4\'b3\'ce\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'b0\'a1 NULL \'bc\'bc\'c6\'ae (\'bc\'bd\'bc\'c7 16.2.5.3.3 Null PaRAM Set \'c2\'fc\'c1\'b6) \'c0\'ce \'b0\'e6\'bf\'ec \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR)\'c0\'cc \'c1\'a6\'c3\'e2\'b5\'c7\'c1\'f6 \'be\'ca\'b0\'ed \'c7\'d8\'b4\'e7 EDMA_TPCC_CER [31 : 0] En \'ba\'f1\'c6\'ae\'b0\'a1 \'c1\'f6\'bf\'f6\'c1\'f6\'b0\'ed \'b5\'bf\'bd\'c3\'bf\'a1 \'c7\'d8\'b4\'e7 \'c3\'a4\'b3\'ce \'ba\'f1\'c6\'ae\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'a9\'b6\'f4 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_EMR [31 : 0] En = 1\'bf\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'be\'ee null TR\'c0\'cc \'bc\'ad\'ba\'f1\'bd\'ba \'b5\'ca\'c0\'b8\'b7\'ce \'c0\'ce\'c7\'d8 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'bb\'e8\'c1\'a6\'b5\'c7\'be\'fa\'c0\'bd\'c0\'bb \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
In this case, the error condition must be cleared before the DMA channel can be re-triggered.\par
\'c0\'cc \'b0\'e6\'bf\'ec DMA \'c3\'a4\'b3\'ce\'c0\'bb \'b4\'d9\'bd\'c3 \'c6\'ae\'b8\'ae\'b0\'c5\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 \'bf\'c0\'b7\'f9 \'c1\'b6\'b0\'c7\'c0\'bb \'c1\'f6\'bf\'f6\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Good programming practices might include clearing the event missed error before re-triggering the DMA channel.\par
\'c1\'c1\'c0\'ba \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'bb\'e7\'b7\'ca\'bf\'a1\'b4\'c2 DMA \'c3\'a4\'b3\'ce\'c0\'bb \'b4\'d9\'bd\'c3 \'c6\'ae\'b8\'ae\'b0\'c5\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'a9\'b6\'f4 \'bf\'c0\'b7\'f9\'b8\'a6 \'c1\'f6\'bf\'ec\'b4\'c2 \'b0\'cd\'c0\'cc \'c6\'f7\'c7\'d4\'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
If a chaining event is being processed (prioritized or queued) and another chained event is received for the same channel prior to the original being cleared EDMA_TPCC_CER[31:0] En != 0), then the second chained event is registered as a missed event in the corresponding channel bit of the event missed register EDMA_TPCC_EMR[31:0] En = 1.\par
\'bf\'ac\'bc\'e2 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c3\'b3\'b8\'ae (\'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'c1\'a4\'c7\'d8 \'c1\'f6\'b0\'c5\'b3\'aa \'c5\'a5\'bf\'a1 \'b4\'eb\'b1\'e2)\'b5\'c7\'be\'ee \'c0\'d6\'b0\'ed \'bf\'f8\'b7\'a1\'c0\'c7 EDMA_TPCC_CER [31 : 0] En! = 0\'c0\'cc \'c7\'d8\'c1\'a6\'b5\'c7\'b1\'e2 \'c0\'fc\'bf\'a1 \'b5\'bf\'c0\'cf\'c7\'d1 \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d8 \'b4\'d9\'b8\'a5 \'bf\'ac\'bc\'e2 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'bc\'f6\'bd\'c5\'b5\'c7\'b8\'e9, \'b5\'ce \'b9\'f8\'c2\'b0 \'bf\'ac\'bc\'e2 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c0\'cc\'ba\'a5\'c6\'ae \'b9\'df\'bb\'fd \'b5\'ee\'b7\'cf\'c0\'da\'c0\'c7 \'b4\'eb\'c0\'c0\'c7\'cf\'b4\'c2 \'c3\'a4\'b3\'ce \'ba\'f1\'c6\'ae MAMA_TPCC_EMR31 : 0En = 1. \'bf\'a1 \'b4\'a9\'b6\'f4 \'b5\'c8 \'b0\'cd\'c0\'b8\'b7\'ce \'b5\'ee\'b7\'cf\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
NOTE: Chained event registers EDMA_TPCC_CER, event registers EDMA_TPCC_ER, and event set registers EDMA_TPCC_ESR operate independently.\par
\'c2\'fc\'b0\'ed : \'c3\'bc\'c0\'ce\'c8\'ad \'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_CER, \'c0\'cc\'ba\'a5\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_ER \'b9\'d7 \'c0\'cc\'ba\'a5\'c6\'ae \'bc\'bc\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_ESR\'c0\'ba \'b5\'b6\'b8\'b3\'c0\'fb\'c0\'b8\'b7\'ce \'c0\'db\'b5\'bf\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
 An event En can be triggered by any of the trigger sources (event-triggered, manually-triggered, or chain-triggered).\par
 \'c0\'cc\'ba\'a5\'c6\'ae En\'c0\'ba \'c6\'ae\'b8\'ae\'b0\'c5 \'bc\'d2\'bd\'ba (\'c0\'cc\'ba\'a5\'c6\'ae \'c6\'ae\'b8\'ae\'b0\'c5, \'bc\'f6\'b5\'bf \'c6\'ae\'b8\'ae\'b0\'c5 \'b6\'c7\'b4\'c2 \'c3\'bc\'c0\'ce \'c6\'ae\'b8\'ae\'b0\'c5) \'c1\'df \'c7\'cf\'b3\'aa\'bf\'a1 \'c0\'c7\'c7\'d8 \'c6\'ae\'b8\'ae\'b0\'c5 \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.4.2 QDMA Channels\par
16.2.5.4.2 QDMA \'c3\'a4\'b3\'ce\par
\par
16.2.5.4.2.1 Auto-triggered and Link-Triggered Transfer Request\par
16.2.5.4.2.1 \'c0\'da\'b5\'bf \'c6\'ae\'b8\'ae\'b0\'c5 \'b9\'d7 \'b8\'b5\'c5\'a9 \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\par
\par
QDMA-based transfer requests are issued when a QDMA event gets latched in the QDMA event register EDMA_TPCC_QER[31:0] En = 1. A bit corresponding to a QDMA channel is set in the QDMA event register EDMA_TPCC_QER when the following occurs:\par
QDMA \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 QDMA \'c0\'cc\'ba\'a5\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_QER [31 : 0] En = 1\'bf\'a1\'bc\'ad \'b7\'a1\'c4\'a1 \'b5\'c9 \'b6\'a7 \'b9\'df\'c7\'e0\'b5\'c8\'b4\'d9. QDMA \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c0\'c0\'c7\'cf\'b4\'c2 \'ba\'f1\'c6\'ae\'b4\'c2 QDMA \'c0\'cc\'ba\'a5\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_QER\'bf\'a1\'bc\'ad \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'c0\'ba \'b0\'e6\'bf\'ec\'bf\'a1 \'bc\'b3\'c1\'a4\'b5\'c8\'b4\'d9.\par
\par
\bullet  A CPU (or any device module) write occurs to a PaRAM address that is defined as a QDMA channel trigger word (programmed in the QDMA channel mapping register EDMA_TPCC_QCHMAPN_j for the particular QDMA channel and the QDMA channel is enabled via the QDMA event enable registerEDMA_TPCC_QEER[31:0] En = 1.\par
\bullet  QDMA \'c3\'a4\'b3\'ce \'c6\'ae\'b8\'ae\'b0\'c5 \'bf\'f6\'b5\'e5 (\'c6\'af\'c1\'a4 QDMA \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d1 QDMA \'c3\'a4\'b3\'ce \'b8\'c5\'c7\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_QCHMAPN_j\'bf\'a1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'b5\'c7\'be\'ee \'c0\'d6\'b0\'ed QDMA \'c3\'a4\'b3\'ce\'c0\'ba QDMA \'c0\'cc\'ba\'a5\'c6\'ae \'c8\'b0\'bc\'ba\'c8\'ad \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_QEER [31 : 0] En = 1 \'b8\'a6 \'c5\'eb\'c7\'d8 \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'ca)\'b7\'ce \'c1\'a4\'c0\'c7 \'b5\'c8 PaRAM \'c1\'d6\'bc\'d2\'bf\'a1 CPU (\'b6\'c7\'b4\'c2 \'b8\'f0\'b5\'e7 \'c0\'e5\'c4\'a1 \'b8\'f0\'b5\'e2) \'be\'b2\'b1\'e2\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  EDMA_TPCC performs a link update on a PaRAM set address that is configured as a QDMA channel matches EDMA_TPCC_QCHMAPN_j settings and the corresponding channel is enabled via the QDMA event enable register EDMA_TPCC_QEER[31:0] En = 1.\par
\bullet  EDMA_TPCC\'b4\'c2 QDMA \'c3\'a4\'b3\'ce\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae \'c1\'d6\'bc\'d2\'b0\'a1 EDMA_TPCC_QCHMAPN_j \'bc\'b3\'c1\'a4\'b0\'fa \'c0\'cf\'c4\'a1\'c7\'cf\'b0\'ed \'c7\'d8\'b4\'e7 \'c3\'a4\'b3\'ce\'c0\'cc QDMA \'c0\'cc\'ba\'a5\'c6\'ae \'c8\'b0\'bc\'ba\'c8\'ad \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_QEER [31 : 0] En = 1\'c0\'bb \'c5\'eb\'c7\'d8 \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'bb\'f3\'c5\'c2\'bf\'a1\'bc\'ad \'b8\'b5\'c5\'a9 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b8\'a6 \'bc\'f6\'c7\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Once a bit is set in EDMA_TPCC_QER, the EDMA_TPCC prioritizes and queues the event in the appropriate event queue.\par
EDMA_TPCC_QER\'bf\'a1 \'ba\'f1\'c6\'ae\'b0\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'b8\'e9, EDMA_TPCC\'b4\'c2 \'c7\'d8\'b4\'e7 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'c0\'c7 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b8\'a6 \'c1\'f6\'c1\'a4\'c7\'cf\'b0\'ed \'c5\'a5\'bf\'a1 \'b4\'eb\'b1\'e2\'bd\'c3\'c5\'b5\'b4\'cf\'b4\'d9.\par
\par
When the event reaches the head of the queue, it is evaluated for submission as a transfer request to the transfer controller.\par
\'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'c7 \'c7\'ec\'b5\'e5\'bf\'a1 \'b5\'b5\'b4\'de\'c7\'cf\'b8\'e9 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'b8\'b7\'ce\'bc\'ad \'c1\'a6\'c3\'e2\'c0\'bb \'c0\'a7\'c7\'d8 \'c6\'f2\'b0\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
As in the event-triggered transfers, if the PaRAM set associated with the channel is valid (it is not a null set) then the TR is submitted to the associated EDMA_TPTC and the channel can be triggered again.\par
\'c0\'cc\'ba\'a5\'c6\'ae \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db\'b0\'fa \'b8\'b6\'c2\'f9\'b0\'a1\'c1\'f6\'b7\'ce \'c3\'a4\'b3\'ce\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'b0\'a1 \'c0\'af\'c8\'bf\'c7\'cf\'b8\'e9 (null \'bc\'bc\'c6\'ae\'b0\'a1 \'be\'c6\'b4\'d4) TR\'c0\'cc \'bf\'ac\'b0\'fc\'b5\'c8 EDMA_TPTC\'bf\'a1 \'c1\'a6\'c3\'e2\'b5\'c7\'b0\'ed \'c3\'a4\'b3\'ce\'c0\'bb \'b4\'d9\'bd\'c3 \'c6\'ae\'b8\'ae\'b0\'c5 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
If a bit is already set in EDMA_TPCC_QER[31:0] En = 1 and a second QDMA event for the same QDMA channel occurs prior to the original being cleared, the second QDMA event gets captured in the QDMA event miss register EDMA_TPCC_QEMR[7:0] En = 1.\par
EDMA_TPCC_QER [31 : 0] En = 1\'bf\'a1 \'ba\'f1\'c6\'ae\'b0\'a1 \'c0\'cc\'b9\'cc \'bc\'b3\'c1\'a4\'b5\'c7\'be\'ee \'c0\'d6\'b0\'ed \'b5\'bf\'c0\'cf\'c7\'d1 QDMA \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d1 \'b5\'ce \'b9\'f8\'c2\'b0 QDMA \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'bf\'f8\'b7\'a1 \'c1\'a6\'b0\'c5\'b5\'c7\'b1\'e2 \'c0\'fc\'bf\'a1 \'b9\'df\'bb\'fd\'c7\'cf\'b8\'e9 \'b5\'ce \'b9\'f8\'c2\'b0 QDMA \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 QDMA \'c0\'cc\'ba\'a5\'c6\'ae \'b9\'cc\'bd\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_QEMR [7 : 0] En = 1\'c0\'cc\'b4\'d9.\par
\par
16.2.5.4.3 Comparison Between DMA and QDMA Channels\par
16.2.5.4.3  DMA\'bf\'cd QDMA \'c3\'a4\'b3\'ce \'bb\'e7\'c0\'cc\'c0\'c7  \'ba\'f1\'b1\'b3\par
\par
The primary difference between DMA and QDMA channels is the event/channel synchronization.\par
DMA \'c3\'a4\'b3\'ce\'b0\'fa QDMA \'c3\'a4\'b3\'ce\'c0\'c7 \'c1\'d6\'bf\'e4 \'c2\'f7\'c0\'cc\'c1\'a1\'c0\'ba \'c0\'cc\'ba\'a5\'c6\'ae / \'c3\'a4\'b3\'ce \'b5\'bf\'b1\'e2\'c8\'ad\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
QDMA events are either auto-triggered or link triggered.\par
QDMA \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'c0\'da\'b5\'bf \'c6\'ae\'b8\'ae\'b0\'c5 \'b6\'c7\'b4\'c2 \'b8\'b5\'c5\'a9 \'c6\'ae\'b8\'ae\'b0\'c5\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Auto-triggering allows QDMA channels to be triggered by CPU(s) with a minimum number of linear writes to PaRAM.\par
\'c0\'da\'b5\'bf \'c6\'ae\'b8\'ae\'b0\'c5\'b8\'b5\'c0\'ba QDMA \'c3\'a4\'b3\'ce\'c0\'cc PaRAM\'bf\'a1 \'c3\'d6\'bc\'d2 \'bc\'b1\'c7\'fc \'be\'b2\'b1\'e2 \'c8\'bd\'bc\'f6\'b7\'ce CPU\'bf\'a1 \'c0\'c7\'c7\'d8 \'c6\'ae\'b8\'ae\'b0\'c5\'b5\'c7\'b5\'b5\'b7\'cf \'c7\'e3\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Link triggering allows a linked list of transfers to be executed, using a single QDMA PaRAM set and multiple link PaRAM sets.\par
\'b8\'b5\'c5\'a9 \'c6\'ae\'b8\'ae\'b0\'c5\'b8\'b5\'c0\'ba \'b4\'dc\'c0\'cf QDMA PaRAM \'bc\'bc\'c6\'ae \'b9\'d7 \'b4\'d9\'c1\'df \'b8\'b5\'c5\'a9 PaRAM \'bc\'bc\'c6\'ae\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'b8\'b5\'c5\'a9 \'b5\'c8 \'bf\'ac\'b0\'e1 \'b8\'f1\'b7\'cf\'c0\'cc \'bd\'c7\'c7\'e0\'b5\'c7\'b5\'b5\'b7\'cf\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
A QDMA transfer is triggered when a CPU (or other device modules) writes to the trigger word of the QDMA channel parameter set (auto-triggered) or when the EDMA_TPCC performs a link update on a PaRAM set that has been mapped to a QDMA channel (link triggered).\par
CPU (\'b6\'c7\'b4\'c2 \'b4\'d9\'b8\'a5 \'c0\'e5\'c4\'a1 \'b8\'f0\'b5\'e2)\'b0\'a1 QDMA \'c3\'a4\'b3\'ce \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'bc\'bc\'c6\'ae (\'c0\'da\'b5\'bf \'c6\'ae\'b8\'ae\'b0\'c5 \'b5\'ca)\'c0\'c7 \'c6\'ae\'b8\'ae\'b0\'c5 \'bf\'f6\'b5\'e5\'bf\'a1 \'be\'b2\'b0\'c5\'b3\'aa QDMA \'c3\'a4\'b3\'ce\'bf\'a1 \'b8\'c5\'c7\'ce \'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'bf\'a1\'bc\'ad EDMA_TPCC\'b0\'a1 \'b8\'b5\'c5\'a9 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b8\'a6 \'bc\'f6\'c7\'e0 \'c7\'d2 \'b6\'a7 QDMA \'c0\'fc\'bc\'db\'c0\'cc \'c6\'ae\'b8\'ae\'b0\'c5\'b5\'cb\'b4\'cf\'b4\'d9 (\'b8\'b5\'c5\'a9\'b0\'a1 \'c6\'ae\'b8\'ae\'b0\'c5 \'b5\'ca)..\par
\par
NOTE: The CPUs triggered (manually triggered) DMA channels, in addition to writing to the PaRAM set, it is required to write to the event set register EDMA_TPCC_ESR to kick-off the transfer.\par
\'c2\'fc\'b0\'ed : DMA \'c3\'a4\'b3\'ce\'c0\'bb \'c6\'ae\'b8\'ae\'b0\'c5 \'c7\'d1 (\'bc\'f6\'b5\'bf\'c0\'b8\'b7\'ce \'c6\'ae\'b8\'ae\'b0\'c5 \'c7\'d1) CPU\'b4\'c2 PaRAM \'bc\'bc\'c6\'ae\'bf\'a1 \'be\'b2\'b4\'c2 \'b0\'cd \'bf\'dc\'bf\'a1\'b5\'b5 \'c0\'fc\'bc\'db\'c0\'bb \'bd\'c3\'c0\'db\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 EDMA_TPCC_ESR \'c0\'cc\'ba\'a5\'c6\'ae \'bc\'bc\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'b1\'e2\'b7\'cf\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
QDMA channels are typically for cases where a single event accomplishes a complete transfer since the CPU (or other device modules) must reprogram some portion of the QDMA PaRAM set in order to retrigger the channel.\par
QDMA \'c3\'a4\'b3\'ce\'c0\'ba \'c0\'cf\'b9\'dd\'c0\'fb\'c0\'b8\'b7\'ce \'b4\'dc\'c0\'cf \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c3\'a4\'b3\'ce\'c0\'bb \'b4\'d9\'bd\'c3 \'c6\'ae\'b8\'ae\'b0\'c5\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 CPU (\'b6\'c7\'b4\'c2 \'b4\'d9\'b8\'a5 \'c0\'e5\'c4\'a1 \'b8\'f0\'b5\'e2)\'b0\'a1 QDMA PaRAM \'bc\'bc\'c6\'ae\'c0\'c7 \'c0\'cf\'ba\'ce\'b8\'a6 \'b4\'d9\'bd\'c3 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'d8\'be\'df\'c7\'cf\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'bf\'cf\'c0\'fc\'c7\'d1 \'c0\'fc\'bc\'db\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec\'bf\'a1 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
QDMA transfers are programmed with EDMA_TPCC_ABCNT_n[31:0] BCNT =1 and EDMA_TPCC_CCNT_n[15:0] CCNT = 1 for A-synchronized transfers, and EDMA_TPCC_CCNT_n[15:0] CCNT = 1 for AB-synchronized transfers.\par
QDMA \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec EDMA_TPCC_ABCNT_n [31 : 0] BCNT = 1 \'b9\'d7 EDMA_TPCC_CCNT_n [15 : 0] CCNT = 1, AB \'b5\'bf\'b1\'e2 \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec EDMA_TPCC_CCNT_n [15 : 0] CCNT = 1\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Additionally, since linking is also supported (if EDMA_TPCC_OPT_n[3] STATIC = 0) for QDMA transfers, it allows to initiate a linked list of QDMAs, so when EDMA_TPCC copies over a link PaRAM set (including the write to the trigger word), the current PaRAM set mapped to the QDMA channel automatically recognizes as a valid QDMA event and initiate another set of transfers as specified by the linked set.\par
\'b6\'c7\'c7\'d1 QDMA \'c0\'fc\'bc\'db\'c0\'bb \'c0\'a7\'c7\'d8 \'b8\'b5\'c5\'a9\'b0\'a1 \'c1\'f6\'bf\'f8\'b5\'c7\'b9\'c7\'b7\'ce (EDMA_TPCC_OPT_n [3] STATIC = 0 \'c0\'ce \'b0\'e6\'bf\'ec) QDMA\'c0\'c7 \'bf\'ac\'b0\'e1 \'b8\'f1\'b7\'cf\'c0\'bb \'bd\'c3\'c0\'db\'c7\'d2 \'bc\'f6 \'c0\'d6\'c0\'b8\'b9\'c7\'b7\'ce EDMA_TPCC\'b0\'a1 \'b8\'b5\'c5\'a9 PaRAM \'bc\'bc\'c6\'ae (\'c6\'ae\'b8\'ae\'b0\'c5 \'b4\'dc\'be\'ee\'bf\'a1 \'b4\'eb\'c7\'d1 \'be\'b2\'b1\'e2 \'c6\'f7\'c7\'d4)\'b8\'a6 \'c5\'eb\'c7\'d8 \'ba\'b9\'bb\'e7\'c7\'cf\'b8\'e9 QDMA \'c3\'a4\'b3\'ce\'bf\'a1 \'b8\'c5\'c7\'ce \'b5\'c8 \'c7\'f6\'c0\'e7 PaRAM \'bc\'bc\'c6\'ae\'b4\'c2 \'c0\'af\'c8\'bf\'c7\'d1 QDMA \'c0\'cc\'ba\'a5\'c6\'ae\'b7\'ce \'c0\'da\'b5\'bf \'c0\'ce\'bd\'c4\'c7\'cf\'b0\'ed \'b8\'b5\'c5\'a9 \'b5\'c8 \'bc\'bc\'c6\'ae\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'f6\'c1\'a4\'b5\'c8 \'b4\'d9\'b8\'a5 \'c0\'fc\'bc\'db \'bc\'bc\'c6\'ae\'b8\'a6 \'bd\'c3\'c0\'db\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.5 Completion of a DMA Transfer\par
16.2.5.5 DMA \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1\par
\par
A parameter set for a given channel is complete when the required number of transfer requests is submitted (based on receiving the number of synchronization events).\par
\'c1\'d6\'be\'ee\'c1\'f8 \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d8 \'bc\'b3\'c1\'a4\'b5\'c8 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b4\'c2 \'c7\'ca\'bf\'e4\'c7\'d1 \'bc\'f6\'c0\'c7 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'cc \'c1\'a6\'c3\'e2 \'b5\'c9 \'b6\'a7 \'bf\'cf\'b7\'e1\'b5\'cb\'b4\'cf\'b4\'d9 (\'b5\'bf\'b1\'e2\'c8\'ad \'c0\'cc\'ba\'a5\'c6\'ae \'bc\'f6\'b8\'a6 \'b1\'e2\'b9\'dd\'c0\'b8\'b7\'ce).\par
\par
The expected number of TRs for a non-null/non-dummy transfer is shown in Table 16-94 for both synchronization types along with state of the PaRAM set prior to the final TR being submitted.\par
\'b8\'b6\'c1\'f6\'b8\'b7 TR\'c0\'cc \'c1\'a6\'c3\'e2\'b5\'c7\'b1\'e2 \'c0\'fc\'bf\'a1 PaRAM \'bc\'bc\'c6\'ae\'c0\'c7 \'bb\'f3\'c5\'c2\'bf\'cd \'c7\'d4\'b2\'b2 \'b5\'ce \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'af\'c7\'fc \'b8\'f0\'b5\'ce\'bf\'a1 \'b4\'eb\'c7\'d8 \'b3\'ce\'c0\'cc \'be\'c6\'b4\'d1 / \'ba\'f1 - \'b4\'f5\'b9\'cc \'c0\'fc\'bc\'db\'bf\'a1 \'b4\'eb\'c7\'d1 \'bf\'b9\'bb\'f3 TR \'bc\'f6\'b0\'a1 \'c7\'a5 16-94\'bf\'a1 \'c7\'a5\'bd\'c3\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
When the counts (EDMA_TPCC_ABCNT_n[31:0] BCNT and/or EDMA_TPCC_CCNT_n[15:0] CCNT) are this value, the next TR results in:\par
\'c4\'ab\'bf\'ee\'c6\'ae (EDMA_TPCC_ABCNT_n [31 : 0] BCNT \'b9\'d7 / \'b6\'c7\'b4\'c2 EDMA_TPCC_CCNT_n [15 : 0] CCNT)\'b0\'a1\'c0\'cc \'b0\'aa\'c0\'cc\'b8\'e9, \'b4\'d9\'c0\'bd TR \'b0\'e1\'b0\'fa\'b4\'c2 \'b4\'d9\'c0\'bd\'b0\'fa \'b0\'b0\'b4\'d9.\par
\par
\bullet  Final chaining or interrupt codes sent by the transfer controllers (instead of intermediate).\par
\bullet  \'c0\'fc\'bc\'db \'c3\'bc\'c0\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b0\'a1 \'c0\'fc\'bc\'db \'c7\'d1 \'c3\'d6\'c1\'be \'c3\'bc\'c0\'ce \'b6\'c7\'b4\'c2 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c4\'da\'b5\'e5 (\'c1\'df\'b0\'a3 \'b4\'eb\'bd\'c5).\par
\par
\bullet  Link updates (linking to either null or another valid link set).\par
\bullet  \'b8\'b5\'c5\'a9 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae (null \'b6\'c7\'b4\'c2 \'b4\'d9\'b8\'a5 \'c0\'af\'c8\'bf\'c7\'d1 \'b8\'b5\'c5\'a9 \'bc\'bc\'c6\'ae\'bf\'a1 \'b8\'b5\'c5\'a9).\par
\par
(P 3878)Table 16-94. Expected Number of Transfers for Non-Null Transfer\par
\'c7\'a5 16-94. Null\'c0\'cc \'be\'c6\'b4\'d1 \'c0\'fc\'bc\'db\'bf\'a1 \'b4\'eb\'c7\'d1 \'bf\'b9\'bb\'f3 \'c0\'fc\'bc\'db \'c8\'bd\'bc\'f6\par
\par
The PaRAM OPT field must program with a specific transfer completion code TCC or EDMA_TPCC_OPT_n[17:12] TCC along with the other EDMA_TPCC_OPT_n fields ([22] TCCHEN, [20] TCINTEN, [23] ITCCHEN, and [21] ITCINTEN bits) to indicate whether the completion code is to be used for generating a chained event or/and for generating an interrupt upon completion of a transfer.\par
PaRAM OPT \'c7\'ca\'b5\'e5\'b4\'c2 \'b4\'d9\'b8\'a5 EDMA_TPCC_OPT_n \'c7\'ca\'b5\'e5 ([22] TCCHEN, [20] TCINTEN, [23] ITCCHEN \'b9\'d7 [21] ITCINTEN \'ba\'f1\'c6\'ae)\'bf\'cd \'c7\'d4\'b2\'b2 \'c6\'af\'c1\'a4 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5 TCC \'b6\'c7\'b4\'c2 EDMA_TPCC_OPT_n [17:12] TCC\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9. \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b0\'a1 \'c3\'bc\'c0\'ce\'c8\'ad \'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'cf\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2\'c1\'f6 \'b6\'c7\'b4\'c2 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1\'bd\'c3 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'d2\'c1\'f6 \'bf\'a9\'ba\'ce\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
The specific EDMA_TPCC_OPT_n[17:12] TCC value (6-bit binary value) programmed dictates which of the 64-bits in the chain event register EDMA_TPCC_CER [TCC] and/or interrupt pending register EDMA_TPCC_IPR [TCC] is set.\par
\'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c8 \'c6\'af\'c1\'a4 EDMA_TPCC_OPT_n [17:12] TCC \'b0\'aa (6 \'ba\'f1\'c6\'ae \'c0\'cc\'c1\'f8 \'b0\'aa)\'c0\'ba \'c3\'bc\'c0\'ce \'c0\'cc\'ba\'a5\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_CER [TCC] \'b9\'d7 / \'b6\'c7\'b4\'c2 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'ba\'b8\'b7\'f9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_IPR [TCC]\'c0\'c7 64 \'ba\'f1\'c6\'ae \'c1\'df \'be\'ee\'b4\'c0 \'b0\'cd\'c0\'cc \'bc\'b3\'c1\'a4\'b5\'c7\'b4\'c2\'c1\'f6\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
It can selectively program whether the transfer controller sends back completion codes on completion of the final transfer request (TR) of a parameter set EDMA_TPCC_OPT_n[22] TCCHEN or EDMA_TPCC_OPT_n[20] TCINTEN, for all but the final transfer request (TR) of a parameter set EDMA_TPCC_OPT_n[23] ITCCHEN or EDMA_TPCC_OPT_n[21] ITCINTEN), or for all TRs of a parameter set (both).\par
\'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2\'b0\'a1 EDMA_TPCC_OPT_n [22] TCCHEN \'b6\'c7\'b4\'c2 EDMA_TPCC_OPT_n [20] TCINTEN \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'bc\'bc\'c6\'ae\'c0\'c7 \'c3\'d6\'c1\'be \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR) \'bf\'cf\'b7\'e1\'bd\'c3\par
\'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'c1\'fd\'c7\'d5 EDMA_TPCC_OPT_n [23] ITCCHEN \'b6\'c7\'b4\'c2 EDMA_TPCC_OPT_n [21] ITCINTEN)  \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'c1\'fd\'c7\'d5\'c0\'c7 \'b8\'f0\'b5\'e7 TR\par
\'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b8\'a6 \'c0\'fc\'bc\'db\'c7\'cf\'b4\'c2\'c1\'f6 \'bf\'a9\'ba\'ce\'b8\'a6 \'bc\'b1\'c5\'c3\'c0\'fb\'c0\'b8\'b7\'ce (\'b5\'d1 \'b4\'d9). \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Refer to Section 16.2.5.8 Chaining EDMA Channels for details on chaining  (intermediate/final chaining) and Section 16.2.5.9 EDMA Interrupts for details on intermediate/final  interrupt completion.\par
\'c1\'df\'b0\'a3 / \'c3\'d6\'c1\'be \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bf\'cf\'b7\'e1\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 16.2.5.8 \'c3\'bc\'c0\'ce \'bf\'ac\'b0\'e1 (\'c1\'df\'b0\'a3 / \'c3\'d6\'c1\'be \'c3\'bc\'c0\'ce) \'b9\'d7 16.2.5.9 EDMA \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba EDMA \'c3\'a4\'b3\'ce \'bf\'ac\'b0\'e1\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
A completion detection interface exists between the EDMA channel controller and transfer controller(s).\par
\'bf\'cf\'b7\'e1 \'b0\'cb\'c3\'e2 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'b4\'c2 EDMA \'c3\'a4\'b3\'ce \'c1\'a6\'be\'ee\'b1\'e2\'bf\'cd \'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2 (\'b5\'e9) \'bb\'e7\'c0\'cc\'bf\'a1 \'c1\'b8\'c0\'e7\'c7\'d1\'b4\'d9.\par
\par
This interface sends back information from the transfer controller to the channel controller to indicate that a specific transfer is completed.\par
\'c0\'cc \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'b4\'c2 \'c6\'af\'c1\'a4 \'c0\'fc\'bc\'db\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'be\'fa\'c0\'bd\'c0\'bb \'b3\'aa\'c5\'b8 \'b3\'bb\'b1\'e2 \'c0\'a7\'c7\'d8 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1\'bc\'ad \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b7\'ce \'c1\'a4\'ba\'b8\'b8\'a6 \'b5\'c7\'b5\'b9\'b7\'c1 \'ba\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
Completion of a transfer is used for generating chained events and/or generating interrupts to the CPU(s).\par
\'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1\'b4\'c2 \'c3\'bc\'c0\'ce \'c0\'cc\'ba\'a5\'c6\'ae \'bb\'fd\'bc\'ba \'b9\'d7 / \'b6\'c7\'b4\'c2 CPU\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bb\'fd\'bc\'ba\'bf\'a1 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
All DMA/QDMA PaRAM sets must also specify a link address value.\par
\'b8\'f0\'b5\'e7 DMA / QDMA PaRAM \'bc\'bc\'c6\'ae\'b4\'c2 \'b6\'c7\'c7\'d1 \'b8\'b5\'c5\'a9 \'c1\'d6\'bc\'d2 \'b0\'aa\'c0\'bb \'c1\'f6\'c1\'a4\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
 For repetitive transfers such as pingpong buffers, the link address value must point to another predefined PaRAM set.\par
  pingpong \'b9\'f6\'c6\'db\'bf\'cd \'b0\'b0\'c0\'ba \'b9\'dd\'ba\'b9 \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec \'b8\'b5\'c5\'a9 \'c1\'d6\'bc\'d2 \'b0\'aa\'c0\'ba \'b9\'cc\'b8\'ae \'c1\'a4\'c0\'c7 \'b5\'c8 \'b4\'d9\'b8\'a5 PaRAM \'bc\'bc\'c6\'ae\'b8\'a6 \'b0\'a1\'b8\'ae\'c4\'d1 \'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
 Alternatively, a nonrepetitive transfer must set the link address value to the null link value.\par
  \'b6\'c7\'b4\'c2 \'ba\'f1 \'c1\'d6\'b1\'e2\'c0\'fb \'c0\'fc\'bc\'db\'c0\'ba \'b8\'b5\'c5\'a9 \'c1\'d6\'bc\'d2 \'b0\'aa\'c0\'bb \'b3\'ce \'b8\'b5\'c5\'a9 \'b0\'aa\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The null link value is defined as FFFFh.\par
\'b3\'ce \'b8\'b5\'c5\'a9 \'b0\'aa\'c0\'ba FFFFh\'b7\'ce \'c1\'a4\'c0\'c7\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Refer to Section 16.2.5.3.7 Linking Transfers for more details.\par
\'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 16.2.5.3.7 \'c0\'fd\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
NOTE: Any incoming events that are mapped to a null PaRAM set results in an error condition.\par
\'c2\'fc\'b0\'ed : null PaRAM \'bc\'bc\'c6\'ae\'bf\'a1 \'b8\'c5\'c7\'ce\'b5\'c7\'b4\'c2 \'b8\'f0\'b5\'e7 \'b5\'e9\'be\'ee\'bf\'c0\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'bf\'c0\'b7\'f9 \'bb\'f3\'c5\'c2\'b0\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The error condition must clear before the corresponding channel is used again.\par
\'bf\'c0\'b7\'f9 \'bb\'f3\'c5\'c2\'b4\'c2 \'c7\'d8\'b4\'e7 \'c3\'a4\'b3\'ce\'c0\'bb \'b4\'d9\'bd\'c3 \'bb\'e7\'bf\'eb\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 \'c1\'f6\'bf\'f6\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Refer to Section 16.2.5.3.5 Dummy Versus Null Transfer Comparison.\par
16.2.5.3.5 Dummy \'b4\'eb Null \'c0\'fc\'bc\'db \'ba\'f1\'b1\'b3\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
There are three ways the EDMA_TPCC gets updated/informed about a transfer completion: normal completion, early completion, and dummy/null completion.\par
EDMA_TPCC\'b0\'a1 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1, \'c1\'ef \'c1\'a4\'bb\'f3 \'bf\'cf\'b7\'e1, \'c1\'b6\'b1\'e2 \'bf\'cf\'b7\'e1 \'b9\'d7 \'b4\'f5\'b9\'cc / \'b3\'ce \'bf\'cf\'b7\'e1\'bf\'a1 \'b4\'eb\'c7\'d8 \'b0\'bb\'bd\'c5 / \'c5\'eb\'c1\'f6\'b5\'c7\'b4\'c2 \'bc\'bc \'b0\'a1\'c1\'f6 \'b9\'e6\'b9\'fd\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
This applies to both chained events and completion interrupt generation.\par
\'c0\'cc\'b0\'cd\'c0\'ba \'c3\'bc\'c0\'ce\'c8\'ad \'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae\'bf\'cd \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bb\'fd\'bc\'ba \'b8\'f0\'b5\'ce\'bf\'a1 \'c0\'fb\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9..\par
\par
16.2.5.5.1 Normal Completion\par
16.2.5.5.1 \'c1\'a4\'bb\'f3 \'bf\'cf\'b7\'e1\par
\par
In normal completion mode EDMA_TPCC_OPT_n[11] TCCMODE = 0, the transfer or sub-transfer is considered to be complete when the EDMA channel controller receives the completion codes from the EDMA transfer controller.\par
\'c1\'a4\'bb\'f3\'c0\'fb\'c0\'ce \'bf\'cf\'b7\'e1 \'b8\'f0\'b5\'e5 \'c0\'ce EDMA_TPCC_OPT_n [11] TCCMODE = 0\'bf\'a1\'bc\'ad, EDMA \'c3\'a4\'b3\'ce \'c1\'a6\'be\'ee\'b1\'e2\'b0\'a1 EDMA \'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2\'b7\'ce\'ba\'ce\'c5\'cd \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b8\'a6 \'bc\'f6\'bd\'c5\'c7\'cf\'b8\'e9 \'c0\'fc\'bc\'db \'b6\'c7\'b4\'c2 \'bc\'ad\'ba\'ea \'c0\'fc\'bc\'db\'c0\'ba \'bf\'cf\'b7\'e1\'b5\'c8 \'b0\'cd\'c0\'b8\'b7\'ce \'b0\'a3\'c1\'d6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 In this mode, the completion code to the channel controller is posted by the transfer controller after it receives a signal from the destination peripheral.\par
  \'c0\'cc \'b8\'f0\'b5\'e5\'bf\'a1\'bc\'ad\'b4\'c2 \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'b4\'eb\'c7\'d1 \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b0\'a1 \'b4\'eb\'bb\'f3 \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'bf\'a1\'bc\'ad \'bd\'c5\'c8\'a3\'b8\'a6\'b9\'de\'c0\'ba \'c8\'c4 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'c0\'c7\'c7\'d8 \'b0\'d4\'bd\'c3\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Normal completion is typically used to generate an interrupt to inform the CPU that a set of data is ready for processing.\par
\'c1\'a4\'bb\'f3 \'bf\'cf\'b7\'e1\'b4\'c2 \'c0\'cf\'b9\'dd\'c0\'fb\'c0\'b8\'b7\'ce CPU\'bf\'a1 \'c3\'b3\'b8\'ae \'c7\'d2 \'b5\'a5\'c0\'cc\'c5\'cd \'bc\'bc\'c6\'ae\'b0\'a1 \'c0\'d6\'c0\'bd\'c0\'bb \'be\'cb\'b8\'ae\'b1\'e2 \'c0\'a7\'c7\'d8 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'cf\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.2.5.5.2 Early Completion\par
16.2.5.5.2 \'c1\'b6\'b1\'e2 \'bf\'cf\'b7\'e1\par
\par
In early completion mode EDMA_TPCC_OPT_n[11] TCCMODE = 1, the transfer is considered to be complete when the EDMA channel controller submits the transfer request (TR) to the EDMA transfer controller.\par
\'c3\'ca\'b1\'e2 \'bf\'cf\'b7\'e1 \'b8\'f0\'b5\'e5 \'c0\'ce EDMA_TPCC_OPT_n [11] TCCMODE = 1\'bf\'a1\'bc\'ad, EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b0\'a1 EDMA \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR)\'c0\'bb \'c1\'a6\'c3\'e2\'c7\'d2 \'b6\'a7 \'c0\'fc\'bc\'db\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c8 \'b0\'cd\'c0\'b8\'b7\'ce \'b0\'a3\'c1\'d6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
In this mode, the channel controller generates the completion code internally.\par
\'c0\'cc \'b8\'f0\'b5\'e5\'bf\'a1\'bc\'ad \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'b3\'bb\'ba\'ce\'c0\'fb\'c0\'b8\'b7\'ce \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Early completion is typically useful for chaining, as it allows subsequent transfers to be chained-triggered while the previous transfer is still in progress within the transfer controller, maximizing the overall throughput of the set of the transfers.\par
\'c1\'b6\'b1\'e2 \'bf\'cf\'b7\'e1\'b4\'c2 \'c0\'cf\'b9\'dd\'c0\'fb\'c0\'b8\'b7\'ce \'c3\'bc\'c0\'ce \'bf\'ac\'b0\'e1\'bf\'a1 \'c0\'af\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9. \'c0\'cc\'c0\'fc \'c0\'fc\'bc\'db\'c0\'cc \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'b3\'bb\'bf\'a1\'bc\'ad \'b0\'e8\'bc\'d3 \'c1\'f8\'c7\'e0\'b5\'c7\'b4\'c2 \'b5\'bf\'be\'c8 \'c8\'c4\'bc\'d3 \'c0\'fc\'bc\'db\'c0\'cc \'bf\'ac\'bc\'e2 \'c6\'ae\'b8\'ae\'b0\'c5\'b5\'c7\'b5\'b5\'b7\'cf \'c7\'e3\'bf\'eb\'c7\'cf\'bf\'a9 \'c0\'fc\'bc\'db \'bc\'bc\'c6\'ae\'c0\'c7 \'c0\'fc\'c3\'bc \'c3\'b3\'b8\'ae\'b7\'ae\'c0\'bb \'c3\'d6\'b4\'eb\'c8\'ad\'c7\'cf\'b1\'e2 \'b6\'a7\'b9\'ae\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
16.2.5.5.3 Dummy or Null Completion\par
16.2.5.5.3 \'b4\'f5\'b9\'cc \'b6\'c7\'b4\'c2 \'b3\'ce \'bf\'cf\'b7\'e1\par
\par
This is a variation of early completion.\par
\'c0\'cc\'b4\'c2 \'c1\'b6\'b1\'e2 \'bf\'cf\'b7\'e1\'c0\'c7 \'ba\'af\'c7\'fc\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Dummy or null completion is associated with a dummy set Section 16.2.5.3.4 or null set Section 16.2.5.3.3.\par
\'b4\'f5\'b9\'cc \'b6\'c7\'b4\'c2 \'b3\'ce \'bf\'cf\'b7\'e1\'b4\'c2 \'b4\'f5\'b9\'cc \'bc\'bc\'c6\'ae \'c1\'a6 16.2.5.3.4 \'c0\'fd \'b6\'c7\'b4\'c2 \'b3\'ce \'bc\'bc\'c6\'ae \'c1\'a6 16.2.5.3.3 \'c0\'fd\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
In both cases, the EDMA channel controller does not submit the associated transfer request to the EDMA transfer controller(s).\par
\'b5\'ce \'b0\'e6\'bf\'ec \'b8\'f0\'b5\'ce EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'b0\'fc\'b7\'c3 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'bb EDMA \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'c1\'a6\'c3\'e2\'c7\'cf\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
However, if the set (dummy/null) has the OPT field programmed to return completion code (intermediate/final interrupt/chaining completion), then it sets the appropriate bits in the interrupt pending registers EDMA_TPCC_IPR and EDMA_TPCC_IPRH or chained event register EDMA_TPCC_CER and EDMA_TPCC_CERH.\par
\'b1\'d7\'b7\'af\'b3\'aa \'bc\'bc\'c6\'ae (\'b4\'f5\'b9\'cc / \'b3\'ce)\'b0\'a1 \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5 (\'c1\'df\'b0\'a3 / \'c3\'d6\'c1\'be \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae / \'c3\'bc\'c0\'ce \'bf\'cf\'b7\'e1)\'b8\'a6 \'b8\'ae\'c5\'cf\'c7\'cf\'b5\'b5\'b7\'cf \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'b5\'c8 OPT \'c7\'ca\'b5\'e5\'b8\'a6 \'b0\'ae\'b4\'c2 \'b0\'e6\'bf\'ec \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'ba\'b8\'b7\'f9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_IPR \'b9\'d7 EDMA_TPCC_IPRH \'b6\'c7\'b4\'c2 \'c3\'bc\'c0\'ce \'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_CER \'b9\'d7 EDMA_TPCC_CERH\'bf\'a1 \'c0\'fb\'c0\'fd\'c7\'d1 \'ba\'f1\'c6\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9 .\par
\par
The internal early completion path is used by the channel controller to return the completion codes internally (that is, EDMA_TPCC generates the completion code).\par
\'b3\'bb\'ba\'ce \'c1\'b6\'b1\'e2 \'bf\'cf\'b7\'e1 \'b0\'e6\'b7\'ce\'b4\'c2 \'c3\'a4\'b3\'ce \'c1\'a6\'be\'ee\'b1\'e2\'b0\'a1 \'b3\'bb\'ba\'ce\'c0\'fb\'c0\'b8\'b7\'ce \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b8\'a6 \'b8\'ae\'c5\'cf\'c7\'cf\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9 (\'c1\'ef, EDMA_TPCC\'b0\'a1 \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b8\'a6 \'bb\'fd\'bc\'ba \'c7\'d4).\par
\par
16.2.5.6 Event, Channel, and PaRAM Mapping\par
16.2.5.6 \'c0\'cc\'ba\'a5\'c6\'ae, \'c3\'a4\'b3\'ce \'b9\'d7 PaRAM \'b8\'c5\'c7\'ce\par
\par
Several of the 64 DMA channels are tied to a specific hardware event, thus allowing events from device peripherals or external hardware (via the dma_evt[4:1] pins) to trigger transfers.\par
64 \'b0\'b3\'c0\'c7 DMA \'c3\'a4\'b3\'ce \'c1\'df \'c0\'cf\'ba\'ce\'b4\'c2 \'c6\'af\'c1\'a4 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'c0\'cc\'ba\'a5\'c6\'ae\'bf\'a1 \'bf\'ac\'b0\'e1\'b5\'c7\'b9\'c7\'b7\'ce \'c0\'e5\'c4\'a1 \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1 \'b6\'c7\'b4\'c2 \'bf\'dc\'ba\'ce \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee (dma_evt [4 : 1] \'c7\'c9\'c0\'bb \'c5\'eb\'c7\'d1)\'bf\'a1\'bc\'ad \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'c0\'fc\'bc\'db\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
A DMA channel typically requests a data transfer when it receives its event (apart from manually-triggered, chain-triggered, and other transfers).\par
\'c0\'cf\'b9\'dd\'c0\'fb\'c0\'b8\'b7\'ce DMA \'c3\'a4\'b3\'ce\'c0\'ba \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'b9\'de\'c0\'b8\'b8\'e9 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'bc\'db\'c0\'bb \'bf\'e4\'c3\'bb\'c7\'d5\'b4\'cf\'b4\'d9 (\'bc\'f6\'b5\'bf \'c6\'ae\'b8\'ae\'b0\'c5, \'c3\'bc\'c0\'ce \'c6\'ae\'b8\'ae\'b0\'c5 \'b9\'d7 \'b1\'e2\'c5\'b8 \'c0\'fc\'bc\'db\'c0\'ba \'c1\'a6\'bf\'dc).\par
\par
The amount of data transferred per synchronization event depends on the channel\rquote s configuration (EDMA_TPCC_ABCNT_n[15:0] ACNT, EDMA_TPCC_ABCNT_n[31:16] BCNT, EDMA_TPCC_CCNT_n[15:0] CCNT, etc.) and the synchronization type (A-synchronized or ABsynchronized).\par
\'b5\'bf\'b1\'e2\'c8\'ad \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'e7 \'c0\'fc\'bc\'db\'b5\'c7\'b4\'c2 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'be\'e7\'c0\'ba \'c3\'a4\'b3\'ce \'b1\'b8\'bc\'ba (EDMA_TPCC_ABCNT_n [15 : 0] ACNT, EDMA_TPCC_ABCNT_n [31:16] BCNT, EDMA_TPCC_CCNT_n [15 : 0] CCNT \'b5\'ee) \'b9\'d7 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'af\'c7\'fc (A- \'b5\'bf\'b1\'e2\'c8\'ad \'b6\'c7\'b4\'c2 AB \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'ca).\par
\par
The association of an event to a channel is fixed within the EDMA Channel Controller, that is, each DMA channel has one specific event associated with it.\par
\'c3\'a4\'b3\'ce\'b0\'fa \'c0\'cc\'ba\'a5\'c6\'ae\'c0\'c7 \'bf\'ac\'b0\'fc\'c0\'ba EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'b3\'bb\'bf\'a1\'bc\'ad \'b0\'ed\'c1\'a4\'b5\'c7\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9. \'c1\'ef, \'b0\'a2 DMA \'c3\'a4\'b3\'ce\'bf\'a1\'b4\'c2 \'bf\'ac\'b0\'fc\'b5\'c8 \'c7\'cf\'b3\'aa\'c0\'c7 \'c6\'af\'c1\'a4 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The EDMA event crossbar can be used to select which level events (of which there are more than 64) are mapped to the 64 input events to the EDMA Channel Controller.\par
EDMA \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a9\'b7\'ce\'bd\'ba\'b9\'d9\'b4\'c2 64 \'b0\'b3 \'c0\'cc\'bb\'f3\'c0\'c7 \'b7\'b9\'ba\'a7 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 64 \'b0\'b3\'c0\'c7 \'c0\'d4\'b7\'c2 \'c0\'cc\'ba\'a5\'c6\'ae\'b7\'ce \'b8\'c5\'c7\'ce\'b5\'c7\'b4\'c2 \'b0\'cd\'c0\'bb \'bc\'b1\'c5\'c3\'c7\'cf\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The default mapping and event crossbar mapping are defined in Section 16.2.4.1, EDMA Requests to the EDMA Controller.\par
\'b1\'e2\'ba\'bb \'b8\'ca\'c7\'ce \'b9\'d7 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a9\'b7\'ce\'bd\'ba\'b9\'d9 \'b8\'ca\'c7\'ce\'c0\'ba 16.2.4.1 \'c0\'fd, EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'b4\'eb\'c7\'d1 EDMA \'bf\'e4\'c3\'bb\'bf\'a1 \'c1\'a4\'c0\'c7\'b5\'c7\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The event crossbar mapping is controlled by the device Control Modules registers refer to Section 18.4.6.4 IRQ_CROSSBAR Module Functional Description, in Chapter 18 Control Module.\par
\'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a9\'b7\'ce\'bd\'ba\'b9\'d9 \'b8\'ca\'c7\'ce\'c0\'ba \'c0\'e5\'c4\'a1\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'a6\'be\'ee\'b5\'cb\'b4\'cf\'b4\'d9. \'c1\'a6\'be\'ee \'b8\'f0\'b5\'e2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 18 \'c0\'e5, \'c1\'a6\'be\'ee \'b8\'f0\'b5\'e2\'c0\'c7 18.4.6.4 \'c0\'fd IRQ_CROSSBAR \'b8\'f0\'b5\'e2 \'b1\'e2\'b4\'c9 \'bc\'b3\'b8\'ed\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
In an application, if a channel does not use the associated synchronization event or if it does not have an associated synchronization event (unused), that channel can be used for manually-triggered or chainedtriggered transfers, for linking/reloading, or as a QDMA channel.\par
\'c0\'c0\'bf\'eb \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'bf\'a1\'bc\'ad \'c3\'a4\'b3\'ce\'c0\'cc \'b0\'fc\'b7\'c3 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'c1\'f6 \'be\'ca\'b0\'c5\'b3\'aa \'bf\'ac\'b0\'fc\'b5\'c8 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'cc\'ba\'a5\'c6\'ae (\'bb\'e7\'bf\'eb\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'bd)\'b0\'a1\'be\'f8\'b4\'c2 \'b0\'e6\'bf\'ec \'c7\'d8\'b4\'e7 \'c3\'a4\'b3\'ce\'c0\'bb \'bc\'f6\'b5\'bf \'c6\'ae\'b8\'ae\'b0\'c5 \'b6\'c7\'b4\'c2 \'bf\'ac\'b0\'e1 \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db, \'b8\'b5\'c5\'a9 / \'b4\'d9\'bd\'c3\'b7\'ce\'b5\'e5 \'b6\'c7\'b4\'c2 QDMA \'c3\'a4\'b3\'ce  \'b7\'ce \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9 .\par
\par
16.2.5.6.1 DMA Channel to PaRAM Mapping\par
16.2.5.6.1 DMA \'c3\'a4\'b3\'ce - PaRAM \'b8\'c5\'c7\'ce\par
\par
The mapping between the DMA channel numbers and the PaRAM sets is programmable (see Table 16- 90).\par
DMA \'c3\'a4\'b3\'ce \'b9\'f8\'c8\'a3\'bf\'cd PaRAM \'bc\'bc\'c6\'ae \'b0\'a3\'c0\'c7 \'b8\'ca\'c7\'ce\'c0\'ba \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b0\'a1\'b4\'c9\'c7\'d5\'b4\'cf\'b4\'d9 (\'c7\'a5 16-90 \'c2\'fc\'c1\'b6).\par
\par
The DMA channel mapping registers EDMA_TPCC_DCHMAPN_m in the EDMA_TPCC provide programmability that allows the DMA channels to be mapped to any of the PaRAM sets in the PaRAM memory map.\par
EDMA_TPCC\'c0\'c7 DMA \'c3\'a4\'b3\'ce \'b8\'c5\'c7\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'c0\'ce EDMA_TPCC_DCHMAPN_m\'c0\'ba DMA \'c3\'a4\'b3\'ce\'c0\'cc PaRAM \'b8\'de\'b8\'f0\'b8\'ae \'b8\'ca\'c0\'c7 PaRAM \'bc\'bc\'c6\'ae \'c1\'df \'c7\'cf\'b3\'aa\'bf\'a1 \'b8\'c5\'c7\'ce\'b5\'c7\'b5\'b5\'b7\'cf\'c7\'cf\'b4\'c2 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b1\'e2\'b4\'c9\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Figure 16-24 illustrates the use of EDMA_TPCC_DCHMAPN_m. There is one EDMA_TPCC_DCHMAPN_m register per channel.\par
\'b1\'d7\'b8\'b2 16-24\'b4\'c2 EDMA_TPCC_DCHMAPN_m\'c0\'c7 \'bb\'e7\'bf\'eb\'b9\'fd\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9. \'c3\'a4\'b3\'ce\'b4\'e7 \'c7\'cf\'b3\'aa\'c0\'c7 EDMA_TPCC_DCHMAPN_m \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.6.2 QDMA Channel to PaRAM Mapping\par
16.2.5.6.2 QDMA \'c3\'a4\'b3\'ce \'b4\'eb PaRAM \'b8\'c5\'c7\'ce\par
\par
The mapping between the QDMA channels and the PaRAM sets is programmable.\par
QDMA \'c3\'a4\'b3\'ce\'b0\'fa PaRAM \'bc\'bc\'c6\'ae \'b0\'a3\'c0\'c7 \'b8\'c5\'c7\'ce\'c0\'ba \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c0\'cc \'b0\'a1\'b4\'c9\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The QDMA channel mapping register EDMA_TPCC_QCHMAPN_j in the EDMA_TPCC allows to map the QDMA channels to any of the PaRAM sets in the PaRAM memory map.\par
EDMA_TPCC\'c0\'c7 QDMA \'c3\'a4\'b3\'ce \'b8\'ca\'c7\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_QCHMAPN_j\'b4\'c2 PaRAM \'b8\'de\'b8\'f0\'b8\'ae \'b8\'ca\'c0\'c7 \'c0\'d3\'c0\'c7\'c0\'c7 PaRAM \'bc\'bc\'c6\'ae\'bf\'a1 QDMA \'c3\'a4\'b3\'ce\'c0\'bb \'b8\'ca\'c7\'ce\'c7\'cf\'b0\'d4\'c7\'d1\'b4\'d9.\par
\par
Figure 16-25 illustrates the use of EDMA_TPCC_QCHMAPN_j.\par
\'b1\'d7\'b8\'b2 16-25\'b4\'c2 EDMA_TPCC_QCHMAPN_j\'c0\'c7 \'bb\'e7\'bf\'eb\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
EDMA_TPCC_QCHMAPN_j[4:2] TRWORD bit-field allows to program the trigger word in the PaRAM set for the QDMA channel.\par
EDMA_TPCC_QCHMAPN_j [4 : 2] TRWORD \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b4\'c2 QDMA \'c3\'a4\'b3\'ce \'bf\'eb PaRAM \'bc\'bc\'c6\'ae\'c0\'c7 \'c6\'ae\'b8\'ae\'b0\'c5 \'bf\'f6\'b5\'e5\'b8\'a6 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c7\'d2 \'bc\'f6\'c0\'d6\'b0\'d4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
A trigger word is one of the eight words in the PaRAM set.\par
\'c6\'ae\'b8\'ae\'b0\'c5 \'b4\'dc\'be\'ee\'b4\'c2 PaRAM \'bc\'bc\'c6\'ae\'c0\'c7 8 \'b0\'b3 \'b4\'dc\'be\'ee \'c1\'df \'c7\'cf\'b3\'aa\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
For a QDMA transfer to occur, a valid TR synchronization event for EDMA_TPCC is a write to the trigger word in the PaRAM set pointed to by EDMA_TPCC_QCHMAPN_j for a particular QDMA channel.\par
QDMA \'c0\'fc\'bc\'db\'c0\'cc \'b9\'df\'bb\'fd\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8\'bc\'ad\'b4\'c2 EDMA_TPCC\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'af\'c8\'bf\'c7\'d1 TR \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'c6\'af\'c1\'a4 QDMA \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d8 EDMA_TPCC_QCHMAPN_j\'b0\'a1 \'b0\'a1\'b8\'ae\'c5\'b0\'b4\'c2 PaRAM \'bc\'bc\'c6\'ae\'c0\'c7 \'c6\'ae\'b8\'ae\'b0\'c5 \'bf\'f6\'b5\'e5\'bf\'a1 \'b4\'eb\'c7\'d1 \'be\'b2\'b1\'e2\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
By default, QDMA channels are mapped to PaRAM set 0.\par
\'b1\'e2\'ba\'bb\'c0\'fb\'c0\'b8\'b7\'ce QDMA \'c3\'a4\'b3\'ce\'c0\'ba PaRAM \'bc\'bc\'c6\'ae 0\'bf\'a1 \'b8\'c5\'c7\'ce\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
It must appropriately re-map PaRAM set 0 before use.\par
\'bb\'e7\'bf\'eb\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 PaRAM set 0\'c0\'bb \'c0\'fb\'c0\'fd\'c7\'cf\'b0\'d4 \'b4\'d9\'bd\'c3 \'b8\'c5\'c7\'ce\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9\par
\par
16.2.5.7 EDMA Channel Controller Regions\par
16.2.5.7 EDMA \'c3\'a4\'b3\'ce \'c1\'a6\'be\'ee\'b1\'e2 \'bf\'b5\'bf\'aa\par
\par
The EDMA channel controller divides its address space into eight regions.\par
EDMA \'c3\'a4\'b3\'ce \'c1\'a6\'be\'ee\'b1\'e2\'b4\'c2 \'c0\'da\'bd\'c5\'c0\'c7 \'c1\'d6\'bc\'d2 \'b0\'f8\'b0\'a3\'c0\'bb 8 \'b0\'b3\'c0\'c7 \'bf\'b5\'bf\'aa\'c0\'b8\'b7\'ce \'b3\'aa\'b4\'af\'b4\'cf\'b4\'d9.\par
\par
Individual channel resources are assigned to a specific region, where each region is typically assigned to a specific device module uses the EDMA controller.\par
\'b0\'a2\'b0\'a2\'c0\'c7 \'c3\'a4\'b3\'ce \'c0\'da\'bf\'f8\'c0\'ba \'c6\'af\'c1\'a4 \'c1\'f6\'bf\'aa\'bf\'a1 \'c7\'d2\'b4\'e7\'b5\'c7\'b8\'e7, \'b0\'a2 \'c1\'f6\'bf\'aa\'c0\'ba \'c0\'cf\'b9\'dd\'c0\'fb\'c0\'b8\'b7\'ce EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'c6\'af\'c1\'a4 \'c0\'e5\'c4\'a1 \'b8\'f0\'b5\'e2\'bf\'a1 \'c7\'d2\'b4\'e7\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Application software can use regions or to ignore them altogether.\par
\'c0\'c0\'bf\'eb \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'b4\'c2 \'bf\'b5\'bf\'aa\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b0\'c5\'b3\'aa \'c0\'cc\'b8\'a6 \'b8\'f0\'b5\'ce \'b9\'ab\'bd\'c3\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
It can be used active memory protection in conjunction with regions so that only a specific device module which uses the EDMA (for example, privilege identification) or privilege level (for example, user vs. supervisor) is allowed access to a given region, and thus to a given DMA or QDMA channel.\par
EDMA (\'bf\'b9 : \'c6\'af\'b1\'c7 \'bd\'c4\'ba\'b0) \'b6\'c7\'b4\'c2 \'c6\'af\'b1\'c7 \'b7\'b9\'ba\'a7 (\'bf\'b9 : \'bb\'e7\'bf\'eb\'c0\'da \'b4\'eb \'bc\'f6\'c6\'db\'b9\'d9\'c0\'cc\'c0\'fa)\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'c6\'af\'c1\'a4 \'c0\'e5\'c4\'a1 \'b8\'f0\'b5\'e2 \'b8\'b8 \'c1\'d6\'be\'ee\'c1\'f8 \'bf\'b5\'bf\'aa\'bf\'a1 \'be\'d7\'bc\'bc\'bd\'ba \'c7\'d2 \'bc\'f6 \'c0\'d6\'b5\'b5\'b7\'cf \'bf\'b5\'bf\'aa\'b0\'fa \'c7\'d4\'b2\'b2 \'c8\'b0\'bc\'ba \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3 \'b1\'e2\'b4\'c9\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9. \'b5\'fb\'b6\'f3\'bc\'ad \'c1\'d6\'be\'ee\'c1\'f8 DMA \'b6\'c7\'b4\'c2 QDMA \'c3\'a4\'b3\'ce\'b7\'ce \'c0\'fc\'bc\'db\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
This allows robust system-level DMA code where each EDMA initiator only modifies the state of the assigned resources.\par
\'c0\'cc\'b7\'b8\'b0\'d4\'c7\'cf\'b8\'e9 \'b0\'a2 EDMA \'c3\'ca\'b1\'e2\'c0\'da\'b0\'a1 \'c7\'d2\'b4\'e7 \'b5\'c8 \'c0\'da\'bf\'f8\'c0\'c7 \'bb\'f3\'c5\'c2 \'b8\'b8 \'bc\'f6\'c1\'a4\'c7\'cf\'b4\'c2 \'b0\'ad\'b7\'c2\'c7\'d1 \'bd\'c3\'bd\'ba\'c5\'db \'b7\'b9\'ba\'a7 DMA \'c4\'da\'b5\'e5\'b0\'a1 \'c7\'e3\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Memory protection is described in Section 16.2.5.10 Memory Protection.\par
\'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3\'b4\'c2 16.2.5.10 \'c0\'fd \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3\'bf\'a1\'bc\'ad \'bc\'b3\'b8\'ed\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.7.1 Region Overview\par
16.2.5.7.1 \'c1\'f6\'bf\'aa \'b0\'b3\'bf\'e4\par
\par
The EDMA channel controller memory-mapped registers are divided in three main categories:\par
EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'b8\'de\'b8\'f0\'b8\'ae \'b8\'ca \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'bc\'bc \'b0\'a1\'c1\'f6 \'c1\'d6\'bf\'e4 \'b9\'fc\'c1\'d6\'b7\'ce \'b3\'aa\'b4\'b9\'b4\'cf\'b4\'d9.\par
\par
1. Global registers\par
1. \'b1\'db\'b7\'ce\'b9\'fa \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\par
\par
2. Global region channel registers\par
2. \'b1\'db\'b7\'ce\'b9\'fa \'c1\'f6\'bf\'aa \'c3\'a4\'b3\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\par
\par
3. Shadow region channel registers\par
3. \'bd\'a6\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa \'c3\'a4\'b3\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\par
\par
The global registers are located at a single/fixed location in the EDMA_TPCC memory map.\par
\'c0\'fc\'bf\'aa \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 EDMA_TPCC \'b8\'de\'b8\'f0\'b8\'ae \'b8\'ca\'c0\'c7 \'b4\'dc\'c0\'cf / \'b0\'ed\'c1\'a4 \'c0\'a7\'c4\'a1\'bf\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
These registers control EDMA resource mapping and provide debug visibility and error tracking information.\par
\'c0\'cc \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 EDMA \'b8\'ae\'bc\'d2\'bd\'ba \'b8\'c5\'c7\'ce\'c0\'bb \'c1\'a6\'be\'ee\'c7\'cf\'b0\'ed \'b5\'f0\'b9\'f6\'b1\'d7 \'b0\'a1\'bd\'c3\'bc\'ba \'b9\'d7 \'bf\'c0\'b7\'f9 \'c3\'df\'c0\'fb \'c1\'a4\'ba\'b8\'b8\'a6 \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The channel registers (including DMA, QDMA, and interrupt registers) are accessible via the global channel region address range, or in the shadow n channel region address range(s).\par
\'c3\'a4\'b3\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (DMA, QDMA \'b9\'d7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'c6\'f7\'c7\'d4)\'b4\'c2 \'c0\'fc\'bf\'aa \'c3\'a4\'b3\'ce \'bf\'b5\'bf\'aa \'c1\'d6\'bc\'d2 \'b9\'fc\'c0\'a7 \'b6\'c7\'b4\'c2 \'bc\'a8\'b5\'b5\'bf\'ec n \'c3\'a4\'b3\'ce \'bf\'b5\'bf\'aa \'c1\'d6\'bc\'d2 \'b9\'fc\'c0\'a7\'b8\'a6 \'c5\'eb\'c7\'d8 \'be\'d7\'bc\'bc\'bd\'ba \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
For example, the event enable register EDMA_TPCC_EER is visible at the global address of EDMA Base Address + 1020h or region addresses of EDMA Base Address + 2020h for region 0, EDMA Base Address + 2220h for region 1, \'a1\'a6 EDMA Base Address + 2E20h for region 7.\par
\'bf\'b9\'b8\'a6 \'b5\'e9\'be\'ee, \'c0\'cc\'ba\'a5\'c6\'ae \'c8\'b0\'bc\'ba\'c8\'ad \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_EER\'b4\'c2 EDMA \'b1\'e2\'ba\'bb \'c1\'d6\'bc\'d2 + 1020h\'c0\'c7 \'c0\'fc\'c3\'bc \'c1\'d6\'bc\'d2 \'b6\'c7\'b4\'c2 EDMA \'b1\'e2\'ba\'bb \'c1\'d6\'bc\'d2 + 2020h\'c0\'c7 \'bf\'b5\'bf\'aa 0, EDMA \'b1\'e2\'ba\'bb \'c1\'d6\'bc\'d2 + 2220h \'bf\'b5\'bf\'aa 1\'bf\'a1\'bc\'ad \'ba\'bc \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9. EDMA Base Address + 2E20h for region 7.\par
\par
The DMA region access enable registers EDMA_TPCC_DRAEM_k and the QDMA region access enable registers EDMA_TPCC_QRAEN_k control the underlying control register bits that are accessible via the shadow region address space (except for EDMA_TPCC_IEVAL and EDMA_TPCC_IEVAL_RN_k registers).\par
DMA \'bf\'b5\'bf\'aa \'be\'d7\'bc\'bc\'bd\'ba \'b0\'a1\'b4\'c9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 EDMA_TPCC_DRAEM_k \'b9\'d7 QDMA \'bf\'b5\'bf\'aa \'be\'d7\'bc\'bc\'bd\'ba \'b0\'a1\'b4\'c9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_QRAEN_k\'b4\'c2 \'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa \'c1\'d6\'bc\'d2 \'b0\'f8\'b0\'a3\'c0\'bb \'c5\'eb\'c7\'d8 \'be\'d7\'bc\'bc\'bd\'ba \'c7\'d2 \'bc\'f6\'c0\'d6\'b4\'c2 \'b1\'e2\'ba\'bb \'c1\'a6\'be\'ee \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'ba\'f1\'c6\'ae (EDMA_TPCC_IEVAL \'b9\'d7 EDMA_TPCC_IEVAL_RN_k \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'c1\'a6\'bf\'dc)\'b8\'a6 \'c1\'a6\'be\'ee\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Table 16-95 lists the registers in the shadow region memory map.\par
\'c7\'a5 16-95\'b4\'c2 \'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa \'b8\'de\'b8\'f0\'b8\'ae \'b8\'ca\'c0\'c7 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'b3\'aa\'bf\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
 Refer to EDMA_TPCC register summary Table 16-111 for the complete global and shadow region memory maps.\par
 \'bf\'cf\'c0\'fc\'c7\'d1 \'c0\'fc\'bf\'aa \'b9\'d7 \'c0\'bd\'bf\'b5 \'bf\'b5\'bf\'aa \'b8\'de\'b8\'f0\'b8\'ae \'b8\'ca\'c0\'ba \'c7\'a5 16-111\'c0\'c7 EDMA_TPCC \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bf\'e4\'be\'e0\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.7.2 Channel Controller Regions\par
16.2.5.7.2 \'c3\'a4\'b3\'ce \'c1\'a6\'be\'ee\'b1\'e2 \'bf\'b5\'bf\'aa\par
\par
There are eight EDMA shadow regions (and associated memory maps).\par
\'bf\'a9\'b4\'fc \'b0\'b3\'c0\'c7 EDMA \'bd\'a6\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa (\'b9\'d7 \'bf\'ac\'b0\'fc\'b5\'c8 \'b8\'de\'b8\'f0\'b8\'ae \'b8\'ca)\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Associated with each shadow region are a set of registers defining which channels and interrupt completion codes belong to that region.\par
\'b0\'a2 \'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa\'b0\'fa \'b0\'fc\'b7\'c3\'c7\'cf\'bf\'a9 \'be\'ee\'b6\'b2 \'c3\'a4\'b3\'ce \'b9\'d7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b0\'a1 \'c7\'d8\'b4\'e7 \'bf\'b5\'bf\'aa\'bf\'a1 \'bc\'d3\'c7\'cf\'b4\'c2\'c1\'f6\'b8\'a6 \'c1\'a4\'c0\'c7\'c7\'cf\'b4\'c2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b0\'a1 \'b0\'fc\'b7\'c3\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
These registers are user-programmed per region to assign ownership of the DMA/QDMA channels to a region.\par
\'c0\'cc \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 DMA / QDMA \'c3\'a4\'b3\'ce\'c0\'c7 \'bc\'d2\'c0\'af\'b1\'c7\'c0\'bb \'c1\'f6\'bf\'aa\'bf\'a1 \'c7\'d2\'b4\'e7\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'bf\'b5\'bf\'aa\'ba\'b0\'b7\'ce \'bb\'e7\'bf\'eb\'c0\'da \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
EDMA_TPCC_DRAEM_k and EDMA_TPCC_DRAEHM_k: One register pair exists for each of the shadow regions.\par
EDMA_TPCC_DRAEM_k \'b9\'d7 EDMA_TPCC_DRAEHM_k : \'c7\'cf\'b3\'aa\'c0\'c7 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bd\'d6\'c0\'cc \'b0\'a2 \'c0\'bd\'bf\'b5 \'bf\'b5\'bf\'aa\'bf\'a1 \'b4\'eb\'c7\'d8 \'c1\'b8\'c0\'e7\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The number of bits in each register pair matches the number of DMA channels (64 DMA channels).\par
\'b0\'a2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bd\'d6\'c0\'c7 \'ba\'f1\'c6\'ae \'bc\'f6\'b4\'c2 DMA \'c3\'a4\'b3\'ce \'bc\'f6 (64 DMA \'c3\'a4\'b3\'ce)\'bf\'cd \'c0\'cf\'c4\'a1\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
These registers need to be programmed to assign ownership of DMA channels and interrupt (or EDMA_TPCC_OPT_n[17:12] TCC codes) to the respective region.\par
\'c0\'cc \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 DMA \'c3\'a4\'b3\'ce \'b9\'d7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae (\'b6\'c7\'b4\'c2 EDMA_TPCC_OPT_n [17:12] TCC \'c4\'da\'b5\'e5)\'c0\'c7 \'bc\'d2\'c0\'af\'b1\'c7\'c0\'bb \'c7\'d8\'b4\'e7 \'c1\'f6\'bf\'aa\'bf\'a1 \'c7\'d2\'b4\'e7\'c7\'cf\'b5\'b5\'b7\'cf \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Accesses to DMA and interrupt registers via the shadow region address view are filtered through the DRAEM/DRAEHM pair.\par
\'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa \'c1\'d6\'bc\'d2\'ba\'b8\'b1\'e2\'b8\'a6 \'c5\'eb\'c7\'d1 DMA \'b9\'d7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'b4\'eb\'c7\'d1 \'be\'d7\'bc\'bc\'bd\'ba\'b4\'c2 DRAEM / DRAEHM \'bd\'d6\'c0\'bb \'c5\'eb\'c7\'d8 \'c7\'ca\'c5\'cd\'b8\'b5\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
A value of 1 in the corresponding EDMA_TPCC_DRAEM_k[31:0] / EDMA_TPCC_DRAEHM_k[31:0] bit implies that the corresponding DMA interrupt channel is accessible; a value of 0 in the corresponding EDMA_TPCC_DRAEM_k[31:0] / EDMA_TPCC_DRAEHM_k[31:0] bit forces writes to be discarded and returns a value of 0 for reads.\par
\'c7\'d8\'b4\'e7 EDMA_TPCC_DRAEM_k [31 : 0] / EDMA_TPCC_DRAEHM_k [31 : 0] \'ba\'f1\'c6\'ae\'c0\'c7 \'b0\'aa 1\'c0\'ba \'c7\'d8\'b4\'e7 DMA \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c3\'a4\'b3\'ce\'bf\'a1 \'be\'d7\'bc\'bc\'bd\'ba \'c7\'d2 \'bc\'f6 \'c0\'d6\'c0\'bd\'c0\'bb \'c0\'c7\'b9\'cc\'c7\'d5\'b4\'cf\'b4\'d9. \'c7\'d8\'b4\'e7 EDMA_TPCC_DRAEM_k [31 : 0] / EDMA_TPCC_DRAEHM_k [31 : 0] \'ba\'f1\'c6\'ae\'c0\'c7 \'b0\'aa 0\'c0\'ba \'be\'b2\'b1\'e2\'b8\'a6 \'b0\'ad\'c1\'a6\'b7\'ce \'c1\'a6\'b0\'c5\'c7\'cf\'b0\'ed \'c0\'d0\'b1\'e2\'c0\'c7 \'b0\'e6\'bf\'ec 0 \'b0\'aa\'c0\'bb \'b8\'ae\'c5\'cf\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  EDMA_TPCC_QRAEN_k: One register exists for every region.\par
\bullet  EDMA_TPCC_QRAEN_k : \'b8\'f0\'b5\'e7 \'bf\'b5\'bf\'aa\'bf\'a1 \'c7\'cf\'b3\'aa\'c0\'c7 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b0\'a1 \'c1\'b8\'c0\'e7\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The number of bits in each register matches the number of QDMA channels (4 QDMA channels).\par
\'b0\'a2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'ba\'f1\'c6\'ae \'bc\'f6\'b4\'c2 QDMA \'c3\'a4\'b3\'ce \'bc\'f6 (4 QDMA \'c3\'a4\'b3\'ce \'bc\'f6)\'bf\'cd \'c0\'cf\'c4\'a1\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
These registers must be programmed to assign ownership of QDMA channels to the respective region.\par
\'c0\'cc \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'c7\'d8\'b4\'e7 \'c1\'f6\'bf\'aa\'bf\'a1 QDMA \'c3\'a4\'b3\'ce\'c0\'c7 \'bc\'d2\'c0\'af\'b1\'c7\'c0\'bb \'c7\'d2\'b4\'e7\'c7\'cf\'b5\'b5\'b7\'cf \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
To enable a channel in a shadow region using shadow region 0 EDMA_TPCC_QEER, the corresponding bits in QRAE must be set or writing into EDMA_TPCC_QEESR there will be no the desired effect.\par
\'b1\'d7\'b8\'b2\'c0\'da \'bf\'b5\'bf\'aa 0 EDMA_TPCC_QEER\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'c0\'bd\'bf\'b5 \'bf\'b5\'bf\'aa\'bf\'a1\'bc\'ad \'c3\'a4\'b3\'ce\'c0\'bb \'c8\'b0\'bc\'ba\'c8\'ad\'c7\'cf\'b7\'c1\'b8\'e9 QRAE\'c0\'c7 \'c7\'d8\'b4\'e7 \'ba\'f1\'c6\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'b0\'c5\'b3\'aa EDMA_TPCC_QEESR\'bf\'a1 \'b1\'e2\'b7\'cf\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9. \'bf\'f8\'c7\'cf\'b4\'c2 \'c8\'bf\'b0\'fa\'b0\'a1 \'be\'f8\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  EDMA_TPCC_MPPAN_k and EDMA_TPCC_MPPAG: One register exists for every region.\par
\bullet  EDMA_TPCC_MPPAN_k \'b9\'d7 EDMA_TPCC_MPPAG : \'b8\'f0\'b5\'e7 \'bf\'b5\'bf\'aa\'bf\'a1 \'c7\'cf\'b3\'aa\'c0\'c7 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b0\'a1 \'c1\'b8\'c0\'e7\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
This register defines the privilege level, requestor, and types of accesses allowed to a region's memorymapped registers.\par
\'c0\'cc \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'bf\'b5\'bf\'aa\'c0\'c7 \'b8\'de\'b8\'f0\'b8\'ae \'b8\'ca \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c7\'e3\'bf\'eb \'b5\'c8 \'be\'d7\'bc\'bc\'bd\'ba \'bc\'f6\'c1\'d8, \'bf\'e4\'c3\'bb\'c0\'da \'b9\'d7 \'be\'d7\'bc\'bc\'bd\'ba \'c0\'af\'c7\'fc\'c0\'bb \'c1\'a4\'c0\'c7\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
It is typical for an application to have a unique assignment of QDMA/DMA channels (and, therefore, a given bit position) to a given region.\par
\'be\'d6\'c7\'c3\'b8\'ae\'c4\'c9\'c0\'cc\'bc\'c7\'c0\'cc \'c1\'d6\'be\'ee\'c1\'f8 \'bf\'b5\'bf\'aa\'bf\'a1 QDMA / DMA \'c3\'a4\'b3\'ce (\'b5\'fb\'b6\'f3\'bc\'ad \'c1\'d6\'be\'ee\'c1\'f8 \'ba\'f1\'c6\'ae \'c0\'a7\'c4\'a1)\'c0\'c7 \'b0\'ed\'c0\'af \'c7\'d1 \'c7\'d2\'b4\'e7\'c0\'bb \'b0\'ae\'b4\'c2 \'b0\'cd\'c0\'ba \'c0\'fc\'c7\'fc\'c0\'fb\'c0\'cc\'b4\'d9.\par
\par
The use of shadow regions allows restricted access to EDMA resources (DMA channels, QDMA channels, TCC, interrupts) by tasks in a system by setting or clearing bits in the EDMA_TPCC_DRAEM_k / EDMA_TPCC_QRAEN_k registers.\par
\'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b8\'e9 EDMA_TPCC_DRAEM_k / EDMA_TPCC_QRAEN_k \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'ba\'f1\'c6\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'b0\'c5\'b3\'aa \'c1\'f6\'bf\'ec\'b8\'e9 \'bd\'c3\'bd\'ba\'c5\'db\'c0\'c7 \'c5\'c2\'bd\'ba\'c5\'a9\'bf\'a1 \'c0\'c7\'c7\'d8 EDMA \'b8\'ae\'bc\'d2\'bd\'ba (DMA \'c3\'a4\'b3\'ce, QDMA \'c3\'a4\'b3\'ce, TCC, \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae)\'bf\'a1 \'b4\'eb\'c7\'d1 \'be\'d7\'bc\'bc\'bd\'ba\'b0\'a1 \'c1\'a6\'c7\'d1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
If exclusive access to any given channel / TCC code is required for a region, then only that region's EDMA_TPCC_DRAEM_k / EDMA_TPCC_QRAEN_k have the associated bit set.\par
\'c6\'af\'c1\'a4 \'c3\'a4\'b3\'ce / TCC \'c4\'da\'b5\'e5\'bf\'a1 \'b4\'eb\'c7\'d1 \'b5\'b6\'c1\'a1\'c0\'fb \'be\'d7\'bc\'bc\'bd\'ba\'b0\'a1 region\'bf\'a1 \'c7\'ca\'bf\'e4\'c7\'cf\'b8\'e9 \'c7\'d8\'b4\'e7 region\'c0\'c7 EDMA_TPCC_DRAEM_k / EDMA_TPCC_QRAEN_k\'bf\'a1\'b8\'b8 \'bf\'ac\'b0\'fc\'b5\'c8 \'ba\'f1\'c6\'ae \'bc\'bc\'c6\'ae\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.7.3 Region Interrupts\par
16.2.5.7.3 \'c1\'f6\'bf\'aa \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\par
\par
In addition to the EDMA_TPCC global completion interrupt, there is an additional completion interrupt line that is associated with every shadow region.\par
EDMA_TPCC \'b1\'db\'b7\'ce z \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bf\'dc\'bf\'a1\'b5\'b5 \'b8\'f0\'b5\'e7 \'c0\'bd\'bf\'b5 \'bf\'b5\'bf\'aa\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'c8 \'c3\'df\'b0\'a1 \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c8\'b8\'bc\'b1\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Along with the interrupt enable register EDMA_TPCC_IER, DRAEM acts as a secondary interrupt enable for the respective shadow region interrupts.\par
\'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_IER\'bf\'cd \'c7\'d4\'b2\'b2, DRAEM\'c0\'ba \'b0\'a2\'b0\'a2\'c0\'c7 \'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 2 \'c2\'f7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed\'b7\'ce\'bc\'ad \'b5\'bf\'c0\'db\'c7\'d1\'b4\'d9.\par
\par
Refer to Table 16-88 Hardware Request for more information about EDMA Interrupts.\par
EDMA \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'c1\'a4\'ba\'b8\'b4\'c2 \'c7\'a5 16-88 \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'bf\'e4\'c3\'bb\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.8 Chaining EDMA Channels\par
16.2.5.8 EDMA \'c3\'a4\'b3\'ce \'bf\'ac\'b0\'e1\par
\par
The channel chaining capability for the EDMA allows the completion of an EDMA channel transfer to trigger another EDMA channel transfer.\par
EDMA \'c3\'a4\'b3\'ce \'c3\'bc\'c0\'ce \'b1\'e2\'b4\'c9\'c0\'ba EDMA \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db\'c0\'bb \'bf\'cf\'b7\'e1\'c7\'cf\'bf\'a9 \'b4\'d9\'b8\'a5 EDMA \'c3\'a4\'b3\'ce \'c0\'fc\'bc\'db\'c0\'bb \'c6\'ae\'b8\'ae\'b0\'c5 \'c7\'d2 \'bc\'f6\'c0\'d6\'b0\'d4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The purpose is to allow the ability to chain several events through one event occurrence.\par
\'b8\'f1\'c0\'fb\'c0\'ba \'c7\'cf\'b3\'aa\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae \'b9\'df\'bb\'fd\'c0\'bb \'c5\'eb\'c7\'d8 \'bf\'a9\'b7\'af \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'bf\'ac\'b0\'e1\'c7\'cf\'b4\'c2 \'b1\'e2\'b4\'c9\'c0\'bb \'c7\'e3\'bf\'eb\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Chaining is different from linking (Section 16.2.5.3.7 Linking Transfers).\par
\'bf\'ac\'b0\'e1\'c0\'ba \'bf\'ac\'b0\'e1\'b0\'fa \'b4\'d9\'b8\'a8\'b4\'cf\'b4\'d9 (16.2.5.3.7 \'c0\'fd \'b8\'b5\'c5\'a9 \'bf\'ac\'b0\'e1).\par
\par
The EDMA link feature reloads the current channel parameter set with the linked parameter set.\par
EDMA \'b8\'b5\'c5\'a9 \'b1\'e2\'b4\'c9\'c0\'ba \'b8\'b5\'c5\'a9 \'b5\'c8 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'bc\'bc\'c6\'ae\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'c8 \'c7\'f6\'c0\'e7 \'c3\'a4\'b3\'ce \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b8\'a6 \'b4\'d9\'bd\'c3\'b7\'ce\'b5\'e5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The EDMA chaining feature does not modify or update any channel parameter set.\par
EDMA \'c3\'bc\'c0\'cc\'b4\'d7 \'b1\'e2\'b4\'c9\'c0\'ba \'c3\'a4\'b3\'ce \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'bc\'bc\'c6\'ae\'b8\'a6 \'bc\'f6\'c1\'a4\'c7\'cf\'b0\'c5\'b3\'aa \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'c7\'cf\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
It provides a synchronization event to the chained channel (see Section 16.2.5.4.1.3 Chain-Triggered Transfer Request).\par
\'c3\'bc\'c0\'ce \'b5\'c8 \'c3\'a4\'b3\'ce\'bf\'a1 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9 (16.2.5.4.1.3 \'c3\'bc\'c0\'ce \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb \'c2\'fc\'c1\'b6).\par
\par
Chaining is achieved at either final transfer completion or intermediate transfer completion, or both, of the current channel.\par
\'c3\'bc\'c0\'ce \'bf\'ac\'b0\'e1\'c0\'ba \'c7\'f6\'c0\'e7 \'c3\'a4\'b3\'ce\'c0\'c7 \'c3\'d6\'c1\'be \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'b6\'c7\'b4\'c2 \'c1\'df\'b0\'a3 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'b6\'c7\'b4\'c2 \'b5\'d1 \'b4\'d9\'bf\'a1\'bc\'ad \'bc\'f6\'c7\'e0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 Consider a channel m (DMA/QDMA) required to chain to channel n.\par
  \'c3\'a4\'b3\'ce n\'bf\'a1 \'c3\'bc\'c0\'ce\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'bf\'e4\'b1\'b8\'b5\'c7\'b4\'c2 \'c3\'a4\'b3\'ce m (DMA / QDMA)\'c0\'bb \'b0\'ed\'b7\'c1\'c7\'cf\'c0\'da.\par
\par
Channel number n (0-63) needs to be programmed into the EDMA_TPCC_OPT_n[17:12] TCC bit-field of channel m channel options parameter (OPT) set.\par
\'c3\'a4\'b3\'ce \'b9\'f8\'c8\'a3 n (0-63)\'c0\'ba \'c3\'a4\'b3\'ce m \'c3\'a4\'b3\'ce \'bf\'c9\'bc\'c7 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 (OPT) \'bc\'bc\'c6\'ae\'c0\'c7 EDMA_TPCC_OPT_n [17:12] TCC \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'bf\'a1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  If final transfer completion chaining EDMA_TPCC_OPT_n[22] TCCHEN = 1 is enabled, the chaintriggered event occurs after the submission of the last transfer request of channel m is either submitted or completed (depending on early or normal completion).\par
\bullet  \'c3\'d6\'c1\'be \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c3\'bc\'c0\'cc\'b4\'d7 EDMA_TPCC_OPT_n [22] TCCHEN = 1\'c0\'cc \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'cf\'b8\'e9 chaintriggered \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'c3\'a4\'b3\'ce m\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb \'c1\'a6\'c3\'e2\'c0\'cc \'c1\'a6\'c3\'e2\'b5\'c7\'b0\'c5\'b3\'aa \'bf\'cf\'b7\'e1 \'b5\'c9 \'b6\'a7 \'b9\'df\'bb\'fd\'c7\'d5\'b4\'cf\'b4\'d9 (\'c1\'b6\'b1\'e2 \'b6\'c7\'b4\'c2 \'c1\'a4\'bb\'f3 \'bf\'cf\'b7\'e1\'bf\'a1 \'b5\'fb\'b6\'f3 \'b4\'d9\'b8\'a7).\par
\par
\bullet  If intermediate transfer completion chaining EDMA_TPCC_OPT_n[23] ITCCHEN = 1 is enabled, the chain-triggered event occurs after every transfer request, except the last of channel m is either submitted or completed (depending on early or normal completion).\par
\bullet  \'c1\'df\'b0\'a3 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c3\'bc\'c0\'cc\'b4\'d7 EDMA_TPCC_OPT_n [23] ITCCHEN = 1\'c0\'cc \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'b0\'e6\'bf\'ec, \'c3\'a4\'b3\'ce m\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7\'c0\'cc \'c0\'fc\'bc\'db\'b5\'c7\'b0\'c5\'b3\'aa \'bf\'cf\'b7\'e1 \'b5\'c9 \'b6\'a7\'b1\'ee\'c1\'f6 (\'c3\'ca\'b1\'e2 \'b6\'c7\'b4\'c2 \'c1\'a4\'bb\'f3 \'bf\'cf\'b7\'e1\'bf\'a1 \'b5\'fb\'b6\'f3 \'b4\'d9\'b8\'a7) \'c3\'bc\'c0\'ce \'c0\'fc\'bc\'db \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'b8\'f0\'b5\'e7 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb \'c8\'c4\'bf\'a1 \'b9\'df\'bb\'fd\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  If both final and intermediate transfer completion chaining (EDMA_TPCC_OPT_n[22] TCCHEN = 1 and EDMA_TPCC_OPT_n[23] ITCCHEN = 1) are enabled, then the chain-trigger event occurs after every transfer request is submitted or completed (depending on early or normal completion).\par
\bullet  \'c3\'d6\'c1\'be \'b9\'d7 \'c1\'df\'b0\'a3 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c3\'bc\'c0\'cc\'b4\'d7 (EDMA_TPCC_OPT_n [22] TCCHEN = 1 \'b9\'d7 EDMA_TPCC_OPT_n [23] ITCCHEN = 1)\'c0\'cc \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'b0\'e6\'bf\'ec \'b8\'f0\'b5\'e7 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'cc \'c1\'a6\'c3\'e2\'b5\'c7\'b0\'c5\'b3\'aa \'bf\'cf\'b7\'e1\'b5\'c8 \'c8\'c4\'bf\'a1 \'c3\'bc\'c0\'ce \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'d5\'b4\'cf\'b4\'d9 (\'c3\'ca\'b1\'e2 \'b6\'c7\'b4\'c2 \'c1\'a4\'bb\'f3 \'bf\'cf\'bc\'ba).\par
\par
Table 16-96 illustrates the number of chain event triggers occurring in different synchronized scenarios.\par
\'c7\'a5 16-96\'c0\'ba \'bc\'ad\'b7\'ce \'b4\'d9\'b8\'a5 \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'bd\'c3\'b3\'aa\'b8\'ae\'bf\'c0\'bf\'a1\'bc\'ad \'b9\'df\'bb\'fd\'c7\'cf\'b4\'c2 \'c3\'bc\'c0\'ce \'c0\'cc\'ba\'a5\'c6\'ae \'c6\'ae\'b8\'ae\'b0\'c5\'c0\'c7 \'bc\'f6\'b8\'a6 \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
Consider channel 31 programmed with EDMA_TPCC_ABCNT_n[15:0] ACNT = 3, EDMA_TPCC_ABCNT_n[31:16] BCNT = 4, EDMA_TPCC_CCNT_n[15:0] CCNT = 5, and EDMA_TPCC_OPT_n[17:12] TCC = 30.\par
EDMA_TPCC_ABCNT_n [15 : 0] ACNT = 3, EDMA_TPCC_ABCNT_n [31:16] BCNT = 4, EDMA_TPCC_CCNT_n [15 : 0] CCNT = 5 \'b9\'d7 EDMA_TPCC_OPT_n [17:12] TCC = 30\'c0\'b8\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c8 \'c3\'a4\'b3\'ce 31\'c0\'bb \'b0\'ed\'b7\'c1\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.9 EDMA Interrupts\par
16.2.5.9 EDMA \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\par
\par
The EDMA interrupts are divided into 2 categories: transfer completion interrupts and error interrupts.\par
EDMA \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b4\'c2 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'bf\'cd \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'c0\'c7 \'b5\'ce \'b0\'a1\'c1\'f6 \'b9\'fc\'c1\'d6\'b7\'ce \'b1\'b8\'ba\'d0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
There are nine region interrupts, eight shadow regions and one global region.\par
9 \'b0\'b3\'c0\'c7 \'bf\'b5\'bf\'aa \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae, 8 \'b0\'b3\'c0\'c7 \'b1\'d7\'b8\'b2\'c0\'da \'bf\'b5\'bf\'aa \'b9\'d7 1 \'b0\'b3\'c0\'c7 \'c0\'fc\'bf\'aa \'bf\'b5\'bf\'aa\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The transfer completion interrupts are listed in Table 16-97.\par
\'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b4\'c2 \'c7\'a5 16-97\'bf\'a1 \'b3\'aa\'bf\'ad\'b5\'c7\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The transfer completion interrupts and the error interrupts from the transfer controllers are all routed to the device interrupt controllers INTCs through the inputs of the IRQ_CROSSBAR module.\par
\'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'cd \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'b9\'d7 \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b4\'c2 \'b8\'f0\'b5\'ce IRQ_CROSSBAR \'b8\'f0\'b5\'e2\'c0\'c7 \'c0\'d4\'b7\'c2\'c0\'bb \'c5\'eb\'c7\'d8 \'c0\'e5\'c4\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af INTC\'b7\'ce \'b6\'f3\'bf\'ec\'c6\'c3\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.2.5.9.1 Transfer Completion Interrupts\par
16.2.5.9.1 \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c0\'fc\'bc\'db\par
\par
The EDMA_TPCC is responsible for generating transfer completion interrupts to the CPU(s) (and other EDMA masters).\par
EDMA_TPCC\'b4\'c2 CPU (\'b9\'d7 \'b4\'d9\'b8\'a5 EDMA \'b8\'b6\'bd\'ba\'c5\'cd)\'b7\'ce \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The EDMA generates a single completion interrupt per shadow region, as well as one for the global region on behalf of all 64 channels.\par
EDMA\'b4\'c2 \'b8\'f0\'b5\'e7 64 \'b0\'b3 \'c3\'a4\'b3\'ce\'c0\'bb \'b4\'eb\'bd\'c5\'c7\'cf\'bf\'a9 \'c0\'fc\'bf\'aa \'bf\'b5\'bf\'aa\'c0\'bb\'c0\'a7\'c7\'d1 \'b0\'cd\'bb\'d3\'b8\'b8 \'be\'c6\'b4\'cf\'b6\'f3 \'b1\'d7\'b8\'b2\'c0\'da \'bf\'b5\'bf\'aa\'b8\'b6\'b4\'d9 \'c7\'cf\'b3\'aa\'c0\'c7 \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The various control registers and bit fields facilitate EDMA interrupt generation.\par
\'b4\'d9\'be\'e7\'c7\'d1 \'c1\'a6\'be\'ee \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'b9\'d7 \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b4\'c2 EDMA \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bb\'fd\'bc\'ba\'c0\'bb \'bf\'eb\'c0\'cc\'c7\'cf\'b0\'d4\'c7\'d1\'b4\'d9.\par
\par
The software architecture must either use the global interrupt or the shadow interrupts, but not both.\par
\'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'be\'c6\'c5\'b0\'c5\'d8\'c3\'b3\'b4\'c2 \'c0\'fc\'bf\'aa \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'b6\'c7\'b4\'c2 \'bc\'a8\'b5\'b5\'bf\'ec \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c1\'df \'c7\'cf\'b3\'aa\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d8\'be\'df\'c7\'cf\'c1\'f6\'b8\'b8 \'b5\'d1 \'b4\'d9 \'bb\'e7\'bf\'eb\'c7\'d8\'bc\'ad\'b4\'c2 \'be\'c8\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The transfer completion code EDMA_TPCC_OPT_n[17:12] TCC value is directly mapped to the bits of the interrupt pending register EDMA_TPCC_IPR / EDMA_TPCC_IPRH.\par
\'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5 EDMA_TPCC_OPT_n [17:12] TCC \'b0\'aa\'c0\'ba \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'ba\'b8\'b7\'f9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_IPR / EDMA_TPCC_IPRH\'c0\'c7 \'ba\'f1\'c6\'ae\'bf\'a1 \'c1\'f7\'c1\'a2 \'b8\'c5\'c7\'ce\'b5\'c8\'b4\'d9.\par
\par
For example, if EDMA_TPCC_OPT_n[17:12] TCC = 10 0001b, EDMA_TPCC_IPRH[1] is set after transfer completion, and results in interrupt generation to the CPU(s) if the completion interrupt is enabled for the CPU.\par
\'bf\'b9\'b8\'a6 \'b5\'e9\'be\'ee, EDMA_TPCC_OPT_n [17:12] TCC = 10 0001b\'c0\'cc\'b8\'e9 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c8\'c4 EDMA_TPCC_IPRH [1]\'c0\'cc \'bc\'b3\'c1\'a4\'b5\'c7\'b0\'ed CPU\'bf\'a1 \'b4\'eb\'c7\'d8 \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9 CPU\'bf\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'bb\'fd\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
See Section 16.2.5.9.1.1 Enabling Transfer Completion Interrupts for details about enabling EDMA transfer completion interrupts.\par
EDMA \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'c8\'b0\'bc\'ba\'c8\'ad\'c7\'cf\'b4\'c2 \'b9\'e6\'b9\'fd\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 16.2.5.9.1.1 \'c0\'fd\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
When a completion code is returned (as a result of early or normal completions), the corresponding bit in EDMA_TPCC_IPR / EDMA_TPCC_IPRH registers is set if transfer completion interrupt (final/intermediate) is enabled in the channel options parameter (OPT) for a PaRAM set associated with the transfer.\par
\'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b0\'a1 \'b9\'dd\'c8\'af\'b5\'c7\'b8\'e9 (\'c3\'ca\'b1\'e2 \'b6\'c7\'b4\'c2 \'c1\'a4\'bb\'f3 \'bf\'cf\'b7\'e1\'c0\'c7 \'b0\'e1\'b0\'fa), \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae (\'c3\'d6\'c1\'be / \'c1\'df\'b0\'a3)\'b0\'a1 \'c0\'fc\'bc\'db\'b0\'fa \'b0\'fc\'b7\'c3\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'c0\'c7 \'c3\'a4\'b3\'ce \'bf\'c9\'bc\'c7 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 (OPT)\'bf\'a1\'bc\'ad \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9 EDMA_TPCC_IPR / EDMA_TPCC_IPRH \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'c7\'d8\'b4\'e7 \'ba\'f1\'c6\'ae\'b0\'a1 \'bc\'b3\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9\par
\par
The transfer completion code (TCC) can program to any value for a DMA/QDMA channel.\par
\'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5 (TCC)\'b4\'c2 DMA / QDMA \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d1 \'b8\'f0\'b5\'e7 \'b0\'aa\'c0\'b8\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
A direct relation between the channel number and the transfer completion code value does not need to exist.\par
\'c3\'a4\'b3\'ce \'b9\'f8\'c8\'a3\'bf\'cd \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5 \'b0\'aa \'bb\'e7\'c0\'cc\'c0\'c7 \'c1\'f7\'c1\'a2\'c0\'fb\'c0\'ce \'b0\'fc\'b0\'e8\'b4\'c2 \'c1\'b8\'c0\'e7\'c7\'d2 \'c7\'ca\'bf\'e4\'b0\'a1 \'be\'f8\'b4\'d9.\par
\par
This allows multiple channels having the same transfer completion code value to cause a CPU to execute the same interrupt service routine (ISR) for different channels.\par
\'c0\'cc\'b4\'c2 \'b5\'bf\'c0\'cf\'c7\'d1 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5 \'b0\'aa\'c0\'bb \'b0\'ae\'b4\'c2 \'b4\'d9\'c1\'df \'c3\'a4\'b3\'ce\'c0\'cc CPU\'b7\'ce \'c7\'cf\'bf\'a9\'b1\'dd \'bb\'f3\'c0\'cc\'c7\'d1 \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d8 \'b5\'bf\'c0\'cf\'c7\'d1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bc\'ad\'ba\'f1\'bd\'ba \'b7\'e7\'c6\'be (ISR)\'c0\'bb \'bd\'c7\'c7\'e0\'c7\'cf\'b0\'d4\'c7\'d1\'b4\'d9.\par
\par
If the channel is used in the context of a shadow region and it intends for the shadow region interrupt to be asserted, then ensure that the bit corresponding to the TCC code is enabled in EDMA_TPCC_IER / EDMA_TPCC_IERH and in the corresponding shadow region's DMA region access registers(EDMA_TPCC_DRAEM_k / EDMA_TPCC_DRAEHM_k).\par
\'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa\'c0\'c7 \'c4\'c1\'c5\'d8\'bd\'ba\'c6\'ae\'bf\'a1\'bc\'ad \'c3\'a4\'b3\'ce\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'b0\'ed \'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'b9\'df\'bb\'fd\'bd\'c3\'c5\'b0\'b7\'c1\'b4\'c2 \'b0\'e6\'bf\'ec EDMA_TPCC_IER / EDMA_TPCC_IERH \'b9\'d7 \'c7\'d8\'b4\'e7 \'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa\'c0\'c7 DMA \'bf\'b5\'bf\'aa \'be\'d7\'bc\'bc\'bd\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1\'bc\'ad TCC \'c4\'da\'b5\'e5\'bf\'a1 \'c7\'d8\'b4\'e7\'c7\'cf\'b4\'c2 \'ba\'f1\'c6\'ae\'b0\'a1 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'be\'ee \'c0\'d6\'b4\'c2\'c1\'f6 \'c8\'ae\'c0\'ce\'c7\'d5\'b4\'cf\'b4\'d9 (EDMA_TPCC_DRAEM_k / EDMA_TPCC_DRAEHM_k).\par
\par
Interrupt generation can be enabled at either final transfer completion or intermediate transfer completion, or both. Consider channel m as an example.\par
\'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bb\'fd\'bc\'ba\'c0\'ba \'c3\'d6\'c1\'be \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'b6\'c7\'b4\'c2 \'c1\'df\'b0\'a3 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'b6\'c7\'b4\'c2 \'b5\'d1 \'b4\'d9\'bf\'a1\'bc\'ad \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9. \'c3\'a4\'b3\'ce m\'c0\'bb \'bf\'b9\'b7\'ce \'b5\'e9\'be\'ee \'ba\'b8\'b0\'da\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  If the final transfer interrupt (EDMA_TPCC_OPT_n[20] TCINTEN = 1) is enabled, the interrupt occurs after the last transfer request of channel m is either submitted or completed (depending on early or normal completion).\par
\'c3\'d6\'c1\'be \'c0\'fc\'bc\'db \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae (EDMA_TPCC_OPT_n [20] TCINTEN = 1)\'b0\'a1 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b4\'c2 \'c3\'a4\'b3\'ce m\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'cc \'c1\'a6\'c3\'e2\'b5\'c7\'b0\'c5\'b3\'aa \'bf\'cf\'b7\'e1\'b5\'c8 \'c8\'c4 (\'c3\'ca\'b1\'e2 \'b6\'c7\'b4\'c2 \'c1\'a4\'bb\'f3 \'bf\'cf\'b7\'e1\'bf\'a1 \'b5\'fb\'b6\'f3) \'b9\'df\'bb\'fd\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  If the intermediate transfer interrupt (EDMA_TPCC_OPT_n[21] ITCINTEN = 1) is enabled, the interrupt occurs after every transfer request, except the last TR of channel m is either submitted or completed (depending on early or normal completion).\par
\bullet  \'c1\'df\'b0\'a3 \'c0\'fc\'bc\'db \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae (EDMA_TPCC_OPT_n [21] ITCINTEN = 1)\'b0\'a1 \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'b0\'e6\'bf\'ec, \'c3\'a4\'b3\'ce m\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7 TR\'c0\'cc \'c1\'a6\'c3\'e2\'b5\'c7\'b0\'c5\'b3\'aa \'bf\'cf\'b7\'e1 \'b5\'c9 \'b6\'a7\'b8\'a6 \'c1\'a6\'bf\'dc\'c7\'cf\'b0\'ed\'b4\'c2 (\'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'bf\'e4\'c3\'bb\'bf\'a1 \'b5\'fb\'b6\'f3) \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'cc\'c0\'d6\'c0\'bb \'b6\'a7\'b8\'b6\'b4\'d9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  If both final and intermediate transfer completion interrupts (EDMA_TPCC_OPT_n[20] TCINTEN = 1, and EDMA_TPCC_OPT_n[21] ITCINTEN = 1) are enabled, then the interrupt occurs after every transfer request is submitted or completed (depending on early or normal completion).\par
\bullet  \'c3\'d6\'c1\'be \'b9\'d7 \'c1\'df\'b0\'a3 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae (EDMA_TPCC_OPT_n [20] TCINTEN = 1 \'b9\'d7 EDMA_TPCC_OPT_n [21] ITCINTEN = 1)\'b0\'a1 \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'b0\'e6\'bf\'ec \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b4\'c2 \'b8\'f0\'b5\'e7 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'cc \'c1\'a6\'c3\'e2\'b5\'c7\'b0\'c5\'b3\'aa \'bf\'cf\'b7\'e1\'b5\'c8 \'c8\'c4\'bf\'a1 \'b9\'df\'bb\'fd\'c7\'d5\'b4\'cf\'b4\'d9 (\'c1\'b6\'b1\'e2 \'b6\'c7\'b4\'c2 \'c1\'a4\'bb\'f3 \'bf\'cf\'b7\'e1\'bf\'a1 \'b5\'fb\'b6\'f3 \'b4\'d9\'b8\'a7) .\par
\par
Table 16-100 shows the number of interrupts that occur in different synchronized scenarios.\par
\'c7\'a5 16-100\'c0\'ba \'bc\'ad\'b7\'ce \'b4\'d9\'b8\'a5 \'b5\'bf\'b1\'e2\'c8\'ad \'b5\'c8 \'bd\'c3\'b3\'aa\'b8\'ae\'bf\'c0\'bf\'a1\'bc\'ad \'b9\'df\'bb\'fd\'c7\'cf\'b4\'c2 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'c0\'c7 \'bc\'f6\'b8\'a6 \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
Consider channel 31, programmed with ABCNT_n[15:0] ACNT = 3, EDMA_TPCC_ABCNT_n[31:16] BCNT = 4, EDMA_TPCC_CCNT_n[15:0]CCNT = 5, and EDMA_TPCC_OPT_n[17:12] TCC = 30.\par
ABCNT_n [15 : 0] ACNT = 3, EDMA_TPCC_ABCNT_n [31:16] BCNT = 4, EDMA_TPCC_CCNT_n [15 : 0] CCNT = 5 \'b9\'d7 EDMA_TPCC_OPT_n [17:12] TCC = 30\'c0\'b8\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c8 \'c3\'a4\'b3\'ce 31\'c0\'bb \'b0\'ed\'b7\'c1\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.9.1.1 Enabling Transfer Completion Interrupts\par
16.2.5.9.1.1 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c8\'b0\'bc\'ba\'c8\'ad\par
\par
For the EDMA channel controller to assert a transfer completion to the external environment, the interrupts must be enabled in the EDMA_TPCC.\par
EDMA \'c3\'a4\'b3\'ce \'c1\'a6\'be\'ee\'b1\'e2\'b0\'a1 \'bf\'dc\'ba\'ce \'c8\'af\'b0\'e6\'c0\'b8\'b7\'ce\'c0\'c7 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1\'b8\'a6 \'c7\'a5\'b8\'ed\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8\'bc\'ad\'b4\'c2 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 EDMA_TPCC\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
This is in addition to setting up the EDMA_TPCC_OPT_n[20] TCINTEN and EDMA_TPCC_OPT_n[21] ITCINTEN bits of the associated PaRAM set.\par
\'c0\'cc\'b0\'cd\'c0\'ba \'bf\'ac\'b0\'fc\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'c0\'c7 EDMA_TPCC_OPT_n [20] TCINTEN \'b9\'d7 EDMA_TPCC_OPT_n [21] ITCINTEN \'ba\'f1\'c6\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
The EDMA channel controller has interrupt enable registers EDMA_TPCC_IER / EDMA_TPCC_IERH and each bit location in EDMA_TPCC_IER / EDMA_TPCC_IERH serves as a primary enable for the corresponding interrupt pending registers EDMA_TPCC_IPR / EDMA_TPCC_IPRH.\par
EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_IER / EDMA_TPCC_IERH\'b8\'a6 \'b0\'a1\'c1\'f6\'b8\'e7 EDMA_TPCC_IER / EDMA_TPCC_IERH\'c0\'c7 \'b0\'a2 \'ba\'f1\'c6\'ae \'c0\'a7\'c4\'a1\'b4\'c2 \'c7\'d8\'b4\'e7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_IPR / EDMA_TPCC_IPRH\'c0\'c7 \'b1\'e2\'ba\'bb \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed\'b7\'ce \'bb\'e7\'bf\'eb\'b5\'c8\'b4\'d9.\par
\par
All of the interrupt registers (EDMA_TPCC_IER, EDMA_TPCC_IESR, EDMA_TPCC_IECR, and EDMA_TPCC_IPR) are either manipulated from the global DMA channel region, or by the DMA channel shadow regions.\par
\'b8\'f0\'b5\'e7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (EDMA_TPCC_IER, EDMA_TPCC_IESR, EDMA_TPCC_IECR \'b9\'d7 EDMA_TPCC_IPR)\'b4\'c2 \'c0\'fc\'bf\'aa DMA \'c3\'a4\'b3\'ce \'bf\'b5\'bf\'aa \'b6\'c7\'b4\'c2 DMA \'c3\'a4\'b3\'ce \'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa\'bf\'a1\'bc\'ad \'c1\'b6\'c0\'db\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The shadow regions provide a view to the same set of physical registers that are in the global region.\par
\'c0\'bd\'bf\'b5 \'bf\'b5\'bf\'aa\'c0\'ba \'c0\'fc\'bf\'aa \'bf\'b5\'bf\'aa\'bf\'a1\'c0\'d6\'b4\'c2 \'b5\'bf\'c0\'cf\'c7\'d1 \'b9\'b0\'b8\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d1\'ba\'b8\'b1\'e2\'b8\'a6 \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The EDMA channel controller has a hierarchical completion interrupt scheme that uses a single set of interrupt pending registers EDMA_TPCC_IPR / EDMA_TPCC_IPRH and single set of interrupt enable registers EDMA_TPCC_IER / EDMA_TPCC_IERH.\par
EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'b4\'dc\'c0\'cf \'bc\'bc\'c6\'ae\'c0\'c7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_IPR / EDMA_TPCC_IPRH \'b9\'d7 \'b4\'dc\'c0\'cf \'bc\'bc\'c6\'ae\'c0\'c7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_IER / EDMA_TPCC_IERH\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'b4\'c2 \'b0\'e8\'c3\'fe \'c0\'fb \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'b1\'b8\'bc\'ba\'c7\'a5\'b8\'a6 \'b0\'a1\'c1\'f6\'b0\'ed \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
 The programmable DMA region access enable registers EDMA_TPCC_DRAEM_k / EDMA_TPCC_DRAEHM_k provides a second level of interrupt masking.\par
  \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'b0\'a1\'b4\'c9 DMA \'bf\'b5\'bf\'aa \'be\'d7\'bc\'bc\'bd\'ba \'b0\'a1\'b4\'c9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_DRAEM_k / EDMA_TPCC_DRAEHM_k\'b4\'c2 \'b5\'ce \'b9\'f8\'c2\'b0 \'bc\'f6\'c1\'d8\'c0\'c7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'b8\'b6\'bd\'ba\'c5\'b7\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The global region interrupt output is gated based on the enable mask that is provided by EDMA_TPCC_IER / EDMA_TPCC_IERH, see Figure 16-27 The region interrupt outputs are gated by EDMA_TPCC_IER and the specific EDMA_TPCC_DRAEM_k / EDMA_TPCC_DRAEHM_k associated with the region.\par
\'b1\'db\'b7\'ce\'b9\'fa \'bf\'b5\'bf\'aa \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c3\'e2\'b7\'c2\'c0\'ba EDMA_TPCC_IER / EDMA_TPCC_IERH\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'a6\'b0\'f8\'b5\'c7\'b4\'c2 \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed \'b8\'b6\'bd\'ba\'c5\'a9\'b8\'a6 \'b1\'e2\'c1\'d8\'c0\'b8\'b7\'ce \'b0\'d4\'c0\'cc\'c6\'c3\'b5\'cb\'b4\'cf\'b4\'d9 (\'b1\'d7\'b8\'b2 16-27 \'c2\'fc\'c1\'b6). \'bf\'b5\'bf\'aa \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c3\'e2\'b7\'c2\'c0\'ba EDMA_TPCC_IER\'bf\'cd \'c7\'d8\'b4\'e7 \'bf\'b5\'bf\'aa\'b0\'fa \'b0\'fc\'b7\'c3\'b5\'c8 \'c6\'af\'c1\'a4 EDMA_TPCC_DRAEM_k / EDMA_TPCC_DRAEHM_k\'bf\'a1 \'c0\'c7\'c7\'d8 \'b0\'d4\'c0\'cc\'c6\'ae\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
NOTE: The EDMA_TPCC_DRAEM_k / EDMA_TPCC_DRAEHM_k for all regions are expected to be set up at system initialization and to remain static for an extended period of time.\par
\'c1\'d6 : \'b8\'f0\'b5\'e7 region\'bf\'a1 \'b4\'eb\'c7\'d1 EDMA_TPCC_DRAEM_k / EDMA_TPCC_DRAEHM_k\'b4\'c2 \'bd\'c3\'bd\'ba\'c5\'db \'c3\'ca\'b1\'e2\'c8\'ad\'bd\'c3 \'bc\'b3\'c1\'a4\'b5\'c7\'b0\'ed \'bf\'c0\'b7\'a3 \'bd\'c3\'b0\'a3 \'b5\'bf\'be\'c8 \'c1\'a4\'c0\'fb\'c0\'b8\'b7\'ce \'c0\'af\'c1\'f6\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
 The interrupt enable registers are used for dynamic enable/disable of individual interrupts.\par
  \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'b0\'b3\'ba\'b0 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'c0\'c7 \'b5\'bf\'c0\'fb \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed / \'b5\'f0\'bd\'ba \'bf\'a1\'c0\'cc\'ba\'ed\'bf\'a1 \'bb\'e7\'bf\'eb\'b5\'c8\'b4\'d9.\par
\par
Because there is no relation between the EDMA_TPCC_OPT_n[17:12] TCC value and the DMA/QDMA channel, it is possible, the DMA channel 0 to have the EDMA_TPCC_OPT_n[17:12] TCC = 63 in its associated PaRAM set.\par
EDMA_TPCC_OPT_n [17:12] TCC \'b0\'aa\'b0\'fa DMA / QDMA \'c3\'a4\'b3\'ce \'bb\'e7\'c0\'cc\'bf\'a1\'b4\'c2 \'b0\'fc\'b0\'e8\'b0\'a1 \'be\'f8\'c0\'b8\'b9\'c7\'b7\'ce DMA \'c3\'a4\'b3\'ce 0\'c0\'ba \'bf\'ac\'b0\'fc\'b5\'c8 PaRAM \'bc\'bc\'c6\'ae\'bf\'a1\'bc\'ad EDMA_TPCC_OPT_n [17:12] TCC = 63\'c0\'bb \'b0\'a1\'c1\'fa \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
This mean that if a transfer completion interrupt is enabled (EDMA_TPCC_OPT_n[20] TCINTEN or EDMA_TPCC_OPT_n[21] ITCINTEN is set), then based on the TCC value, EDMA_TPCC_IPRH[31] E63 is set up on completion.\par
\'c1\'ef, \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'b0\'e6\'bf\'ec (EDMA_TPCC_OPT_n [20] TCINTEN \'b6\'c7\'b4\'c2 EDMA_TPCC_OPT_n [21] ITCINTEN\'c0\'cc \'bc\'b3\'c1\'a4\'b5\'c8 \'b0\'e6\'bf\'ec), TCC \'b0\'aa\'c0\'bb \'b1\'e2\'b9\'dd\'c0\'b8\'b7\'ce EDMA_TPCC_IPRH [31] E63\'c0\'cc \'bf\'cf\'b7\'e1 \'b5\'c9 \'b6\'a7 \'bc\'b3\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
For proper channel operations and interrupt generation using the shadow region map - program the EDMA_TPCC_DRAEM_k / EDMA_TPCC_DRAEHM_k that is associated with the shadow region to have read/write access to both bit 0 (corresponding to channel 0) and bit 63 (corresponding to EDMA_TPCC_IPRH bit that is set upon completion).\par
\'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa \'b8\'ca\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'c0\'fb\'c0\'fd\'c7\'d1 \'c3\'a4\'b3\'ce \'c0\'db\'b5\'bf \'b9\'d7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bb\'fd\'bc\'ba\'c0\'bb \'c0\'a7\'c7\'d8 \'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'c8 EDMA_TPCC_DRAEM_k / EDMA_TPCC_DRAEHM_k\'b8\'a6 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'cf\'bf\'a9 \'ba\'f1\'c6\'ae 0 (\'c3\'a4\'b3\'ce 0\'bf\'a1 \'c7\'d8\'b4\'e7) \'b9\'d7 \'ba\'f1\'c6\'ae 63 (EDMA_TPCC_IPRH \'ba\'f1\'c6\'ae\'bf\'a1 \'c7\'d8\'b4\'e7)\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'be\'d7\'bc\'bc\'bd\'ba \'b1\'c7\'c7\'d1\'c0\'bb \'b0\'ae\'bd\'c0\'b4\'cf\'b4\'d9 ).\par
\par
16.2.5.9.1.2 Clearing Transfer Completion Interrupts\par
16.2.5.9.1.2 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c1\'f6\'bf\'ec\'b1\'e2\par
\par
Transfer completion interrupts that are latched to the interrupt pending registers ( EDMA_TPCC_IPR / EDMA_TPCC_IPRH ) are cleared by writing a 1 to the corresponding bit in the interrupt pending clear register ( EDMA_TPCC_ICR / EDMA_TPCC_ICRH ).\par
\'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (EDMA_TPCC_IPR / EDMA_TPCC_IPRH)\'bf\'a1 \'b7\'a1\'c4\'a1 \'b5\'c8 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b4\'c2 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'c5\'ac\'b8\'ae\'be\'ee \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (EDMA_TPCC_ICR / EDMA_TPCC_ICRH)\'c0\'c7 \'c7\'d8\'b4\'e7 \'ba\'f1\'c6\'ae\'bf\'a1 1\'c0\'bb \'be\'b2\'b8\'e9 \'c5\'ac\'b8\'ae\'be\'ee\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
For example, a write of 1 to EDMA_TPCC_ICR[0] E0 clears a pending interrupt in EDMA_TPCC_IPR[0] E0.\par
\'bf\'b9\'b8\'a6 \'b5\'e9\'be\'ee, EDMA_TPCC_ICR [0] E0\'bf\'a1 1\'c0\'bb \'be\'b2\'b8\'e9 EDMA_TPCC_IPR [0] E0\'bf\'a1\'bc\'ad \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'c1\'f6\'bf\'f6\'c1\'fd\'b4\'cf\'b4\'d9.\par
\par
If an incoming transfer completion code TCC (EDMA_TPCC_OPT_n[17:12] TCC) gets latched to a bit in EDMA_TPCC_IPR / EDMA_TPCC_IPRH, then additional bits that get set due to a subsequent transfer completion does not result in asserting the EDMA_TPCC completion interrupt.\par
\'b5\'e9\'be\'ee\'bf\'c0\'b4\'c2 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5 TCC (EDMA_TPCC_OPT_n [17:12] TCC)\'b0\'a1 EDMA_TPCC_IPR / EDMA_TPCC_IPRH\'c0\'c7 \'ba\'f1\'c6\'ae\'b7\'ce \'b7\'a1\'c4\'a1\'b5\'c7\'b8\'e9 \'c8\'c4\'bc\'d3 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1\'b7\'ce \'c0\'ce\'c7\'d8 \'bc\'b3\'c1\'a4\'b5\'c7\'b4\'c2 \'c3\'df\'b0\'a1 \'ba\'f1\'c6\'ae\'b0\'a1 EDMA_TPCC \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'be\'ee\'bc\'ad \'c6\'ae\'c7\'cf\'c1\'f6 \'be\'ca\'b4\'c2\'b4\'d9.\par
\par
In order for the completion interrupt to be pulsed, the required transition is from a state where no enabled interrupts are set to a state where at least one enabled interrupt is set.\par
\'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'c6\'de\'bd\'cc\'b5\'c7\'b1\'e2 \'c0\'a7\'c7\'d8\'bc\'ad, \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed \'b5\'c8 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'ba \'bb\'f3\'c5\'c2\'b7\'ce\'ba\'ce\'c5\'cd \'c0\'fb\'be\'ee\'b5\'b5 \'c7\'cf\'b3\'aa\'c0\'c7 \'c0\'ce \'bf\'a1\'c0\'cc\'ba\'ed \'b5\'c8 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'bc\'b3\'c1\'a4\'b5\'c8 \'bb\'f3\'c5\'c2\'b7\'ce \'c7\'ca\'bf\'e4\'c7\'d1 \'c0\'fc\'c0\'cc\'b0\'a1\'c0\'d6\'b4\'d9.\par
\par
16.2.5.9.2 EDMA Interrupt Servicing\par
16.2.5.9.2 EDMA \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bc\'ad\'ba\'f1\'bd\'ba\par
\par
Upon completion of a transfer (early or normal completion), the EDMA channel controller sets the appropriate bit in the interrupt pending registers ( EDMA_TPCC_IPR / EDMA_TPCC_IPRH ), as the transfer completion codes specify.\par
\'c0\'fc\'bc\'db\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'b8\'e9 (\'c3\'ca\'b1\'e2 \'b6\'c7\'b4\'c2 \'c1\'a4\'bb\'f3 \'bf\'cf\'b7\'e1) EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b0\'a1 \'c1\'f6\'c1\'a4\'c7\'cf\'b4\'c2\'b4\'eb\'b7\'ce \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (EDMA_TPCC_IPR / EDMA_TPCC_IPRH)\'bf\'a1 \'c0\'fb\'c0\'fd\'c7\'d1 \'ba\'f1\'c6\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
If the completion interrupts are appropriately enabled, then the CPU enters the interrupt service routine (ISR) when the completion interrupt is asserted.\par
\'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'c0\'fb\'c0\'fd\'c8\'f7 \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9 \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'cf\'b8\'e9 CPU\'b4\'c2 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bc\'ad\'ba\'f1\'bd\'ba \'b7\'e7\'c6\'be (ISR)\'bf\'a1 \'c1\'f8\'c0\'d4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
After servicing the interrupt, the ISR should clear the corresponding bit in EDMA_TPCC_IPR/EDMA_TPCC_IPRH, thereby enabling recognition of future interrupts.\par
\'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'bc\'ad\'ba\'f1\'bd\'ba \'c7\'d1 \'c8\'c4 ISR\'c0\'ba EDMA_TPCC_IPR / EDMA_TPCC_IPRH\'c0\'c7 \'c7\'d8\'b4\'e7 \'ba\'f1\'c6\'ae\'b8\'a6 \'c1\'f6\'bf\'f6\'be\'df\'c7\'cf\'b9\'c7\'b7\'ce \'c7\'e2\'c8\'c4 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'c0\'ce\'bd\'c4 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPCC only asserts additional completion interrupts when all EDMA_TPCC_IPR / EDMA_TPCC_IPRH bits clear.\par
EDMA_TPCC\'b4\'c2 \'b8\'f0\'b5\'e7 EDMA_TPCC_IPR / EDMA_TPCC_IPRH \'ba\'f1\'c6\'ae\'b0\'a1 \'c1\'f6\'bf\'f6\'c1\'f8 \'b0\'e6\'bf\'ec\'bf\'a1\'b8\'b8 \'c3\'df\'b0\'a1 \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'be\'ee\'bc\'b3 \'bc\'c7\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
When one interrupt is serviced many other transfer completions may result in additional bits being set in EDMA_TPCC_IPR / EDMA_TPCC_IPRH, thereby resulting in additional interrupts.\par
\'c7\'cf\'b3\'aa\'c0\'c7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'c3\'b3\'b8\'ae \'b5\'c9 \'b6\'a7 \'b4\'d9\'b8\'a5 \'b8\'b9\'c0\'ba \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1\'b4\'c2 EDMA_TPCC_IPR / EDMA_TPCC_IPRH\'bf\'a1 \'c3\'df\'b0\'a1 \'ba\'f1\'c6\'ae\'b0\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'be\'ee \'c3\'df\'b0\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Each of the bits in EDMA_TPCC_IPR / EDMA_TPCC_IPRH may need different types of service therefore, the ISR must check all pending interrupts and continue until all of the posted interrupts are serviced appropriately.\par
EDMA_TPCC_IPR / EDMA_TPCC_IPRH\'c0\'c7 \'b0\'a2 \'ba\'f1\'c6\'ae\'b4\'c2 \'bc\'ad\'b7\'ce \'b4\'d9\'b8\'a5 \'c0\'af\'c7\'fc\'c0\'c7 \'bc\'ad\'ba\'f1\'bd\'ba\'b8\'a6 \'c7\'ca\'bf\'e4\'b7\'ce \'c7\'d2 \'bc\'f6 \'c0\'d6\'c0\'b8\'b9\'c7\'b7\'ce ISR\'c0\'ba \'b8\'f0\'b5\'e7 \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'c1\'a1\'b0\'cb\'c7\'cf\'b0\'ed \'b0\'d4\'bd\'c3 \'b5\'c8 \'b8\'f0\'b5\'e7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'c0\'fb\'c0\'fd\'c7\'cf\'b0\'d4 \'c3\'b3\'b8\'ae \'b5\'c9 \'b6\'a7\'b1\'ee\'c1\'f6 \'b0\'e8\'bc\'d3\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Examples of pseudo code for a CPU interrupt service routine for an EDMA_TPCC completion interrupt are shown in Example 16-2 and Example 16-3.\par
\'bf\'b9 16-2 \'b9\'d7 \'bf\'b9 16-3\'bf\'a1\'b4\'c2 EDMA_TPCC \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 CPU \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bc\'ad\'ba\'f1\'bd\'ba \'b7\'e7\'c6\'be\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'c7\'bb\'e7 \'c4\'da\'b5\'e5\'c0\'c7 \'bf\'b9\'b0\'a1 \'b3\'aa\'bf\'cd \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The ISR routine in Example 16-2 is more exhaustive and incurs a higher latency.\par
\'bf\'b9 16-2\'c0\'c7 ISR \'b7\'e7\'c6\'be\'c0\'ba\'ba\'b8\'b4\'d9 \'c3\'b6\'c0\'fa\'c7\'cf\'b0\'ed \'c1\'f6\'bf\'ac \'bd\'c3\'b0\'a3\'c0\'cc \'b1\'e6\'be\'ee\'c1\'fd\'b4\'cf\'b4\'d9.\par
\par
16.2.5.9.3 Interrupt Evaluation Operation\par
16.2.5.9.3 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c6\'f2\'b0\'a1 \'b5\'bf\'c0\'db\par
\par
The EDMA_TPCC has interrupt evaluate registers EDMA_TPCC_IEVAL that exist in the global region and in each shadow region.\par
EDMA_TPCC\'bf\'a1\'b4\'c2 \'c0\'fc\'bf\'aa \'bf\'b5\'bf\'aa\'b0\'fa \'b0\'a2 \'c0\'bd\'bf\'b5 \'bf\'b5\'bf\'aa\'bf\'a1 \'c1\'b8\'c0\'e7\'c7\'cf\'b4\'c2 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c6\'f2\'b0\'a1 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_IEVAL\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The registers in the shadow region are the only registers in the DMA channel shadow region memory map that are not affected by the settings for the DMA region access enable registers EDMA_TPCC_DRAEM_k / EDMA_TPCC_DRAEHM_k.\par
\'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa\'c0\'c7 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 DMA \'bf\'b5\'bf\'aa \'be\'d7\'bc\'bc\'bd\'ba \'b0\'a1\'b4\'c9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_DRAEM_k / EDMA_TPCC_DRAEHM_k\'bf\'a1 \'b4\'eb\'c7\'d1 \'bc\'b3\'c1\'a4\'c0\'c7 \'bf\'b5\'c7\'e2\'c0\'bb\'b9\'de\'c1\'f6 \'be\'ca\'b4\'c2 DMA \'c3\'a4\'b3\'ce \'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa \'b8\'de\'b8\'f0\'b8\'ae \'b8\'ca\'c0\'c7 \'c0\'af\'c0\'cf\'c7\'d1 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Writing a 1 to the EDMA_TPCC_IEVAL[0] EVAL bit in the registers that are associated with a particular shadow region results in pulsing the associated region interrupt (global or shadow), if any enabled interrupt (via EDMA_TPCC_IER / EDMA_TPCC_IERH) is still pending EDMA_TPCC_IPR/EDMA_TPCC_IPRH.\par
\'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae (EDMA_TPCC_IER / EDMA_TPCC_IERH\'b8\'a6 \'c5\'eb\'c7\'d1)\'b0\'a1 \'bf\'a9\'c0\'fc\'c8\'f7 EDMA_TPCC_IPR /EDMA_TPCC_IPRH \'c0\'bb \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'b0\'e6\'bf\'ec \'c6\'af\'c1\'a4 \'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'c8 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 EDMA_TPCC_IEVAL [0] EVAL \'ba\'f1\'c6\'ae\'bf\'a1 1\'c0\'bb \'be\'b2\'b8\'e9 \'bf\'ac\'b0\'fc\'b5\'c8 \'bf\'b5\'bf\'aa \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae (\'b1\'db\'b7\'ce\'b9\'fa \'b6\'c7\'b4\'c2 \'bc\'a8\'b5\'b5\'bf\'ec)\'b0\'a1 \'c6\'de\'bd\'cc\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 This register assures that the CPU does not miss the interrupts (or the EDMA master associated with the shadow region) if the software architecture chooses not to use all interrupts.\par
  \'c0\'cc \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'be\'c6\'c5\'b0\'c5\'d8\'c3\'b3\'b0\'a1 \'b8\'f0\'b5\'e7 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'bb \'b0\'e6\'bf\'ec CPU\'b0\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae (\'b6\'c7\'b4\'c2 \'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa\'b0\'fa \'b0\'fc\'b7\'c3\'b5\'c8 EDMA \'b8\'b6\'bd\'ba\'c5\'cd)\'b8\'a6 \'b3\'f5\'c4\'a1\'c1\'f6 \'be\'ca\'b5\'b5\'b7\'cf\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Refer to Example 16-3 about the use of EDMA_TPCC_IEVAL in the EDMA interrupt service routine (ISR).\par
EDMA \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bc\'ad\'ba\'f1\'bd\'ba \'b7\'e7\'c6\'be (ISR)\'bf\'a1\'bc\'ad EDMA_TPCC_IEVAL \'bb\'e7\'bf\'eb\'bf\'a1 \'b4\'eb\'c7\'d1 \'bf\'b9 16-3\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
Similarly an error evaluation register EDMA_TPCC_EEVAL exists in the global region.\par
\'b8\'b6\'c2\'f9\'b0\'a1\'c1\'f6\'b7\'ce \'bf\'c0\'b7\'f9 \'c6\'f2\'b0\'a1 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_EEVAL\'c0\'cc \'c0\'fc\'bf\'aa \'bf\'b5\'bf\'aa\'bf\'a1 \'c1\'b8\'c0\'e7\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Writing a 1 to the EDMA_TPCC_EEVAL[0] EVAL bit causes the pulsing of the error interrupt if any pending errors are in EDMA_TPCC_EMR / EDMA_TPCC_EMRH, EDMA_TPCC_QEMR, or EDMA_TPCC_CCERR.\par
\'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'bf\'c0\'b7\'f9\'b0\'a1 EDMA_TPCC_EMR / EDMA_TPCC_EMRH, EDMA_TPCC_QEMR \'b6\'c7\'b4\'c2 EDMA_TPCC_CCERR\'bf\'a1 \'c0\'d6\'c0\'b8\'b8\'e9 EDMA_TPCC_EEVAL [0] EVAL \'ba\'f1\'c6\'ae\'bf\'a1 1\'c0\'bb \'b1\'e2\'b7\'cf\'c7\'cf\'b8\'e9 \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'c6\'de\'bd\'cc\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
See Section 16.2.5.9.4 Error Interrupts for additional information regarding error interrupts.\par
\'bf\'a1\'b7\'af \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 \'c3\'df\'b0\'a1 \'c1\'a4\'ba\'b8\'b4\'c2 16.2.5.9.4 \'c0\'fd\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.9.4 Error Interrupts\par
16.2.5.9.4 \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\par
\par
The EDMA_TPCC error registers provide the capability to differentiate error conditions (event missed, threshold exceed, etc.).\par
EDMA_TPCC \'bf\'c0\'b7\'f9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'bf\'c0\'b7\'f9 \'c1\'b6\'b0\'c7 (\'c0\'cc\'ba\'a5\'c6\'ae \'b4\'a9\'b6\'f4, \'c0\'d3\'b0\'e8 \'b0\'aa \'c3\'ca\'b0\'fa \'b5\'ee)\'c0\'bb \'b1\'b8\'ba\'b0\'c7\'cf\'b4\'c2 \'b1\'e2\'b4\'c9\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
 Additionally, setting the error bits in these registers results in asserting the EDMA_TPCC error interrupt.\par
  \'b6\'c7\'c7\'d1\'c0\'cc \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'bf\'c0\'b7\'f9 \'ba\'f1\'c6\'ae\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'cf\'b8\'e9 EDMA_TPCC \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'b9\'df\'bb\'fd\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
 If the EDMA_TPCC error interrupt is enabled in the device interrupt controller(s), then it allows the CPU(s) to handle the error conditions.\par
  EDMA_TPCC \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'c0\'e5\'c4\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1\'bc\'ad \'c8\'b0\'bc\'ba\'c8\'ad\'b5\'c7\'b8\'e9 CPU\'b0\'a1 \'bf\'c0\'b7\'f9 \'c1\'b6\'b0\'c7\'c0\'bb \'c3\'b3\'b8\'ae \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPCC has a single error interrupt (EDMA_TPCC_ERRINT) that is asserted for all EDMA_TPCC error conditions.\par
EDMA_TPCC\'bf\'a1\'b4\'c2 \'b8\'f0\'b5\'e7 EDMA_TPCC \'bf\'c0\'b7\'f9 \'c1\'b6\'b0\'c7\'bf\'a1 \'b4\'eb\'c7\'d8 \'be\'ee\'bc\'b3 \'bc\'c7\'b5\'c7\'b4\'c2 \'b4\'dc\'c0\'cf \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae (EDMA_TPCC_ERRINT)\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
There are four conditions that cause the error interrupt:\par
\'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'c0\'cf\'c0\'b8\'c5\'b0\'b4\'c2 \'b3\'d7 \'b0\'a1\'c1\'f6 \'c1\'b6\'b0\'c7\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  DMA missed events: for all 64 DMA channels. DMA missed events are latched in the event missed registers EDMA_TPCC_EMR / EDMA_TPCC_EMRH.\par
\bullet  DMA \'b4\'a9\'b6\'f4 \'c0\'cc\'ba\'a5\'c6\'ae : 64 \'b0\'b3 DMA \'c3\'a4\'b3\'ce \'b8\'f0\'b5\'ce. DMA \'b4\'a9\'b6\'f4 \'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'b4\'a9\'b6\'f4 \'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae EDMA_TPCC_EMR / EDMA_TPCC_EMRH\'bf\'a1 \'b7\'a1\'c4\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  QDMA missed events: for all 8 QDMA channels. QDMA missed events are latched in the QDMA event missed register EDMA_TPCC_QEMR.\par
\bullet  QDMA \'b4\'a9\'b6\'f4 \'c0\'cc\'ba\'a5\'c6\'ae : 8 \'b0\'b3\'c0\'c7 QDMA \'c3\'a4\'b3\'ce \'b8\'f0\'b5\'ce. QDMA \'b4\'a9\'b6\'f4 \'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 QDMA \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'a9\'b6\'f4 \'b5\'c8 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_QEMR\'bf\'a1 \'b7\'a1\'c4\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  Threshold exceed: for all event queues. These are latched in EDMA_TPCC error register EDMA_TPCC_CCERR.\par
\bullet  \'c0\'d3\'b0\'e8 \'b0\'aa \'c3\'ca\'b0\'fa : \'b8\'f0\'b5\'e7 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'b4\'eb\'c7\'d8. \'c0\'cc\'b5\'e9\'c0\'ba EDMA_TPCC \'bf\'c0\'b7\'f9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_CCERR\'bf\'a1 \'b7\'a1\'c4\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  TCC error: for outstanding transfer requests that are expected to return completion code EDMA_TPCC_OPT_n[22] TCCHEN or EDMA_TPCC_OPT_n[23] TCINTEN bit is set to 1, exceeding the maximum limit of 63.\par
\bullet  TCC \'bf\'c0\'b7\'f9 : \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b8\'a6 \'b9\'dd\'c8\'af \'c7\'d2 \'b0\'cd\'c0\'b8\'b7\'ce \'bf\'b9\'bb\'f3\'b5\'c7\'b4\'c2 \'b9\'cc\'c7\'d8\'b0\'e1 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb EDMA_TPCC_OPT_n [22] TCCHEN \'b6\'c7\'b4\'c2 EDMA_TPCC_OPT_n [23] TCINTEN \'ba\'f1\'c6\'ae\'b0\'a1 1\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'c7\'be\'ee \'c3\'d6\'b4\'eb \'c1\'a6\'c7\'d1 \'c0\'ce 63\'c0\'bb \'c3\'ca\'b0\'fa\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
This is also latched in the EDMA_TPCC error register EDMA_TPCC_CCERR.\par
\'c0\'cc\'b0\'cd\'c0\'ba EDMA_TPCC \'bf\'c0\'b7\'f9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_CCERR\'bf\'a1\'b5\'b5 \'b7\'a1\'c4\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Figure 16-28 illustrates the EDMA_TPCC error interrupt generation operation.\par
\'b1\'d7\'b8\'b2 16-28\'c0\'ba EDMA_TPCC \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bb\'fd\'bc\'ba \'c0\'db\'be\'f7\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
If any of the bits are set in the error registers due to any error condition, the EDMA_TPCC_ERRINT is always asserted, as there are no enables for masking these error events.\par
\'bf\'c0\'b7\'f9 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'ce\'c7\'d8 \'ba\'f1\'c6\'ae \'c1\'df \'c7\'cf\'b3\'aa\'b0\'a1 \'bf\'c0\'b7\'f9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'b8\'e9, EDMA_TPCC_ERRINT\'b4\'c2 \'c7\'d7\'bb\'f3\'c0\'cc \'bf\'c0\'b7\'f9 \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'b8\'b6\'bd\'ba\'c5\'b7\'c7\'cf\'b1\'e2\'c0\'a7\'c7\'d1 \'c0\'db\'b5\'bf\'c0\'cc \'be\'f8\'c0\'b8\'b9\'c7\'b7\'ce \'be\'ee\'bc\'b3 \'bc\'c7\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Similar to transfer completion interrupts (EDMA_TPCC_INT), the error interrupt also only pulses when the error interrupt condition transitions from no errors being set to at least one error being set.\par
\'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae (EDMA_TPCC_INT)\'bf\'cd \'c0\'af\'bb\'e7\'c7\'cf\'b0\'d4, \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c1\'b6\'b0\'c7\'c0\'cc \'c0\'fb\'be\'ee\'b5\'b5 \'c7\'cf\'b3\'aa\'c0\'c7 \'bf\'c0\'b7\'f9 \'bc\'b3\'c1\'a4\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'ba \'bf\'c0\'b7\'f9 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'fc\'c8\'af \'b5\'c9 \'b6\'a7\'b8\'b8 \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b5\'b5 \'c6\'de\'bd\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
If additional error events are latched prior to the original error bits clearing, the EDMA_TPCC does not generate additional interrupt.\par
\'bf\'f8\'b7\'a1\'c0\'c7 \'bf\'c0\'b7\'f9 \'ba\'f1\'c6\'ae\'b0\'a1 \'c1\'f6\'bf\'ec\'b1\'e2 \'c0\'fc\'bf\'a1 \'c3\'df\'b0\'a1 \'bf\'c0\'b7\'f9 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'b7\'a1\'c4\'a1\'b5\'c7\'b8\'e9 EDMA_TPCC\'b4\'c2 \'c3\'df\'b0\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'cf\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
To reduce the burden on the software, there is an error evaluate register EDMA_TPCC_EEVAL that allows re-evaluation of pending set error events/bits, similar to the interrupt evaluate register EDMA_TPCC_IEVAL.\par
\'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'c0\'c7 \'ba\'ce\'b4\'e3\'c0\'bb \'c1\'d9\'c0\'cc\'b1\'e2 \'c0\'a7\'c7\'d8 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c6\'f2\'b0\'a1 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_IEVAL\'b0\'fa \'c0\'af\'bb\'e7\'c7\'cf\'b0\'d4 \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'bc\'bc\'c6\'ae \'bf\'c0\'b7\'f9 \'c0\'cc\'ba\'a5\'c6\'ae / \'ba\'f1\'c6\'ae\'c0\'c7 \'c0\'e7\'c6\'f2\'b0\'a1\'b8\'a6 \'c7\'e3\'bf\'eb\'c7\'cf\'b4\'c2 \'bf\'c0\'b7\'f9 \'c6\'f2\'b0\'a1 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_EEVAL\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
 Unlike the EDMA_TPCC_IEVAL functionality, the EDMA_TPCC_EEVAL register must be written with \lquote 1\rquote  after any error interrupts are serviced (even when all pending errors are cleared) in order for subsequent errors to trigger a new interrupt.\par
 EDMA_TPCC_IEVAL \'b1\'e2\'b4\'c9\'b0\'fa \'b4\'de\'b8\'ae, EDMA_TPCC_EEVAL \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'c8\'c4\'bc\'d3 \'bf\'c0\'b7\'f9\'b7\'ce \'c0\'ce\'c7\'d8 \'bb\'f5\'b7\'ce\'bf\'ee \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'c6\'ae\'b8\'ae\'b0\'c5\'b5\'c7\'b5\'b5\'b7\'cf\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'c3\'b3\'b8\'ae \'b5\'c8 \'c8\'c4\'bf\'a1\'b5\'b5 (\'b8\'f0\'b5\'e7 \'ba\'b8\'b7\'f9 \'bf\'c0\'b7\'f9\'b0\'a1 \'c1\'a6\'b0\'c5 \'b5\'c8 \'b0\'e6\'bf\'ec\'bf\'a1\'b5\'b5) '1'\'b7\'ce \'c0\'db\'bc\'ba\'b5\'c7\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
NOTE: It is good practice to enable the error interrupt in the device interrupt controller and to associate an interrupt service routine with it to address the various error conditions appropriately.\par
\'c2\'fc\'b0\'ed : \'c0\'e5\'c4\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1\'bc\'ad \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'c8\'b0\'bc\'ba\'c8\'ad\'c7\'cf\'b0\'ed \'bf\'a9\'b7\'af \'b0\'a1\'c1\'f6 \'bf\'c0\'b7\'f9 \'c1\'b6\'b0\'c7\'c0\'bb \'c0\'fb\'c0\'fd\'c7\'cf\'b0\'d4 \'c7\'d8\'b0\'e1\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bc\'ad\'ba\'f1\'bd\'ba \'b7\'e7\'c6\'be\'c0\'bb \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'bc\'ad\'ba\'f1\'bd\'ba \'b7\'e7\'c6\'be\'b0\'fa \'bf\'ac\'b0\'fc\'bd\'c3\'c5\'b0\'b4\'c2 \'b0\'cd\'c0\'cc \'c1\'c1\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Doing so puts less burden on the software (polling for error status), it provides a good debug mechanism for unexpected error conditions.\par
\'c0\'cc\'b7\'b8\'b0\'d4\'c7\'cf\'b8\'e9 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'bf\'a1 \'ba\'ce\'b4\'e3\'c0\'bb \'b4\'fa \'c1\'d6\'b8\'e7 (\'bf\'c0\'b7\'f9 \'bb\'f3\'c5\'c2 \'c6\'fa\'b8\'b5) \'bf\'b9\'b1\'e2\'c4\'a1 \'be\'ca\'c0\'ba \'bf\'c0\'b7\'f9 \'bb\'f3\'c8\'b2\'bf\'a1 \'b4\'eb\'c7\'d8 \'c1\'c1\'c0\'ba \'b5\'f0\'b9\'f6\'b1\'d7 \'b8\'de\'c4\'bf\'b4\'cf\'c1\'f2\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.10 Memory Protection\par
16.2.5.10 \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3\par
\par
The EDMA channel controller supports two kinds of memory protection: active and proxy.\par
EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'c8\'b0\'bc\'ba \'b9\'d7 \'c7\'c1\'b7\'cf\'bd\'c3\'b6\'f3\'b4\'c2 \'b5\'ce \'c1\'be\'b7\'f9\'c0\'c7 \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3\'b8\'a6 \'c1\'f6\'bf\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.10.1 Active Memory Protection\par
16.2.5.10.1 \'be\'d7\'c6\'bc\'ba\'ea \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3\par
\par
\par
 Active memory protection is a feature that allows or prevents read and write accesses to the EDMA_TPCC registers.\par
\'c8\'b0\'bc\'ba \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3\'b4\'c2 EDMA_TPCC \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'be\'d7\'bc\'bc\'bd\'ba\'b8\'a6 \'c7\'e3\'bf\'eb\'c7\'cf\'b0\'c5\'b3\'aa \'b1\'dd\'c1\'f6\'c7\'cf\'b4\'c2 \'b1\'e2\'b4\'c9\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Active memory protection is achieved by a set of memory protection permissions attribute EDMA_TPCC_MPPAN_k registers.\par
\'c8\'b0\'bc\'ba \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3\'b4\'c2 \'c0\'cf\'b7\'c3\'c0\'c7 \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3 \'b1\'c7\'c7\'d1 \'bc\'d3\'bc\'ba EDMA_TPCC_MPPAN_k \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c0\'c7\'c7\'d8 \'bc\'f6\'c7\'e0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPCC register map is divided into three categories:\par
EDMA_TPCC \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'b8\'ca\'c0\'ba \'bc\'bc \'b0\'a1\'c1\'f6 \'b9\'fc\'c1\'d6\'b7\'ce \'b3\'aa 5 \'be\'ee\'c1\'fd\'b4\'cf\'b4\'d9.\par
\par
\bullet  a global region.\par
\bullet  \'b1\'db\'b7\'ce\'b9\'fa \'c1\'f6\'bf\'aa.\par
\par
\bullet  a global channel region.\par
\bullet  \'b1\'db\'b7\'ce\'b9\'fa \'c3\'a4\'b3\'ce \'c1\'f6\'bf\'aa.\par
\par
\bullet  eight shadow regions.\par
\bullet  8 \'b0\'b3\'c0\'c7 \'c0\'bd\'bf\'b5 \'c1\'f6\'bf\'aa.\par
\par
Each shadow region consists of the respective shadow region registers and the associated PaRAM.\par
\'b0\'a2 \'c0\'bd\'bf\'b5 \'bf\'b5\'bf\'aa\'c0\'ba \'b0\'a2\'b0\'a2\'c0\'c7 \'c0\'bd\'bf\'b5 \'bf\'b5\'bf\'aa \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'cd \'b0\'fc\'b7\'c3 PaRAM\'c0\'b8\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
For more detailed information regarding the contents of a shadow region, refer to Table 16-111 EDMA_TPCC Registers Mapping Summary.\par
\'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa\'c0\'c7 \'b3\'bb\'bf\'eb\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba \'c7\'a5 16-111 EDMA_TPCC \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'b8\'c5\'c7\'ce \'bf\'e4\'be\'e0\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
Each of the eight shadow regions has an associated EDMA_TPCC_MPPAN_k registers that defines the specific requestor(s) and types of requests that are allowed to the regions resources.\par
\'bf\'a9\'b4\'fc \'b0\'b3\'c0\'c7 \'bd\'a6\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa \'b0\'a2\'b0\'a2\'c0\'ba region \'b8\'ae\'bc\'d2\'bd\'ba\'bf\'a1 \'c7\'e3\'bf\'eb\'b5\'c7\'b4\'c2 \'c6\'af\'c1\'a4 \'bf\'e4\'c3\'bb\'c0\'da \'b9\'d7 \'bf\'e4\'c3\'bb \'c0\'af\'c7\'fc\'c0\'bb \'c1\'a4\'c0\'c7\'c7\'cf\'b4\'c2 \'bf\'ac\'b0\'fc\'b5\'c8 EDMA_TPCC_MPPAN_k \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6\'b0\'a1\'c1\'fd\'b4\'cf\'b4\'d9.\par
\par
The global channel region is also protected with a memory-mapped register EDMA_TPCC_MPPAG.\par
\'b1\'db\'b7\'ce\'b9\'fa \'c3\'a4\'b3\'ce \'bf\'b5\'bf\'aa\'c0\'ba \'b6\'c7\'c7\'d1 \'b8\'de\'b8\'f0\'b8\'ae \'b8\'ca\'c7\'ce \'b5\'c8 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_MPPAG\'b7\'ce \'ba\'b8\'c8\'a3\'b5\'c8\'b4\'d9.\par
\par
The EDMA_TPCC_MPPAG applies to the global region and to the global channel region, except the other EDMA_TPCC_MPPAN_k registers themselves.\par
EDMA_TPCC_MPPAG\'b4\'c2 \'b4\'d9\'b8\'a5 EDMA_TPCC_MPPAN_k \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c1\'a6\'bf\'dc\'c7\'cf\'b0\'ed \'c0\'fc\'bf\'aa region\'b0\'fa \'c0\'fc\'bf\'aa \'c3\'a4\'b3\'ce region\'bf\'a1 \'c0\'fb\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Table 16-101 shows the accesses that are allowed or not allowed to the EDMA_TPCC_MPPAG and EDMA_TPCC_MPPAN_k.\par
\'c7\'a5 16-101\'c0\'ba EDMA_TPCC_MPPAG \'b9\'d7 EDMA_TPCC_MPPAN_k\'bf\'a1 \'c7\'e3\'bf\'eb\'b5\'c7\'b0\'c5\'b3\'aa \'c7\'e3\'bf\'eb\'b5\'c7\'c1\'f6 \'be\'ca\'b4\'c2 \'be\'d7\'bc\'bc\'bd\'ba\'b8\'a6 \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
The active memory protection uses the EDMA_TPCC_OPT_n[31] PRIV and EDMA_TPCC_OPT_n[27:24] PRIVID attributes of the EDMA peripheral modules.\par
\'c8\'b0\'bc\'ba \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3\'b4\'c2 EDMA \'c1\'d6\'ba\'af \'b8\'f0\'b5\'e2\'c0\'c7 EDMA_TPCC_OPT_n [31] PRIV \'b9\'d7 EDMA_TPCC_OPT_n [27:24] PRIVID \'bc\'d3\'bc\'ba\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
TheEDMA_TPCC_OPT_n[31] PRIV is the privilege level (i.e., user vs. supervisor).\par
TheEDMA_TPCC_OPT_n [31] PRIV\'b4\'c2 \'c6\'af\'b1\'c7 \'b7\'b9\'ba\'a7 (\'c1\'ef, \'bb\'e7\'bf\'eb\'c0\'da \'b4\'eb \'b0\'fc\'b8\'ae\'c0\'da)\'c0\'cc\'b4\'d9.\par
\par
The EDMA_TPCC_OPT_n[27:24] PRIVID refers to a privilege ID with a number that is associated with an EDMA peripheral modules.\par
EDMA_TPCC_OPT_n [27:24] PRIVID\'b4\'c2 EDMA \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1 \'b8\'f0\'b5\'e2\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'c8 \'b9\'f8\'c8\'a3\'b8\'a6 \'b0\'a1\'c1\'f8 \'c6\'af\'b1\'c7 ID\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
Table 16-102 describes the EDMA_TPCC_MPPAN_k register mapping for the shadow regions (which includes shadow region registers and PaRAM addresses).\par
\'c7\'a5 16-102\'b4\'c2 \'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa (\'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'b9\'d7 PaRAM \'c1\'d6\'bc\'d2 \'c6\'f7\'c7\'d4)\'bf\'a1 \'b4\'eb\'c7\'d1 EDMA_TPCC_MPPAN_k \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'b8\'c5\'c7\'ce\'c0\'bb \'bc\'b3\'b8\'ed\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The region-based EDMA_TPCC_MPPAN_k registers are used to protect accesses to the DMA shadow regions and the associated region PaRAM.\par
\'bf\'b5\'bf\'aa \'b1\'e2\'b9\'dd EDMA_TPCC_MPPAN_k \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 DMA \'bc\'a8\'b5\'b5\'bf\'ec \'bf\'b5\'bf\'aa \'b9\'d7 \'b0\'fc\'b7\'c3 \'bf\'b5\'bf\'aa PaRAM\'bf\'a1 \'b4\'eb\'c7\'d1 \'be\'d7\'bc\'bc\'bd\'ba\'b8\'a6 \'ba\'b8\'c8\'a3\'c7\'cf\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 Because there are eight regions, there are eight EDMA_TPCC_MPPAN_k region registers (MPPA[0-7]).\par
  8 \'b0\'b3\'c0\'c7 \'bf\'b5\'bf\'aa\'c0\'cc \'c0\'d6\'c0\'b8\'b9\'c7\'b7\'ce 8 \'b0\'b3\'c0\'c7 EDMA_TPCC_MPPAN_k \'bf\'b5\'bf\'aa \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (MPPA [0-7])\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.10.2 Proxy Memory Protection\par
16.2.5.10.2 \'c7\'c1\'b7\'cf\'bd\'c3 \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3\par
\par
Proxy memory protection allows an EDMA transfer programmed by a given peripheral module connected to EDMA, to have its permissions travel with the transfer through the EDMA_TPTC.\par
\'c7\'c1\'b7\'cf\'bd\'c3 \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3\'b4\'c2 EDMA\'bf\'a1 \'bf\'ac\'b0\'e1\'b5\'c8 \'c1\'d6\'be\'ee\'c1\'f8 \'c1\'d6\'ba\'af \'b8\'f0\'b5\'e2\'bf\'a1 \'c0\'c7\'c7\'d8 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'b5\'c8 EDMA \'c0\'fc\'bc\'db\'c0\'cc EDMA_TPTC\'b8\'a6 \'c5\'eb\'c7\'d1 \'c0\'fc\'bc\'db\'b0\'fa \'c7\'d4\'b2\'b2 \'c0\'cc\'b5\'bf\'c7\'cf\'b5\'b5\'b7\'cf \'c7\'e3\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The permissions travel along with the read transactions to the source and the write transactions to the destination endpoints.\par
\'bb\'e7\'bf\'eb \'b1\'c7\'c7\'d1\'c0\'ba \'c0\'d0\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'b0\'fa \'c7\'d4\'b2\'b2 \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'bf\'a1 \'b4\'eb\'c7\'d1 \'be\'b2\'b1\'e2 \'c6\'ae\'b7\'a3\'c0\'e8\'bc\'c7\'b0\'fa \'c7\'d4\'b2\'b2 \'c0\'cc\'b5\'bf\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPCC_OPT_n[31] PRIV bit and EDMA_TPCC_OPT_n[27:24] PRIVID bit is set with the peripheral module's PRIV value and PRIVID values, respectively, when any part of the PaRAM set is written.\par
PaRAM \'bc\'bc\'c6\'ae\'c0\'c7 \'c0\'cf\'ba\'ce\'b0\'a1 \'b1\'e2\'b7\'cf \'b5\'c9 \'b6\'a7 EDMA_TPCC_OPT_n [31] PRIV \'ba\'f1\'c6\'ae\'bf\'cd EDMA_TPCC_OPT_n [27:24] PRIVID \'ba\'f1\'c6\'ae\'b4\'c2 \'c1\'d6\'ba\'af \'b8\'f0\'b5\'e2\'c0\'c7 PRIV \'b0\'aa\'b0\'fa PRIVID \'b0\'aa\'c0\'b8\'b7\'ce \'b0\'a2\'b0\'a2 \'bc\'b3\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPCC_OPT_n[31] PRIV is the privilege level (i.e., user vs. supervisor).\par
EDMA_TPCC_OPT_n [31] PRIV\'b4\'c2 \'c6\'af\'b1\'c7 \'b7\'b9\'ba\'a7 (\'c1\'ef, \'bb\'e7\'bf\'eb\'c0\'da \'b4\'eb \'b0\'fc\'b8\'ae\'c0\'da)\'c0\'cc\'b4\'d9.\par
\par
The EDMA_TPCC_OPT_n[27:24] PRIVID refers to a privilege ID with a number that is associated with an peripheral module connected to EDMA.\par
EDMA_TPCC_OPT_n [27:24] PRIVID\'b4\'c2 EDMA\'bf\'a1 \'bf\'ac\'b0\'e1\'b5\'c8 \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1 \'b8\'f0\'b5\'e2\'b0\'fa \'bf\'ac\'b0\'fc\'b5\'c8 \'b9\'f8\'c8\'a3\'b8\'a6 \'b0\'a1\'c1\'f8 \'c6\'af\'b1\'c7 ID\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
These options are part of the TR that are submitted to the transfer controller.\par
\'c0\'cc\'b7\'af\'c7\'d1 \'bf\'c9\'bc\'c7\'c0\'ba \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'c1\'a6\'c3\'e2\'b5\'c7\'b4\'c2 TR\'c0\'c7 \'c0\'cf\'ba\'ce\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
The transfer controller uses the above values on their respective read and write command bus so that the target endpoints can perform memory protection checks based on these values.\par
\'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2\'b4\'c2 \'b4\'eb\'bb\'f3 \'bf\'a3\'b5\'e5 \'c6\'f7\'c0\'ce\'c6\'ae\'b0\'a1\'c0\'cc \'b0\'aa\'c0\'bb \'b1\'e2\'b9\'dd\'c0\'b8\'b7\'ce \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3 \'b0\'cb\'bb\'e7\'b8\'a6 \'bc\'f6\'c7\'e0 \'c7\'d2 \'bc\'f6 \'c0\'d6\'b5\'b5\'b7\'cf \'b0\'a2\'b0\'a2\'c0\'c7 \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'b8\'ed\'b7\'c9 \'b9\'f6\'bd\'ba\'bf\'a1\'bc\'ad \'c0\'a7\'c0\'c7 \'b0\'aa\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Consider a parameter set that is programmed by a CPU in user privilege level for a simple transfer with the source buffer on an L2 page and the destination buffer on an L1D page.\par
L2 \'c6\'e4\'c0\'cc\'c1\'f6\'c0\'c7 \'bf\'f8\'ba\'bb \'b9\'f6\'c6\'db\'bf\'cd L1D \'c6\'e4\'c0\'cc\'c1\'f6\'c0\'c7 \'b4\'eb\'bb\'f3 \'b9\'f6\'c6\'db\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'b0\'a3\'b4\'dc\'c7\'d1 \'c0\'fc\'bc\'db\'c0\'bb \'c0\'a7\'c7\'d8 \'bb\'e7\'bf\'eb\'c0\'da \'b1\'c7\'c7\'d1 \'bc\'f6\'c1\'d8\'bf\'a1\'bc\'ad CPU\'bf\'a1 \'c0\'c7\'c7\'d8 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c8 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'c1\'fd\'c7\'d5\'c0\'bb \'bb\'fd\'b0\'a2\'c7\'d8\'ba\'b8\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
The EDMA_TPCC_OPT_n[31] PRIV is 0 for user-level and the CPU has a EDMA_TPCC_OPT_n[27:24] PRIVID to 0.\par
EDMA_TPCC_OPT_n [31] PRIV\'b4\'c2 \'bb\'e7\'bf\'eb\'c0\'da \'b7\'b9\'ba\'a7\'bf\'a1 \'b4\'eb\'c7\'d8 0\'c0\'cc\'b0\'ed CPU\'b4\'c2 EDMA_TPCC_OPT_n [27:24] PRIVID\'b8\'a6 0\'c0\'b8\'b7\'ce \'b0\'ae\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The PaRAM set is shown in Figure 16-29.\par
PaRAM \'bc\'bc\'c6\'ae\'b4\'c2 \'b1\'d7\'b8\'b2 16-29\'bf\'a1 \'b3\'aa\'bf\'cd \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.11 Event Queue(s)\par
16.2.5.11 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\par
\par
Event queues are a part of the EDMA channel controller.\par
\'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'b4\'c2 EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 \'c0\'cf\'ba\'ce\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Event queues form the interface between the event detection logic in the EDMA_TPCC and the transfer request (TR) submission logic of the EDMA_TPCC.\par
\'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'ba EDMA_TPCC\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae \'b0\'a8\'c1\'f6 \'b7\'ce\'c1\'f7\'b0\'fa EDMA_TPCC\'c0\'c7 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR) \'c1\'a6\'c3\'e2 \'b7\'ce\'c1\'f7 \'bb\'e7\'c0\'cc\'c0\'c7 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'b8\'a6 \'c7\'fc\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Each queue is 16 entries deep. Each event queue can queue a maximum of 16 events.\par
\'b0\'a2 \'c5\'a5\'c0\'c7 \'b1\'ed\'c0\'cc\'b4\'c2 16\'c0\'d4\'b4\'cf\'b4\'d9. \'b0\'a2 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'b4\'c2 \'c3\'d6\'b4\'eb 16 \'b0\'b3\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'c5\'a5\'bf\'a1 \'b3\'d6\'c0\'bb \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
If there are more than 16 events, then the events that cannot find a place in the event queue remain set in the associated event register and the CPU does not stall.\par
16 \'b0\'b3 \'c0\'cc\'bb\'f3\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1\'c0\'d6\'b4\'c2 \'b0\'e6\'bf\'ec, \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'c0\'a7\'c4\'a1\'b8\'a6 \'c3\'a3\'c0\'bb \'bc\'f6\'be\'f8\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'bf\'ac\'b0\'fc\'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'be\'ee \'c0\'d6\'c0\'b8\'b8\'e7 CPU\'b4\'c2 \'c1\'a4\'c1\'f6\'c7\'cf\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
There are two event queues for the device: Queue0, Queue1.\par
\'b5\'f0\'b9\'d9\'c0\'cc\'bd\'ba\'bf\'a1 \'b4\'eb\'c7\'d1 \'b5\'ce \'b0\'b3\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5 Queue0, Queue1\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Events in Queue0 result in submission of its associated transfer requests (TRs) to TC0.\par
Queue0\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'b0\'fc\'b7\'c3 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR)\'c0\'bb TC0\'bf\'a1 \'c1\'a6\'c3\'e2\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The transfer requests that are associated with events in Queue1 are submitted to TC1.\par
Queue1\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae\'bf\'cd \'b0\'fc\'b7\'c3\'b5\'c8 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'ba TC1\'bf\'a1 \'c1\'a6\'c3\'e2\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
An event that wins prioritization against other DMA and/or QDMA pending events is placed at the tail of the appropriate event queue.\par
\'b4\'d9\'b8\'a5 DMA \'b9\'d7 / \'b6\'c7\'b4\'c2 QDMA \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'c0\'cc\'ba\'a5\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d8 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b8\'a6 \'be\'f2\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'c0\'fb\'c0\'fd\'c7\'d1 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'c0\'c7 \'b3\'a1\'bf\'a1 \'b9\'e8\'c4\'a1\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Each event queue is serviced in FIFO order.\par
\'b0\'a2 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'b4\'c2 FIFO \'bc\'f8\'bc\'ad\'b7\'ce \'bc\'ad\'ba\'f1\'bd\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Once the event reaches the head of its queue and the corresponding transfer controller is ready to receive another TR, the event is de-queued and the PaRAM set corresponding to the de-queued event is processed and submitted as a transfer request packet (TRP) to the associated EDMA transfer controller.\par
\'c0\'cf\'b4\'dc \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c5\'a5\'c0\'c7 \'c7\'ec\'b5\'e5\'bf\'a1 \'b5\'b5\'b4\'de\'c7\'cf\'b0\'ed \'b4\'eb\'c0\'c0\'c7\'cf\'b4\'c2 \'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2\'b0\'a1 \'b4\'d9\'b8\'a5 TR\'c0\'bb \'bc\'f6\'bd\'c5 \'c7\'d2 \'c1\'d8\'ba\'f1\'b0\'a1\'b5\'c7\'b8\'e9, \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'c1\'a6\'bf\'dc\'b5\'c7\'b0\'ed \'b4\'eb\'b1\'e2\'bf\'ad \'c7\'d8\'c1\'a6 \'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae\'bf\'a1 \'c7\'d8\'b4\'e7\'c7\'cf\'b4\'c2 PaRAM \'bc\'bc\'c6\'ae\'b0\'a1 \'c3\'b3\'b8\'ae\'b5\'c7\'be\'ee \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb \'c6\'d0\'c5\'b6 TRP\'bf\'a1 \'b0\'fc\'b7\'c3\'b5\'c8 EDMA \'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2\'bf\'a1 \'c1\'a6\'c3\'e2\'b5\'cb\'b4\'cf\'b4\'d9 .\par
\par
Queue0 has highest priority and Queue1 has the lowest priority, if Queue0 and Queue1 both have at least one event entry and if both TC0 and TC1 can accept transfer requests, then the event in Queue0 is dequeued first and its associated PaRAM set is processed and submitted as a transfer request (TR) to TC0.\par
Queue0\'b0\'fa Queue1 \'b8\'f0\'b5\'ce \'c3\'d6\'bc\'d2\'c7\'d1 \'c7\'cf\'b3\'aa\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae \'c7\'d7\'b8\'f1\'c0\'cc \'c0\'d6\'b0\'ed Queue0\'c0\'c7 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b0\'a1\'c0\'e5 \'b3\'b7\'b0\'ed TC0\'b0\'fa TC1\'c0\'cc \'b5\'d1 \'b4\'d9 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'bb \'c7\'e3\'bf\'eb \'c7\'d2 \'bc\'f6\'c0\'d6\'b4\'c2 \'b0\'e6\'bf\'ec Queue0\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'b8\'d5\'c0\'fa \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'c1\'a6\'bf\'dc\'b5\'c7\'b0\'ed \'b0\'fc\'b7\'c3 PaRAM \'bc\'bc\'c6\'ae\'b0\'a1 \'c3\'b3\'b8\'ae\'b5\'c7\'b0\'ed  TC0 \'bf\'a1\'c0\'c7 \'c0\'fc\'bc\'db \'bf\'e4\'b1\'b8 (TR) \'bf\'a1 \'c1\'a6\'c3\'e2\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Refer to Section 16.2.5.11.4 for system-level performance considerations.\par
\'bd\'c3\'bd\'ba\'c5\'db \'b7\'b9\'ba\'a7 \'bc\'ba\'b4\'c9 \'b0\'ed\'b7\'c1 \'bb\'e7\'c7\'d7\'c0\'ba 16.2.5.11.4 \'c0\'fd\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
All of the event entries in all of the event queues are software readable (not writeable) by accessing the event entry registers EDMA_TPCC_Q0E_p and EDMA_TPCC_Q1E_p.\par
\'b8\'f0\'b5\'e7 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'c7 \'b8\'f0\'b5\'e7 \'c0\'cc\'ba\'a5\'c6\'ae \'c7\'d7\'b8\'f1\'c0\'ba \'c0\'cc\'ba\'a5\'c6\'ae \'c0\'d4\'b7\'c2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_Q0E_p \'b9\'d7 EDMA_TPCC_Q1E_p\'bf\'a1 \'be\'d7\'bc\'bc\'bd\'ba\'c7\'cf\'bf\'a9 \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'b0\'a1\'b5\'b6\'bc\'ba (\'be\'b2\'b1\'e2 \'b0\'a1\'b4\'c9\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'bd)\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Each event entry register characterizes the queued event in terms of the type of event (manual, event, chained or auto-triggered) and the event number.\par
\'b0\'a2 \'c0\'cc\'ba\'a5\'c6\'ae \'c7\'d7\'b8\'f1 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae \'c0\'af\'c7\'fc (\'bc\'f6\'b5\'bf, \'c0\'cc\'ba\'a5\'c6\'ae, \'c3\'bc\'c0\'ce \'b6\'c7\'b4\'c2 \'c0\'da\'b5\'bf \'c6\'ae\'b8\'ae\'b0\'c5 \'b5\'ca) \'b9\'d7 \'c0\'cc\'ba\'a5\'c6\'ae \'b9\'f8\'c8\'a3\'bf\'cd \'b0\'fc\'b7\'c3\'c7\'cf\'bf\'a9 \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'b3\'f5\'c0\'ce \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'c6\'af\'bc\'ba\'c8\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Refer to Section 16.2.8.2.2.1 EDMA_TPCC Register Description for Q0E_p / Q1E_p descriptions of the bit fields.\par
\'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'c0\'c7 Q0E_p / Q1E_p \'bc\'b3\'b8\'ed\'c0\'ba 16.2.8.2.2.1 EDMA_TPCC \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'b3\'b8\'ed\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.11.1 DMA/QDMA Channel to Event Queue Mapping\par
16.2.5.11.1 DMA / QDMA \'c3\'a4\'b3\'ce \'b4\'eb \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5 \'b8\'c5\'c7\'ce\par
\par
Each of the 64 DMA channels and eight QDMA channels are programmed independently to map to a specific queue, using the DMA queue number register EDMA_TPCC_DMAQNUMN_k and the QDMA queue number register EDMA_TPCC_QDMAQNUM.\par
DMA \'c5\'a5 \'b9\'f8\'c8\'a3 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_DMAQNUMN_k \'b9\'d7 QDMA \'c5\'a5 \'b9\'f8\'c8\'a3 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_QDMAQNUM\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 64 \'b0\'b3\'c0\'c7 DMA \'c3\'a4\'b3\'ce\'b0\'fa 8 \'b0\'b3\'c0\'c7 QDMA \'c3\'a4\'b3\'ce \'b0\'a2\'b0\'a2\'c0\'bb \'b5\'b6\'b8\'b3\'c0\'fb\'c0\'b8\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'cf\'bf\'a9 \'c6\'af\'c1\'a4 \'c5\'a5\'bf\'a1 \'b8\'c5\'c7\'ce\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The mapping of DMA/QDMA channels is critical to achieving the desired performance level for the EDMA and most importantly, in meeting real-time deadlines.\par
DMA / QDMA \'c3\'a4\'b3\'ce\'c0\'c7 \'b8\'c5\'c7\'ce\'c0\'ba EDMA\'bf\'a1 \'b4\'eb\'c7\'d8 \'bf\'f8\'c7\'cf\'b4\'c2 \'bc\'ba\'b4\'c9 \'bc\'f6\'c1\'d8\'c0\'bb \'b4\'de\'bc\'ba\'c7\'cf\'b0\'ed \'b0\'a1\'c0\'e5 \'c1\'df\'bf\'e4\'c7\'d1 \'b0\'cd\'c0\'ba \'bd\'c7\'bd\'c3\'b0\'a3 \'b8\'b6\'b0\'a8 \'bd\'c3\'b0\'a3\'c0\'bb \'b8\'c2\'c3\'df\'b4\'c2 \'b5\'a5 \'c1\'df\'bf\'e4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Refer to Section 16.2.5.11.4 System-level Performance Considerations.\par
16.2.5.11.4 \'c0\'fd. \'bd\'c3\'bd\'ba\'c5\'db \'bc\'f6\'c1\'d8 \'bc\'ba\'b4\'c9 \'b0\'ed\'b7\'c1 \'bb\'e7\'c7\'d7\'c0\'bb \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
NOTE: If an event is ready to be queued and both the event queue and the EDMA transfer controller that is associated to the event queue are empty, then the event bypasses the event queue, and moves the PaRAM processing logic, and eventually to the transfer request submission logic for submission to the EDMA_TPTC. In this case, the event is not logged in the event queue status registers.\par
\'c2\'fc\'b0\'ed : \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'b4\'eb\'b1\'e2 \'c7\'d2 \'c1\'d8\'ba\'f1\'b0\'a1\'b5\'c7\'be\'ee \'c0\'d6\'b0\'ed \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'bf\'cd \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'bf\'a1 \'bf\'ac\'b0\'e1\'b5\'c8 EDMA \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b0\'a1 \'b8\'f0\'b5\'ce \'ba\'f1\'be\'ee \'c0\'d6\'c0\'b8\'b8\'e9 \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'b8\'a6 \'bf\'ec\'c8\'b8\'c7\'cf\'bf\'a9 PaRAM \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'cc \'b7\'ce\'c1\'f7\'c0\'bb \'c0\'cc\'b5\'bf\'c7\'cf\'b0\'ed \'b0\'e1\'b1\'b9 \'c0\'fc\'bc\'db\'c0\'b8\'b7\'ce \'c0\'cc\'b5\'bf\'c7\'d5\'b4\'cf\'b4\'d9 EDMA_TPTC\'bf\'a1 \'c1\'a6\'c3\'e2\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'c1\'a6\'c3\'e2 \'b3\'ed\'b8\'ae\'b8\'a6 \'bf\'e4\'c3\'bb\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0. \'c0\'cc \'b0\'e6\'bf\'ec \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5 \'bb\'f3\'c5\'c2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'b1\'e2\'b7\'cf\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.11.2 Queue RAM Debug Visibility\par
16.2.5.11.2 \'c5\'a5 RAM \'b5\'f0\'b9\'f6\'b1\'d7 \'b0\'a1\'bd\'c3\'bc\'ba\par
\par
There are two event queues and each queue has 16 entries. These 16 entries are managed in a circular FIFO.\par
\'b5\'ce \'b0\'b3\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'cc \'c0\'d6\'c0\'b8\'b8\'e7 \'b0\'a2 \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'b4\'c2 16 \'b0\'b3\'c0\'c7 \'c7\'d7\'b8\'f1\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9. \'c0\'cc 16 \'b0\'b3 \'c7\'d7\'b8\'f1\'c0\'ba \'bc\'f8\'c8\'af FIFO\'b7\'ce \'b0\'fc\'b8\'ae\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
There is a queue status register EDMA_TPCC_QSTATN_i associated with each queue.\par
\'b0\'a2 \'c5\'a5\'bf\'cd \'bf\'ac\'b0\'fc\'b5\'c8 \'c5\'a5 \'bb\'f3\'c5\'c2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_QSTATN_i\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
These along with all of the 16 entries per queue can be read via registers EDMA_TPCC_QSTATN_i and Q0E_p / Q1E_p, respectively.\par
\'c5\'a5\'b4\'e7 16 \'b0\'b3 \'c7\'d7\'b8\'f1 \'b8\'f0\'b5\'ce\'b8\'a6 EDMA_TPCC_QSTATN_i \'b9\'d7 Q0E_p / Q1E_p \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c5\'eb\'c7\'d8 \'c0\'d0\'c0\'bb \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
These registers provide user visibility.\par
\'c0\'cc\'b7\'af\'c7\'d1 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'bb\'e7\'bf\'eb\'c0\'da \'b0\'a1\'bd\'c3\'bc\'ba\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The event queue entry register (QxEy Q0E_p / Q1E_p) uniquely identifies the specific event type (eventtriggered, manually-triggered, chain-triggered, and QDMA events) along with the event number (for all DMA/QDMA event channels) that are in the queue or have been de-queued (passed through the queue).\par
\'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad \'bf\'a3\'c6\'ae\'b8\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (QxEy Q0E_p / Q1E_p)\'b4\'c2 (\'b8\'f0\'b5\'e7 DMA / QDMA \'c0\'cc\'ba\'a5\'c6\'ae \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d1) \'c0\'cc\'ba\'a5\'c6\'ae \'b9\'f8\'c8\'a3\'bf\'cd \'c7\'d4\'b2\'b2 \'c6\'af\'c1\'a4 \'c0\'cc\'ba\'a5\'c6\'ae \'c0\'af\'c7\'fc (\'c0\'cc\'ba\'a5\'c6\'ae \'c6\'ae\'b8\'ae\'b0\'c5, \'bc\'f6\'b5\'bf \'c6\'ae\'b8\'ae\'b0\'c5, \'c3\'bc\'c0\'ce \'c6\'ae\'b8\'ae\'b0\'c5 \'b9\'d7 QDMA \'c0\'cc\'ba\'a5\'c6\'ae)\'c0\'bb \'b0\'ed\'c0\'af\'c7\'cf\'b0\'d4 \'bd\'c4\'ba\'b0\'c7\'d5\'b4\'cf\'b4\'d9 \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'bb\'e8\'c1\'a6\'b5\'c7\'b0\'c5\'b3\'aa \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'c1\'a6\'bf\'dc\'b5\'c7\'be\'fa\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Each of the 16 entries in the event queue are read using the EDMA_TPCC memory-mapped register.\par
\'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'c0\'c7 16 \'b0\'b3 \'c7\'d7\'b8\'f1 \'b0\'a2\'b0\'a2\'c0\'ba EDMA_TPCC \'b8\'de\'b8\'f0\'b8\'ae \'b8\'ca\'c7\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'c0\'d0\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
To see the history of the last 16 TRs that have been processed by the EDMA on a given queue, read the event queue registers.\par
\'c1\'d6\'be\'ee\'c1\'f8 \'c5\'a5\'bf\'a1\'bc\'ad EDMA\'bf\'a1 \'c0\'c7\'c7\'d8 \'c3\'b3\'b8\'ae \'b5\'c8 \'b8\'b6\'c1\'f6\'b8\'b7 16 \'b0\'b3\'c0\'c7 TR\'c0\'c7 \'c8\'f7\'bd\'ba\'c5\'e4\'b8\'ae\'b8\'a6 \'ba\'b8\'b7\'c1\'b8\'e9 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c0\'d0\'c0\'b8\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
This provides user/software visibility and is helpful for debugging real-time issues (typically post-mortem), involving multiple events and event sources.\par
\'c0\'cc\'b4\'c2 \'bb\'e7\'bf\'eb\'c0\'da / \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee \'b0\'a1\'bd\'c3\'bc\'ba\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'cf\'b8\'e7 \'bf\'a9\'b7\'af \'c0\'cc\'ba\'a5\'c6\'ae \'b9\'d7 \'c0\'cc\'ba\'a5\'c6\'ae \'bc\'d2\'bd\'ba\'b0\'a1 \'c6\'f7\'c7\'d4 \'b5\'c8 \'bd\'c7\'bd\'c3\'b0\'a3 \'b9\'ae\'c1\'a6 (\'c0\'cf\'b9\'dd\'c0\'fb\'c0\'b8\'b7\'ce \'bb\'e7\'c8\'c4) \'b5\'f0\'b9\'f6\'b1\'eb\'bf\'a1 \'c0\'af\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The queue status register (QSTATn EDMA_TPCC_QSTATN_i) includes fields for the start pointer EDMA_TPCC_QSTATN_i[3:0] STRTPTR which provides the offset to the head entry of an event.\par
\'c5\'a5 \'bb\'f3\'c5\'c2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (QSTATn EDMA_TPCC_QSTATN_i)\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae\'c0\'c7 \'c7\'ec\'b5\'e5 \'c7\'d7\'b8\'f1\'bf\'a1 \'b4\'eb\'c7\'d1 \'bf\'c0\'c7\'c1\'bc\'c2\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'cf\'b4\'c2 \'bd\'c3\'c0\'db \'c6\'f7\'c0\'ce\'c5\'cd EDMA_TPCC_QSTATN_i [3 : 0] STRTPTR\'bf\'a1 \'b4\'eb\'c7\'d1 \'c7\'ca\'b5\'e5\'b8\'a6 \'c6\'f7\'c7\'d4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
It also includes a field called EDMA_TPCC_QSTATN_i[12:8] NUMVAL that provides the total number of valid entries residing in the event queue at a given instance of time.\par
\'b6\'c7\'c7\'d1 \'c1\'d6\'be\'ee\'c1\'f8 \'bd\'c3\'b0\'a3\'bf\'a1 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'bf\'a1 \'bb\'f3\'c1\'d6\'c7\'cf\'b4\'c2 \'c0\'af\'c8\'bf\'c7\'d1 \'c7\'d7\'b8\'f1\'c0\'c7 Q \'bc\'f6\'b8\'a6 \'c1\'a6\'b0\'f8\'c7\'cf\'b4\'c2 EDMA_TPCC_QSTATN_i [12 : 8] NUMVAL \'c7\'ca\'b5\'e5\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPCC_QSTATN_i[3:0] STRTPTR is used to index appropriately into the 16 event entries.\par
EDMA_TPCC_QSTATN_i [3 : 0] STRTPTR\'c0\'ba 16 \'b0\'b3\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae \'c7\'d7\'b8\'f1\'bf\'a1 \'c0\'fb\'c0\'fd\'c8\'f7 \'bb\'f6\'c0\'ce\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 EDMA_TPCC_QSTATN_i[12:8] NUMVAL number of entries starting from STRTPTR are indicative of events still queued in the respective queue.\par
  EDMA_TPCC_QSTATN_i [12 : 8] NUMVAL STRTPTR\'bf\'a1\'bc\'ad \'bd\'c3\'c0\'db\'c7\'cf\'b4\'c2 \'c7\'d7\'b8\'f1 \'bc\'f6\'b4\'c2 \'c7\'d8\'b4\'e7 \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'be\'c6\'c1\'f7 \'b4\'eb\'b1\'e2\'c1\'df\'c0\'ce \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
 The remaining entry must be read to determine what's already de-queued and submitted to the associated transfer controller.\par
  \'c0\'cc\'b9\'cc \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'c1\'a6\'bf\'dc\'b5\'c7\'b0\'ed \'bf\'ac\'b0\'e1\'b5\'c8 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'c1\'a6\'c3\'e2 \'b5\'c8 \'c7\'d7\'b8\'f1\'c0\'bb \'c8\'ae\'c0\'ce\'c7\'cf\'b7\'c1\'b8\'e9 \'b3\'aa\'b8\'d3\'c1\'f6 \'c7\'d7\'b8\'f1\'c0\'bb \'c0\'d0\'be\'ee\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.11.3 Queue Resource Tracking\par
16.2.5.11.3 \'b4\'eb\'b1\'e2\'bf\'ad \'c0\'da\'bf\'f8 \'c3\'df\'c0\'fb\par
\par
The EDMA_TPCC event queue includes watermarking/threshold logic that allows to keep track of maximum usage of all event queues.\par
EDMA_TPCC \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'b4\'c2 \'b8\'f0\'b5\'e7 \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'c0\'c7 \'c3\'d6\'b4\'eb \'bb\'e7\'bf\'eb\'b7\'ae\'c0\'bb \'c3\'df\'c0\'fb \'c7\'d2 \'bc\'f6\'c0\'d6\'b4\'c2 \'bf\'f6\'c5\'cd \'b8\'b6\'c5\'b7 / \'c0\'d3\'b0\'e8 \'b0\'aa \'b7\'ce\'c1\'f7\'c0\'bb \'c6\'f7\'c7\'d4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
 This is useful for debugging real-time deadline violations that may result from head-of-line blocking on a given EDMA event queue.\par
 \'c0\'cc\'b4\'c2 \'c1\'d6\'be\'ee\'c1\'f8 EDMA \'c0\'cc\'ba\'a5\'c6\'ae \'c5\'a5\'bf\'a1\'bc\'ad \'c7\'ec\'b5\'e5 - \'bf\'c0\'ba\'ea - \'b6\'f3\'c0\'ce \'ba\'ed\'b7\'ce\'c5\'b7 (edge-of-line blocking)\'c0\'b8\'b7\'ce \'c0\'ce\'c7\'d1 \'bd\'c7\'bd\'c3\'b0\'a3 \'b5\'a5\'b5\'e5 \'b6\'f3\'c0\'ce \'c0\'a7\'b9\'dd\'c0\'bb \'b5\'f0\'b9\'f6\'b1\'eb \'c7\'d2 \'b6\'a7 \'c0\'af\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The maximum number of events are programed that the queue up in an event queue by programming the threshold value (between 0 to 15) in the queue watermark threshold A register EDMA_TPCC_QWMTHRA.\par
\'b4\'eb\'b1\'e2\'bf\'ad \'bf\'f6\'c5\'cd \'b8\'b6\'c5\'a9 \'c0\'d3\'b0\'e8 \'b0\'aa A \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_QWMTHRA\'bf\'a1\'bc\'ad \'c0\'d3\'b0\'e8 \'b0\'aa (0\'bf\'a1\'bc\'ad 15 \'bb\'e7\'c0\'cc)\'c0\'bb \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'cf\'bf\'a9 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'b4\'eb\'b1\'e2\'c7\'cf\'b4\'c2 \'c3\'d6\'b4\'eb \'c0\'cc\'ba\'a5\'c6\'ae \'bc\'f6\'b8\'a6 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The maximum queue usage is recorded actively in the watermark EDMA_TPCC_QSTATN_i[20:16] WM field of the queue status register, that keeps getting updated based on a comparison of number of valid entries, which is also visible in the EDMA_TPCC_QSTATN_i[12:8] NUMVAL bit and the maximum number of entries.\par
\'c3\'d6\'b4\'eb \'c5\'a5 \'bb\'e7\'bf\'eb\'c0\'ba \'c5\'a5 \'bb\'f3\'c5\'c2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'bf\'f6\'c5\'cd \'b8\'b6\'c5\'a9 EDMA_TPCC_QSTATN_i [20:16] WM \'c7\'ca\'b5\'e5\'bf\'a1 \'b4\'c9\'b5\'bf\'c0\'fb\'c0\'b8\'b7\'ce \'b1\'e2\'b7\'cf\'b5\'c7\'b8\'e7, EDMA_TPCC_QSTATN_i [12 : 8]\'bf\'a1\'bc\'ad\'b5\'b5 \'ba\'bc \'bc\'f6\'c0\'d6\'b4\'c2 \'c0\'af\'c8\'bf\'c7\'d1 \'c7\'d7\'b8\'f1 \'bc\'f6\'b8\'a6 \'ba\'f1\'b1\'b3\'c7\'cf\'bf\'a9 \'b0\'e8\'bc\'d3 \'be\'f7\'b5\'a5\'c0\'cc\'c6\'ae\'b5\'cb\'b4\'cf\'b4\'d9. NUMVAL \'ba\'f1\'c6\'ae\'bf\'cd \'c3\'d6\'b4\'eb \'c7\'d7\'b8\'f1 \'bc\'f6.\par
\par
If the queue usage is exceeded, this status is visible in the EDMA_TPCC registers: the QTHRXCDn bits in the channel controller error register EDMA_TPCC_CCERR[7:0] and the EDMA_TPCC_QSTATN_i[24] THRXCD bit, where n stands for the event queue number.\par
\'c5\'a5 \'bb\'e7\'bf\'eb\'b7\'ae\'c0\'cc \'c3\'ca\'b0\'fa\'b5\'c7\'b8\'e9\'c0\'cc \'bb\'f3\'c5\'c2\'b0\'a1 EDMA_TPCC \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c7\'a5\'bd\'c3\'b5\'cb\'b4\'cf\'b4\'d9. \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'bf\'c0\'b7\'f9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_CCERR [7 : 0]\'c0\'c7 QTHRXCDn \'ba\'f1\'c6\'ae\'bf\'cd EDMA_TPCC_QSTATN_i [24] THRXCD \'ba\'f1\'c6\'ae\'c0\'d4\'b4\'cf\'b4\'d9. \'bf\'a9\'b1\'e2\'bc\'ad n\'c0\'ba \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad \'b9\'f8\'c8\'a3\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
Any bits that are set in EDMA_TPCC_CCERR also generate an EDMA_TPCC error interrupt.\par
EDMA_TPCC_CCERR\'bf\'a1 \'bc\'b3\'c1\'a4\'b5\'c8 \'ba\'f1\'c6\'ae\'b5\'b5 EDMA_TPCC \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b8\'a6 \'bb\'fd\'bc\'ba\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.11.4 Performance Considerations\par
16.2.5.11.4 \'bc\'ba\'b4\'c9 \'b0\'ed\'b7\'c1 \'bb\'e7\'c7\'d7\par
\par
The main system bus infrastructure (L3) arbitrates bus requests from all of the masters (TCs, CPU(S), and other bus masters) to the shared slave resources (peripherals and memories).\par
\'b8\'de\'c0\'ce \'bd\'c3\'bd\'ba\'c5\'db \'b9\'f6\'bd\'ba \'c0\'ce\'c7\'c1\'b6\'f3 (L3)\'b4\'c2 \'b8\'f0\'b5\'e7 \'b8\'b6\'bd\'ba\'c5\'cd (TC, CPU (S) \'b9\'d7 \'b4\'d9\'b8\'a5 \'b9\'f6\'bd\'ba \'b8\'b6\'bd\'ba\'c5\'cd)\'bf\'a1\'bc\'ad \'b0\'f8\'c0\'af \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea \'c0\'da\'bf\'f8 (\'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1 \'b9\'d7 \'b8\'de\'b8\'f0\'b8\'ae)\'c0\'b8\'b7\'ce\'c0\'c7 \'b9\'f6\'bd\'ba \'bf\'e4\'c3\'bb\'c0\'bb \'c1\'df\'c0\'e7\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The priorities of transfer requests (read and write commands) from the EDMA transfer controllers with respect to other masters within the device IRQ_CROSSBAR are programmed using the Control Module registers.\par
\'c0\'e5\'c4\'a1 IRQ_CROSSBAR \'b3\'bb\'c0\'c7 \'b4\'d9\'b8\'a5 \'b8\'b6\'bd\'ba\'c5\'cd\'bf\'cd \'b0\'fc\'b7\'c3\'c7\'cf\'bf\'a9 EDMA \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1\'bc\'ad \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (\'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'b8\'ed\'b7\'c9)\'c0\'c7 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b4\'c2 \'c1\'a6\'be\'ee \'b8\'f0\'b5\'e2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 The EDMA_TPCC_QUEPRI register has no affect.\par
  EDMA_TPCC_QUEPRI \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'be\'c6\'b9\'ab\'b7\'b1 \'bf\'b5\'c7\'e2\'c0\'bb\'c1\'d6\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
Therefore, the priority of unloading queues has a secondary affect compared to the priority of the transfers as they are executed by the EDMA_TPTC (dictated by the priority set using the Control Module registers, refer to Section 18.5 Control Module Register Manual in Chapter 18 Control Module chapter).\par
\'b5\'fb\'b6\'f3\'bc\'ad \'be\'f0\'b7\'ce\'b5\'e5 \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'c7 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b4\'c2 EDMA_TPTC\'bf\'a1 \'c0\'c7\'c7\'d8 \'bd\'c7\'c7\'e0\'b5\'c9 \'b6\'a7 \'c0\'fc\'bc\'db\'c0\'c7 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'bf\'cd \'ba\'f1\'b1\'b3\'c7\'cf\'bf\'a9 2 \'c2\'f7\'c0\'fb\'c0\'ce \'bf\'b5\'c7\'e2\'c0\'bb \'b9\'cc\'c4\'a8\'b4\'cf\'b4\'d9 (\'c1\'a6\'be\'ee \'b8\'f0\'b5\'e2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'cf\'bf\'a9 \'bc\'b3\'c1\'a4\'b5\'c8 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'bf\'a1 \'b5\'fb\'b6\'f3 \'b0\'e1\'c1\'a4\'b5\'ca, 18 \'c0\'e5 \'bc\'bd\'bc\'c7 18.5 \'c1\'a6\'be\'ee \'b8\'f0\'b5\'e2 \'b5\'ee\'b7\'cf \'b8\'c5\'b4\'ba\'be\'f3 \'c2\'fc\'c1\'b6) \'c0\'e5).\par
\par
16.2.5.12 EDMA Transfer Controller (EDMA_TPTC)\par
16.2.5.12 EDMA \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af (EDMA_TPTC)\par
\par
The EDMA channel controller is the user-interface of the EDMA and the EDMA transfer controller (EDMA_TPTC) is the data movement engine of the EDMA controller.\par
EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 EDMA\'c0\'c7 \'bb\'e7\'bf\'eb\'c0\'da \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'c0\'cc\'b0\'ed EDMA \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af (EDMA_TPTC)\'b4\'c2 EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'cc\'b5\'bf \'bf\'a3\'c1\'f8\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPCC submits transfer requests (TR) to the EDMA_TPTC and the EDMA_TPTC performs the data transfers dictated by the TR, so the EDMA_TPTC is a slave to the EDMA_TPCC.\par
EDMA_TPCC\'b4\'c2 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR)\'c0\'bb EDMA_TPTC\'bf\'a1 \'c1\'a6\'c3\'e2\'c7\'cf\'b0\'ed EDMA_TPTC\'b4\'c2 TR\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'f6\'bd\'c3 \'b5\'c8 \'b5\'a5\'c0\'cc\'c5\'cd \'c0\'fc\'bc\'db\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'cf\'b9\'c7\'b7\'ce EDMA_TPTC\'b4\'c2 EDMA_TPCC\'c0\'c7 \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
16.2.5.12.1 Architecture Details\par
16.2.5.12.1 \'be\'c6\'c5\'b0\'c5\'d8\'c3\'b3 \'bc\'bc\'ba\'ce \'c1\'a4\'ba\'b8\par
\par
16.2.5.12.1.1 Command Fragmentation\par
16.2.5.12.1.1 \'b8\'ed\'b7\'c9 \'b4\'dc\'c6\'ed\'c8\'ad\par
\par
The TC read and write controllers in conjunction with the source and destination register sets are responsible for issuing optimally-sized reads and writes to the slave endpoints.\par
TC \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'bc\'d2\'bd\'ba \'b9\'d7 \'b4\'eb\'bb\'f3 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'bf\'cd \'c7\'d4\'b2\'b2 \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea \'b3\'a1\'c1\'a1\'bf\'a1 \'c3\'d6\'c0\'fb \'c5\'a9\'b1\'e2\'c0\'c7 \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2\'b8\'a6 \'bd\'c7\'c7\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
An optimally-sized command is defined by the transfer controller default burst size (DBS), which is defined in Section 16.2.5.12.5 EDMA_TPTC Configuration.\par
\'c3\'d6\'c0\'fb\'c8\'ad \'b5\'c8 \'c5\'a9\'b1\'e2\'c0\'c7 \'b8\'ed\'b7\'c9\'c0\'ba 16.2.5.12.5 EDMA_TPTC \'b1\'b8\'bc\'ba\'bf\'a1\'bc\'ad \'c1\'a4\'c0\'c7 \'b5\'c8 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'b1\'e2\'ba\'bb \'b9\'f6\'bd\'ba\'c6\'ae \'c5\'a9\'b1\'e2 (DBS)\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'a4\'c0\'c7\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPTC attempts to issue the largest possible command size as limited by the DBS value or the EDMA_TPCC_ABCNT_n[15:0] ACNT and EDMA_TPCC_ABCNT_n[31:16] BCNT value of the TR.\par
EDMA_TPTC\'b4\'c2 TR\'c0\'c7 DBS \'b0\'aa \'b6\'c7\'b4\'c2 EDMA_TPCC_ABCNT_n [15 : 0] ACNT \'b9\'d7 EDMA_TPCC_ABCNT_n [31:16] BCNT \'b0\'aa\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'a6\'c7\'d1\'b5\'c7\'b4\'c2 \'c3\'d6\'b4\'eb \'b0\'a1\'b4\'c9\'c7\'d1 \'b8\'ed\'b7\'c9 \'c5\'a9\'b1\'e2\'b8\'a6 \'b9\'df\'c7\'e0\'c7\'cf\'b7\'c1\'b0\'ed \'bd\'c3\'b5\'b5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
EDMA_TPTC obeys the following rules:\par
EDMA_TPTC\'b4\'c2 \'b4\'d9\'c0\'bd \'b1\'d4\'c4\'a2\'c0\'bb \'b5\'fb\'b8\'a8\'b4\'cf\'b4\'d9.\par
\par
\bullet  The read/write controllers always issue commands less than or equal to the DBS value.\par
\bullet  \'c0\'d0\'b1\'e2 / \'be\'b2\'b1\'e2 \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'c7\'d7\'bb\'f3 DBS \'b0\'aa\'ba\'b8\'b4\'d9 \'c0\'db\'b0\'c5\'b3\'aa \'b0\'b0\'c0\'ba \'b8\'ed\'b7\'c9\'c0\'bb \'bd\'c7\'c7\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  The first command of a 1D transfer command always aligns the address of subsequent commands to the DBS value.\par
\bullet  1D \'c0\'fc\'bc\'db \'b8\'ed\'b7\'c9\'c0\'c7 \'c3\'b9 \'b9\'f8\'c2\'b0 \'b8\'ed\'b7\'c9\'c0\'ba \'c7\'d7\'bb\'f3 \'c8\'c4\'bc\'d3 \'b8\'ed\'b7\'c9\'c0\'c7 \'c1\'d6\'bc\'d2\'b8\'a6 DBS \'b0\'aa\'bf\'a1 \'b8\'c2 \'c3\'e4\'b4\'cf \'b4\'d9.\par
\par
Table 16-105 lists the TR segmentation rules that are followed by the EDMA_TPTC. In summary, if the EDMA_TPCC_ABCNT_n[15:0] ACNT value is larger than the DBS value, then the EDMA_TPTC breaks the EDMA_TPCC_ABCNT_n[15:0] ACNT array into DBS-sized commands to the source/destination addresses.\par
\'c7\'a5 16-105\'b4\'c2 EDMA_TPTC \'b5\'da\'bf\'a1 \'bf\'c0\'b4\'c2 TR \'bc\'bc\'ba\'d0\'c8\'ad \'b1\'d4\'c4\'a2\'c0\'bb \'b3\'aa\'bf\'ad\'c7\'d5\'b4\'cf\'b4\'d9. \'bf\'e4\'be\'e0\'c7\'cf\'b8\'e9 EDMA_TPCC_ABCNT_n [15 : 0] ACNT \'b0\'aa\'c0\'cc DBS \'b0\'aa\'ba\'b8\'b4\'d9 \'c5\'ab \'b0\'e6\'bf\'ec EDMA_TPTC\'b4\'c2 EDMA_TPCC_ABCNT_n [15 : 0] ACNT \'b9\'e8\'bf\'ad\'c0\'bb \'bf\'f8\'ba\'bb / \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2\'bf\'a1 \'b4\'eb\'c7\'d1 DBS \'c5\'a9\'b1\'e2\'c0\'c7 \'b8\'ed\'b7\'c9\'c0\'b8\'b7\'ce \'b3\'aa\'b4\'af\'b4\'cf\'b4\'d9.\par
\par
 Each EDMA_TPCC_ABCNT_n[31:16] BCNT number of arrays are then serviced in succession.\par
  \'b0\'a2 EDMA_TPCC_ABCNT_n [31:16] BCNT \'b9\'e8\'bf\'ad \'bc\'f6\'b4\'c2 \'bf\'ac\'bc\'d3\'c0\'fb\'c0\'b8\'b7\'ce \'bc\'ad\'ba\'f1\'bd\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
For BCNT arrays of ACNT bytes (that is, a 2D transfer), if the EDMA_TPCC_ABCNT_n[15:0] ACNT value is less than or equal to the DBS value, then the TR may be optimized into a 1D-transfer in order to maximize efficiency.\par
ACNT \'b9\'d9\'c0\'cc\'c6\'ae\'c0\'c7 BCNT \'be\'ee\'b7\'b9\'c0\'cc (\'c1\'ef, 2D \'c0\'fc\'bc\'db)\'c0\'c7 \'b0\'e6\'bf\'ec EDMA_TPCC_ABCNT_n [15 : 0] ACNT \'b0\'aa\'c0\'cc DBS \'b0\'aa\'ba\'b8\'b4\'d9 \'c0\'db\'b0\'c5\'b3\'aa \'b0\'b0\'c0\'b8\'b8\'e9 TR\'c0\'bb \'c3\'d6\'b4\'eb\'c8\'ad\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 1D \'c0\'fc\'bc\'db\'c0\'b8\'b7\'ce \'c3\'d6\'c0\'fb\'c8\'ad \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9 \'b4\'c9\'b7\'fc.\par
\par
The optimization takes place if the EDMA_TPTC recognizes that the 2D-transfer is organized as a single dimension (EDMA_TPCC_ABCNT_n[15:0] ACNT == EDMA_TPCC_BIDX_n) and the ACNT value is a power of 2.\par
EDMA_TPTC\'b0\'a1 2D \'c0\'fc\'bc\'db\'c0\'cc \'b4\'dc\'c0\'cf \'c2\'f7\'bf\'f8 (EDMA_TPCC_ABCNT_n [15 : 0] ACNT == EDMA_TPCC_BIDX_n)\'c0\'b8\'b7\'ce \'b1\'b8\'bc\'ba\'b5\'c7\'be\'ee \'c0\'d6\'b0\'ed ACNT \'b0\'aa\'c0\'cc 2\'c0\'c7 \'c1\'a6\'b0\'f6\'bc\'f6\'c0\'d3\'c0\'bb \'c0\'ce\'bd\'c4\'c7\'cf\'b8\'e9 \'c3\'d6\'c0\'fb\'c8\'ad\'b0\'a1 \'bc\'f6\'c7\'e0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Table 16-105 lists conditions in which the optimizations are performed.\par
\'c7\'a5 16-105\'b4\'c2 \'c3\'d6\'c0\'fb\'c8\'ad\'b0\'a1 \'bc\'f6\'c7\'e0\'b5\'c7\'b4\'c2 \'c1\'b6\'b0\'c7\'c0\'bb \'b3\'aa\'bf\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.12.1.2 TR Pipelining\par
16.2.5.12.1.2 TR \'c6\'c4\'c0\'cc\'c7\'c1 \'b6\'f3\'c0\'cc\'b4\'d7\par
\par
TR pipelining refers to the ability of the source active set to proceed ahead of the destination active set.\par
TR \'c6\'c4\'c0\'cc\'c7\'c1 \'b6\'f3\'c0\'cc\'b4\'d7\'c0\'ba \'bf\'f8\'ba\'bb \'c8\'b0\'bc\'ba \'bc\'bc\'c6\'ae\'b0\'a1 \'b4\'eb\'bb\'f3 \'c8\'b0\'bc\'ba \'bc\'bc\'c6\'ae\'ba\'b8\'b4\'d9 \'be\'d5\'bc\'ad\'b4\'c2 \'b4\'c9\'b7\'c2\'c0\'bb \'b8\'bb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Essentially, the reads for a given TR may already be in progress while the writes of a previous TR may not have completed.\par
\'ba\'bb\'c1\'fa\'c0\'fb\'c0\'b8\'b7\'ce, \'c1\'d6\'be\'ee\'c1\'f8 TR\'bf\'a1 \'b4\'eb\'c7\'d1 \'c6\'c7\'b5\'b6\'c0\'ba \'c0\'cc\'c0\'fc TR\'c0\'c7 \'b1\'e2\'b7\'cf\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'ba \'b5\'bf\'be\'c8 \'c0\'cc\'b9\'cc \'c1\'f8\'c7\'e0 \'c1\'df\'c0\'cf \'bc\'f6\'c0\'d6\'b4\'d9.\par
\par
The number of outstanding TRs is limited by the number of destination FIFO register entries.\par
\'b9\'cc\'c3\'b3\'b8\'ae \'b5\'c8 TR\'c0\'c7 \'bc\'f6\'b4\'c2 \'b8\'f1\'c0\'fb\'c1\'f6 FIFO \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bf\'a3\'c6\'ae\'b8\'ae\'c0\'c7 \'bc\'f6\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'a6\'c7\'d1\'b5\'c8\'b4\'d9.\par
\par
TR pipelining is useful for maintaining throughput on back-to-back small TRs.\par
TR \'c6\'c4\'c0\'cc\'c7\'c1 \'b6\'f3\'c0\'cc\'b4\'d7\'c0\'ba \'b9\'e9 - \'c5\'f5 - \'b9\'e9 (back-to-back) \'bc\'d2\'c7\'fc TR\'bf\'a1\'bc\'ad \'c3\'b3\'b8\'ae\'b7\'ae\'c0\'bb \'c0\'af\'c1\'f6\'c7\'cf\'b4\'c2 \'b5\'a5 \'c0\'af\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
It minimizes the startup overhead because reads start in the background of a previous TR writes.\par
\'c0\'cc\'c0\'fc TR \'b1\'e2\'b7\'cf\'c0\'c7 \'b9\'e9\'b1\'d7\'b6\'f3\'bf\'ee\'b5\'e5\'bf\'a1\'bc\'ad \'c0\'d0\'b1\'e2\'b0\'a1 \'bd\'c3\'c0\'db\'b5\'c7\'b9\'c7\'b7\'ce \'bd\'c3\'c0\'db \'bf\'c0\'b9\'f6 \'c7\'ec\'b5\'e5\'b0\'a1 \'c3\'d6\'bc\'d2\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.2.5.12.1.3 Performance Tuning\par
16.2.5.12.1.3 \'bc\'ba\'b4\'c9 \'c6\'a9\'b4\'d7\par
\par
By default, reads are as issued as fast as possible.\par
\'b1\'e2\'ba\'bb\'c0\'fb\'c0\'b8\'b7\'ce \'c0\'d0\'b1\'e2\'b4\'c2 \'c3\'d6\'b4\'eb\'c7\'d1 \'bb\'a1\'b8\'ae \'bd\'c7\'c7\'e0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
In some cases, the reads issued by the EDMA_TPTC could fill the available command buffering for a slave, delaying other (potentially higher priority) masters from successfully submitting commands to that slave.\par
\'b0\'e6\'bf\'ec\'bf\'a1 \'b5\'fb\'b6\'f3, EDMA_TPTC\'bf\'a1 \'c0\'c7\'c7\'d8 \'bd\'c7\'c7\'e0\'b5\'c8 \'c0\'d0\'b1\'e2\'b4\'c2 \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea\'bf\'a1 \'b4\'eb\'c7\'d8 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'d1 \'b8\'ed\'b7\'c9 \'b9\'f6\'c6\'db\'b8\'b5\'c0\'bb \'c3\'a4\'bf\'ef \'bc\'f6 \'c0\'d6\'c0\'b8\'b8\'e7 \'b4\'d9\'b8\'a5 (\'c0\'e1\'c0\'e7\'c0\'fb\'c0\'b8\'b7\'ce \'b4\'f5 \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'c0\'c7) \'b8\'b6\'bd\'ba\'c5\'cd\'b0\'a1 \'c7\'d8\'b4\'e7 \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea\'bf\'a1 \'b8\'ed\'b7\'c9\'c0\'bb \'bc\'ba\'b0\'f8\'c0\'fb\'c0\'b8\'b7\'ce \'c1\'a6\'c3\'e2\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'bb \'c1\'f6\'bf\'ac\'bd\'c3\'c5\'b5\'b4\'cf\'b4\'d9.\par
\par
TPTC\'bf\'a1 \'c0\'c7\'c7\'d8 \'bd\'c7\'c7\'e0\'b5\'c8 \'c0\'d0\'b1\'e2 \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea\'bf\'a1 \'bb\'e7\'bf\'eb\'b0\'a1\'b4\'b1\'c7\'d1 \'b8\'ed\'b7\'c9 \'b9\'f6\'c6\'db\'b8\'b5\'c0\'bb \'c1\'d6\'b0\'ed \'b8\'b6\'bd\'ba\'c5\'cd\'b0\'a1 \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea \'bf\'a1 \'c0\'fc\'b4\'de\'c7\'cf\'b4\'c2\'b0\'cd\'b5\'e9 \'c1\'f6\'bf\'ac\'bd\'c3\'c4\'d1\'c1\'d8\'b4\'d9\par
\par
The rate at which read commands are issued by the EDMA_TPTC is controlled by the EDMA_TPTCn_RDRATE register.\par
EDMA_TPTC\'bf\'a1 \'c0\'c7\'c7\'d8 \'b9\'df\'c7\'e0 \'b5\'c8 \'c0\'d0\'b1\'e2 \'b8\'ed\'b7\'c9\'c0\'c7 \'bc\'d3\'b5\'b5\'b4\'c2 EDMA_TPTCn_RDRATE \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'a6\'be\'ee\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPTCn_RDRATE register defines the number of cycles that the EDMA_TPTC read controller waits before issuing subsequent commands for a given TR, thus minimizing the chance of the EDMA_TPTC consuming all available slave resources.\par
EDMA_TPTCn_RDRATE \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'c1\'d6\'be\'ee\'c1\'f8 TR\'bf\'a1 \'b4\'eb\'c7\'d8 \'c8\'c4\'bc\'d3 \'b8\'ed\'b7\'c9\'c0\'bb \'b9\'df\'c7\'e0\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 EDMA_TPTC \'c0\'d0\'b1\'e2 \'c1\'a6\'be\'ee\'b1\'e2\'b0\'a1 \'b4\'eb\'b1\'e2\'c7\'cf\'b4\'c2 \'bb\'e7\'c0\'cc\'c5\'ac \'bc\'f6\'b8\'a6 \'c1\'a4\'c0\'c7\'c7\'cf\'b9\'c7\'b7\'ce EDMA_TPTC\'b0\'a1 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'d1 \'b8\'f0\'b5\'e7 \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea \'c0\'da\'bf\'f8\'c0\'bb \'bc\'d2\'ba\'f1 \'c7\'d2 \'b0\'a1\'b4\'c9\'bc\'ba\'c0\'bb \'c3\'d6\'bc\'d2\'c8\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPTCn_RDRATE[2:0] RDRATE value must be set to a relatively small value if the transfer controller is targeted for high priority transfers and to a higher value if the transfer controller is targeted for low priority transfers.\par
\'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2\'b0\'a1 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'ba \'c0\'fc\'bc\'db\'c0\'bb \'b8\'f1\'c7\'a5\'b7\'ce\'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec EDMA_TPTCn_RDRATE [2 : 0] RDRATE \'b0\'aa\'c0\'bb \'ba\'f1\'b1\'b3\'c0\'fb \'c0\'db\'c0\'ba \'b0\'aa\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d8\'be\'df\'c7\'cf\'b8\'e7 \'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2\'b0\'a1 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'b7\'c0\'ba \'c0\'fc\'bc\'db\'c0\'c7 \'b4\'eb\'bb\'f3 \'c0\'ce \'b0\'e6\'bf\'ec \'b3\'f4\'c0\'ba \'b0\'aa\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
In contrast, the Write Interface does not have any performance turning knobs because writes always have an interval between commands as write commands are submitted along with the associated write data.\par
\'b9\'dd\'b4\'eb\'b7\'ce Write Interface\'b4\'c2 \'be\'b2\'b1\'e2 \'bd\'c7\'c7\'e0 \'b8\'ed\'b7\'c9\'c0\'cc \'b0\'fc\'b7\'c3 \'be\'b2\'b1\'e2 \'b5\'a5\'c0\'cc\'c5\'cd\'bf\'cd \'c7\'d4\'b2\'b2 \'c1\'a6\'c3\'e2 \'b5\'c9 \'b6\'a7 \'c7\'d7\'bb\'f3 \'be\'b2\'b1\'e2 \'bb\'e7\'c0\'cc\'bf\'a1 \'b0\'a3\'b0\'dd\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9. \'b5\'fb\'b6\'f3\'bc\'ad \'b3\'eb\'ba\'ea\'b8\'a6 \'b5\'b9\'b8\'ae\'b8\'e9 \'bc\'ba\'b4\'c9\'c0\'cc \'c7\'e2\'bb\'f3\'b5\'c7\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.12.2 Memory Protection\par
16.2.5.12.2 \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3\par
\par
The transfer controller plays an important role in handling proxy memory protection.\par
\'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'c7\'c1\'b7\'cf\'bd\'c3 \'b8\'de\'b8\'f0\'b8\'ae \'ba\'b8\'c8\'a3\'b8\'a6 \'c3\'b3\'b8\'ae\'c7\'cf\'b4\'c2 \'b5\'a5 \'c1\'df\'bf\'e4\'c7\'d1 \'bf\'aa\'c7\'d2\'c0\'bb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
There are two access properties associated with a transfer: for instance, the privilege id (system-wide identification assigned to a master) of the master initiating the transfer, and the privilege level (user versus supervisor) used to program the transfer.\par
\'c0\'fc\'bc\'db\'b0\'fa \'b0\'fc\'b7\'c3\'b5\'c8 \'b5\'ce \'b0\'a1\'c1\'f6 \'be\'d7\'bc\'bc\'bd\'ba \'bc\'d3\'bc\'ba\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9. \'bf\'b9\'b8\'a6 \'b5\'e9\'be\'ee \'c0\'fc\'bc\'db\'c0\'bb \'bd\'c3\'c0\'db\'c7\'cf\'b4\'c2 \'b8\'b6\'bd\'ba\'c5\'cd\'c0\'c7 \'b1\'c7\'c7\'d1 ID (\'b8\'b6\'bd\'ba\'c5\'cd\'bf\'a1 \'c7\'d2\'b4\'e7 \'b5\'c8 \'bd\'c3\'bd\'ba\'c5\'db \'c0\'fc\'c3\'bc ID)\'bf\'cd \'c0\'fc\'bc\'db\'c0\'bb \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'cf\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb \'b5\'c8 \'b1\'c7\'c7\'d1 \'bc\'f6\'c1\'d8 (\'bb\'e7\'bf\'eb\'c0\'da \'b4\'eb \'b0\'a8\'b5\'b6\'c0\'da)\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
 This information is maintained in the PaRAM set when it is programmed in the channel controller.\par
  \'c0\'cc \'c1\'a4\'ba\'b8\'b4\'c2 \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c9 \'b6\'a7 PaRAM \'bc\'bc\'c6\'ae\'bf\'a1\'bc\'ad \'c0\'af\'c1\'f6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
When a TR is submitted to the transfer controller, this information is made available to the EDMA_TPTC and used by the EDMA_TPTC while issuing read and write commands.\par
TR\'c0\'cc \'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2\'bf\'a1 \'c1\'a6\'c3\'e2\'b5\'c7\'b8\'e9,\'c0\'cc \'c1\'a4\'ba\'b8\'b4\'c2 EDMA_TPTC\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'cf\'b0\'d4\'b5\'c7\'b0\'ed \'c0\'d0\'b1\'e2 \'b9\'d7 \'be\'b2\'b1\'e2 \'b8\'ed\'b7\'c9\'c0\'bb \'b9\'df\'c7\'e0\'c7\'cf\'b4\'c2 \'b5\'bf\'be\'c8 EDMA_TPTC\'bf\'a1 \'c0\'c7\'c7\'d8 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The read or write commands have the same privilege identification, and privilege level as that programmed in the EDMA transfer in the channel controller.\par
\'c0\'d0\'b1\'e2 \'b6\'c7\'b4\'c2 \'be\'b2\'b1\'e2 \'b8\'ed\'b7\'c9\'c0\'ba \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1\'bc\'ad EDMA \'c0\'fc\'bc\'db\'bf\'a1 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c8 \'b0\'cd\'b0\'fa \'b5\'bf\'c0\'cf\'c7\'d1 \'b1\'c7\'c7\'d1 \'bd\'c4\'ba\'b0 \'b9\'d7 \'b1\'c7\'c7\'d1 \'bc\'f6\'c1\'d8\'c0\'bb \'b0\'ae\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.12.3 Error Generation\par
16.2.5.12.3 \'bf\'c0\'b7\'f9 \'bb\'fd\'bc\'ba\par
\par
Errors are generated if enabled under three conditions:\par
\'bc\'bc \'b0\'a1\'c1\'f6 \'c1\'b6\'b0\'c7\'bf\'a1\'bc\'ad \'bb\'e7\'bf\'eb\'c7\'cf\'b5\'b5\'b7\'cf \'bc\'b3\'c1\'a4\'c7\'cf\'b8\'e9 \'bf\'c0\'b7\'f9\'b0\'a1 \'bb\'fd\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  EDMA_TPTC detection of an error signaled by the source or destination address.\par
\bullet  EDMA_TPTC\'b4\'c2 \'bc\'d2\'bd\'ba \'b6\'c7\'b4\'c2 \'b8\'f1\'c0\'fb\'c1\'f6 \'c1\'d6\'bc\'d2\'bf\'a1 \'c0\'c7\'c7\'d8 \'bd\'c5\'c8\'a3 \'b5\'c8 \'bf\'a1\'b7\'af\'b8\'a6 \'b0\'cb\'c3\'e2\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Attempt to read or write to an invalid address in the configuration memory map.\par
\bullet  \'b1\'b8\'bc\'ba \'b8\'de\'b8\'f0\'b8\'ae \'b8\'ca\'bf\'a1\'bc\'ad \'c0\'af\'c8\'bf\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'ba \'c1\'d6\'bc\'d2\'b8\'a6 \'c0\'d0\'b0\'c5\'b3\'aa \'be\'b2\'b7\'c1\'b0\'ed \'bd\'c3\'b5\'b5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  Detection of a constant addressing mode TR violating the constant addressing mode transfer rules (the source/destination addresses and source/destination indexes must be aligned to 32 bytes).\par
\bullet  \'bb\'f3\'bc\'f6 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5 TR\'c0\'cc \'bb\'f3\'bc\'f6 \'c1\'d6\'bc\'d2 \'c1\'f6\'c1\'a4 \'b8\'f0\'b5\'e5 \'c0\'fc\'bc\'db \'b1\'d4\'c4\'a2\'c0\'bb \'c0\'a7\'b9\'dd\'c7\'cf\'b4\'c2\'c1\'f6 \'b0\'cb\'bb\'f6\'c7\'d5\'b4\'cf\'b4\'d9 (\'bc\'d2\'bd\'ba / \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2 \'b9\'d7 \'bc\'d2\'bd\'ba / \'b4\'eb\'bb\'f3 \'bb\'f6\'c0\'ce\'c0\'ba 32 \'b9\'d9\'c0\'cc\'c6\'ae\'b7\'ce \'c1\'a4\'b7\'c4\'b5\'c7\'be\'ee\'be\'df \'c7\'d4).\par
\par
Either or all error types may be disabled.\par
\'c0\'cf\'ba\'ce \'b6\'c7\'b4\'c2 \'b8\'f0\'b5\'e7 \'bf\'c0\'b7\'f9 \'c0\'af\'c7\'fc\'c0\'cc \'ba\'f1\'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
If an error bit is set and enabled, the error interrupt for the concerned transfer controller is generated.\par
\'bf\'c0\'b7\'f9 \'ba\'f1\'c6\'ae\'b0\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'be\'ee \'c0\'d6\'b0\'ed \'c8\'b0\'bc\'ba\'c8\'ad \'b5\'c8 \'b0\'e6\'bf\'ec \'c7\'d8\'b4\'e7 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'b4\'eb\'c7\'d1 \'bf\'c0\'b7\'f9 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae\'b0\'a1 \'bb\'fd\'bc\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.2.5.12.4 Debug Features\par
16.2.5.12.4 \'b5\'f0\'b9\'f6\'b1\'d7 \'b1\'e2\'b4\'c9\par
\par
The DMA program register set, DMA source active register set, and the destination FIFO register set are used to derive a brief history of TRs serviced through the transfer controller.\par
DMA \'c1\'a6\'be\'ee\'b1\'e2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae, DMA \'bc\'d2\'bd\'ba \'c8\'b0\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae \'b9\'d7 \'b8\'f1\'c0\'fb\'c1\'f6 FIFO \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b4\'c2 \'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2\'b8\'a6 \'c5\'eb\'c7\'d8 \'bc\'ad\'ba\'f1\'bd\'ba\'b5\'c7\'b4\'c2 TR\'c0\'c7 \'b0\'a3\'b4\'dc\'c7\'d1 \'c8\'f7\'bd\'ba\'c5\'e4\'b8\'ae\'b8\'a6 \'c0\'af\'b5\'b5\'c7\'cf\'b4\'c2\'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'c8\'b4\'d9.\par
\par
Additionally, the EDMA_TPTC status register EDMA_TPTCn_TCSTAT has dedicated bit fields to indicate the ongoing activity within different parts of the transfer controller:\par
\'b6\'c7\'c7\'d1 EDMA_TPTC \'bb\'f3\'c5\'c2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPTCn_TCSTAT\'b4\'c2 \'c0\'fc\'bf\'eb \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5\'b8\'a6 \'b0\'a1\'c1\'f6\'b0\'ed\'c0\'d6\'be\'ee \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 \'b4\'d9\'b8\'a5 \'ba\'ce\'ba\'d0\'bf\'a1\'bc\'ad \'c1\'f8\'c7\'e0\'c1\'df\'c0\'ce \'c8\'b0\'b5\'bf\'c0\'bb \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  The EDMA_TPTCn_TCSTAT[1] SRCACTV bit indicates whether the source active set is active.\par
\bullet  EDMA_TPTCn_TCSTAT [1] SRCACTV \'ba\'f1\'c6\'ae\'b4\'c2 \'bc\'d2\'bd\'ba \'c8\'b0\'bc\'ba \'bc\'bc\'c6\'ae\'b0\'a1 \'c8\'b0\'bc\'ba \'bb\'f3\'c5\'c2\'c0\'ce\'c1\'f6 \'bf\'a9\'ba\'ce\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  The EDMA_TPTCn_TCSTAT[6:4] DSTACTV bit indicates the number of TRs resident in the destination register active set at a given instance.\par
\bullet  EDMA_TPTCn_TCSTAT [6 : 4] DSTACTV \'ba\'f1\'c6\'ae\'b4\'c2 \'c1\'f6\'c1\'a4\'b5\'c8 \'c0\'ce\'bd\'ba\'c5\'cf\'bd\'ba\'bf\'a1\'bc\'ad \'b4\'eb\'bb\'f3 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'c8\'b0\'bc\'ba \'bc\'bc\'c6\'ae\'bf\'a1 \'bb\'f3\'c1\'d6\'c7\'cf\'b4\'c2 TR \'bc\'f6\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
\bullet  The EDMA_TPTCn_TCSTAT[0] PROGBUSY bit indicates whether a valid TR is present in the DMA program set.\par
\bullet  EDMA_TPTCn_TCSTAT [0] PROGBUSY \'ba\'f1\'c6\'ae\'b4\'c2 \'c0\'af\'c8\'bf\'c7\'d1 TR\'c0\'cc DMA \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'bc\'bc\'c6\'ae\'bf\'a1 \'c0\'d6\'b4\'c2\'c1\'f6 \'bf\'a9\'ba\'ce\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'c0\'b4\'cf\'b4\'d9.\par
\par
NOTE: If the TRs are in progression, it must realize that there is a chance that the values read from the EDMA_TPTC status registers will be inconsistent since the EDMA_TPTC changes the values of these registers due to ongoing activities.\par
\'c1\'d6 : TR\'c0\'cc \'c1\'f8\'c7\'e0\'c1\'df\'c0\'ce \'b0\'e6\'bf\'ec EDMA_TPTC\'b0\'a1 \'c1\'f8\'c7\'e0\'c1\'df\'c0\'ce \'c8\'b0\'b5\'bf\'c0\'b8\'b7\'ce \'c0\'ce\'c7\'d8\'c0\'cc \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'b0\'aa\'c0\'bb \'ba\'af\'b0\'e6\'c7\'cf\'b9\'c7\'b7\'ce EDMA_TPTC \'bb\'f3\'c5\'c2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1\'bc\'ad \'c0\'d0\'c0\'ba \'b0\'aa\'c0\'cc \'c0\'cf\'c4\'a1\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'bb \'b0\'a1\'b4\'c9\'bc\'ba\'c0\'cc \'c0\'d6\'c0\'bd\'c0\'bb \'c0\'ce\'bd\'c4\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
It is recommended that to ensure no additional submission of TRs to the EDMA_TPTC in order to facilitate ease of debug.\par
     \'b5\'f0\'b9\'f6\'b1\'d7\'b8\'a6 \'bd\'b1\'b0\'d4\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 TR\'c0\'bb EDMA_TPTC\'bf\'a1 \'c3\'df\'b0\'a1\'b7\'ce \'c1\'a6\'c3\'e2\'c7\'cf\'c1\'f6 \'be\'ca\'b5\'b5\'b7\'cf\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'cc \'c1\'c1\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.12.4.1 Destination FIFO Register Pointer\par
16.2.5.12.4.1 \'b8\'f1\'c0\'fb\'c1\'f6 FIFO \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'c6\'f7\'c0\'ce\'c5\'cd\par
\par
The destination FIFO register pointer is implemented as a circular buffer with the start pointer being EDMA_TPTCn_TCSTAT[12:11] DFSTRTPTR and a buffer depth of usually 2 or 4.\par
\'b4\'eb\'bb\'f3 FIFO \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'c6\'f7\'c0\'ce\'c5\'cd\'b4\'c2 \'bd\'c3\'c0\'db \'c6\'f7\'c0\'ce\'c5\'cd\'b0\'a1 EDMA_TPTCn_TCSTAT [12:11] DFSTRTPTR\'c0\'cc\'b0\'ed \'b9\'f6\'c6\'db \'b1\'ed\'c0\'cc\'b0\'a1 \'ba\'b8\'c5\'eb 2 \'b6\'c7\'b4\'c2 4 \'c0\'ce \'bc\'f8\'c8\'af \'b9\'f6\'c6\'db\'b7\'ce \'b1\'b8\'c7\'f6\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 The EDMA_TPTC maintains two important status details in EDMA_TPTCn_TCSTAT that are used during advanced debugging, if necessary.\par
  EDMA_TPTC\'b4\'c2 \'c7\'ca\'bf\'e4\'c7\'d1 \'b0\'e6\'bf\'ec \'b0\'ed\'b1\'de \'b5\'f0\'b9\'f6\'b1\'eb \'c1\'df\'bf\'a1 \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 EDMA_TPTCn_TCSTAT\'c0\'c7 \'b5\'ce \'b0\'a1\'c1\'f6 \'c1\'df\'bf\'e4 \'bb\'f3\'c5\'c2 \'bc\'bc\'ba\'ce \'bb\'e7\'c7\'d7\'c0\'bb \'c0\'af\'c1\'f6 \'ba\'b8\'bc\'f6\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPTCn_TCSTAT[12:11] DFSTRTPTR is a start pointer, the index to the head of the destination FIFO register.\par
EDMA_TPTCn_TCSTAT [12:11] DFSTRTPTR\'c0\'ba \'bd\'c3\'c0\'db \'c6\'f7\'c0\'ce\'c5\'cd, \'b4\'eb\'bb\'f3 FIFO \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'c0\'c7 \'c7\'ec\'b5\'e5\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'ce\'b5\'a6\'bd\'ba\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPTCn_TCSTAT[6:4] DSTACTV is a counter for the number of valid (occupied) entries.\par
EDMA_TPTCn_TCSTAT [6 : 4] DSTACTV\'b4\'c2 \'c0\'af\'c8\'bf\'c7\'d1 (\'c1\'a1\'c0\'af \'b5\'c8) \'c7\'d7\'b8\'f1\'c0\'c7 \'bc\'f6\'b8\'a6 \'b3\'aa\'c5\'b8\'b3\'bb\'b4\'c2 \'c4\'ab\'bf\'ee\'c5\'cd\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
These registers are used to get a brief history of transfers.\par
\'c0\'cc \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b4\'c2 \'c0\'fc\'bc\'db\'bf\'a1 \'b4\'eb\'c7\'d1 \'b0\'a3\'b4\'dc\'c7\'d1 \'b1\'e2\'b7\'cf\'c0\'bb \'b0\'a1\'c1\'ae \'bf\'c0\'b4\'c2 \'b5\'a5 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Examples of some register field values and their interpretation:\par
\'c0\'cf\'ba\'ce \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'c7\'ca\'b5\'e5 \'b0\'aa \'b9\'d7 \'b1\'d7 \'c7\'d8\'bc\'ae\'c0\'c7 \'bf\'b9 :\par
\par
\bullet  EDMA_TPTCn_TCSTAT[12:11] DFSTRTPTR = 0x0 and EDMA_TPTCn_TCSTAT[6:4] DSTACTV = 0x0 implies that no TRs are stored in the destination FIFO register.\par
\bullet  EDMA_TPTCn_TCSTAT [12:11] DFSTRTPTR = 0x0 \'b9\'d7 EDMA_TPTCn_TCSTAT [6 : 4] DSTACTV = 0x0\'c0\'ba \'b4\'eb\'bb\'f3 FIFO \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 TR\'c0\'cc \'c0\'fa\'c0\'e5\'b5\'c7\'c1\'f6 \'be\'ca\'be\'d2 \'c0\'bd\'c0\'bb \'c0\'c7\'b9\'cc\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  EDMA_TPTCn_TCSTAT[12:11] DFSTRTPTR = 0x1 and EDMA_TPTCn_TCSTAT[6:4] DSTACTV = 0x2 implies that two TRs are present.\par
\bullet  EDMA_TPTCn_TCSTAT [12:11] DFSTRTPTR = 0x1 \'b9\'d7 EDMA_TPTCn_TCSTAT [6 : 4] DSTACTV = 0x2\'b4\'c2 \'b5\'ce \'b0\'b3\'c0\'c7 TR\'c0\'cc \'c0\'d6\'c0\'bd\'c0\'bb \'c0\'c7\'b9\'cc\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The first pending TR is read from the destination FIFO register entry 1 and the second pending TR is read from the destination FIFO register entry 2.\par
\'c3\'b9 \'b9\'f8\'c2\'b0 \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce TR\'c0\'ba \'b4\'eb\'bb\'f3 FIFO \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'c7\'d7\'b8\'f1 1\'bf\'a1\'bc\'ad \'c0\'d0\'c8\'f7\'b0\'ed \'b5\'ce \'b9\'f8\'c2\'b0 \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce TR\'c0\'ba \'b4\'eb\'bb\'f3 FIFO \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'c7\'d7\'b8\'f1 2\'bf\'a1\'bc\'ad \'c0\'d0\'bd\'c0\'b4\'cf\'b4\'d9..\par
\par
\bullet  EDMA_TPTCn_TCSTAT[12:11] DFSTRTPTR = 0x3 and EDMA_TPTCn_TCSTAT[6:4] DSTACTV = 0x2 implies that two TRs are present.\par
\bullet  EDMA_TPTCn_TCSTAT [12:11] DFSTRTPTR = 0x3 \'b9\'d7 EDMA_TPTCn_TCSTAT [6 : 4] DSTACTV = 0x2\'b4\'c2 \'b5\'ce \'b0\'b3\'c0\'c7 TR\'c0\'cc \'c0\'d6\'c0\'bd\'c0\'bb \'c0\'c7\'b9\'cc\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The first pending TR is read from the destination FIFO register entry 3 and the second pending TR is read from the destination FIFO register entry 0.\par
\'c3\'b9 \'b9\'f8\'c2\'b0 \'b4\'eb\'b1\'e2\'c1\'df\'c0\'ce TR\'c0\'ba \'b4\'eb\'bb\'f3 FIFO \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'c7\'d7\'b8\'f1 3\'bf\'a1\'bc\'ad \'c0\'d0\'c7\'f4\'c1\'f6\'b0\'ed \'b5\'ce \'b9\'f8\'c2\'b0 \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce TR\'c0\'ba \'b4\'eb\'bb\'f3 FIFO \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'c7\'d7\'b8\'f1 0\'bf\'a1\'bc\'ad \'c0\'d0\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.12.5 EDMA_TPTC Configuration\par
16.2.5.12.5 EDMA_TPTC \'b1\'b8\'bc\'ba\par
\par
Table 16-106 provides the configuration of the individual EDMA transfer controllers present on the device.\par
\'c7\'a5 16-106\'c0\'ba \'c0\'e5\'c4\'a1\'bf\'a1\'c0\'d6\'b4\'c2 \'b0\'b3\'ba\'b0 EDMA \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 \'b1\'b8\'bc\'ba\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The DBS for each transfer controller is defined by Control Module register ( CTRL_CORE_CONTROL_IO_1) settings.\par
\'b0\'a2 \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'c0\'c7 DBS\'b4\'c2 \'c1\'a6\'be\'ee \'b8\'f0\'b5\'e2 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (CTRL_CORE_CONTROL_IO_1) \'bc\'b3\'c1\'a4\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'a4\'c0\'c7\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.2.5.13 Event Dataflow\par
16.2.5.13 \'c0\'cc\'ba\'a5\'c6\'ae \'b5\'a5\'c0\'cc\'c5\'cd \'c8\'e5\'b8\'a7\par
\par
This section summarizes the data flow of a single event, from the time the event is latched to the channel controller to the time the transfer completion code is returned.\par
\'c0\'cc \'bc\'bd\'bc\'c7\'bf\'a1\'bc\'ad\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1 \'b7\'a1\'c4\'a1 \'b5\'c8 \'bd\'c3\'c1\'a1\'ba\'ce\'c5\'cd \'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5\'b0\'a1 \'b9\'dd\'c8\'af \'b5\'c9 \'b6\'a7\'b1\'ee\'c1\'f6 \'b4\'dc\'c0\'cf \'c0\'cc\'ba\'a5\'c6\'ae\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'c8\'e5\'b8\'a7\'c0\'bb \'bf\'e4\'be\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The following steps list the sequence of EDMA_TPCC activity:\par
\'b4\'d9\'c0\'bd \'b4\'dc\'b0\'e8\'b4\'c2 EDMA_TPCC \'c8\'b0\'b5\'bf\'c0\'c7 \'bc\'f8\'bc\'ad\'b8\'a6 \'b3\'aa\'bf\'ad\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
1. Event is asserted from an external source (peripheral or external interrupt).\par
1. \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'bf\'dc\'ba\'ce \'bc\'d2\'bd\'ba (\'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1 \'b6\'c7\'b4\'c2 \'bf\'dc\'ba\'ce \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae)\'b7\'ce\'ba\'ce\'c5\'cd \'be\'ee\'bc\'ad \'c6\'ae\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
This also is similar for a manually-triggered, chained-triggered, or QDMA-triggered event.\par
\'c0\'cc\'b4\'c2 \'bc\'f6\'b5\'bf \'c6\'ae\'b8\'ae\'b0\'c5, \'bf\'ac\'bc\'e2 \'c6\'ae\'b8\'ae\'b0\'c5 \'b6\'c7\'b4\'c2 QDMA \'c6\'ae\'b8\'ae\'b0\'c5 \'c0\'cc\'ba\'a5\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d8\'bc\'ad\'b5\'b5 \'c0\'af\'bb\'e7\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The event is latched into the EDMA_TPCC_ER[31:0]En / EDMA_TPCC_ERH[31:0] En (or EDMA_TPCC_CER[31:0] En / EDMA_TPCC_CERH[31:0] En, EDMA_TPCC_ESR[31:0] En / EDMA_TPCC_ESRH[31:0] En, EDMA_TPCC_QER[7:0] En) bit.\par
\'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 EDMA_TPCC_ERR [31 : 0] En / EDMA_TPCC_ERH [31 : 0] En (\'b6\'c7\'b4\'c2 EDMA_TPCC_CER [31 : 0] En / EDMA_TPCC_CERH [31 : 0] En, EDMA_TPCC_ESR [ : 0] En, EDMA_TPCC_QER [7 : 0] En) \'ba\'f1\'c6\'ae\'c0\'cc\'b4\'d9.\par
\par
2. Once an event is prioritized and queued into the appropriate event queue, the EDMA_TPCC_SER[31:0] En \\ EDMA_TPCC_SERH[31:0] En (or EDMA_TPCC_QSER[7:0] En) bit is set to inform the event prioritization / processing logic to disregard this event since it is already in the queue.\par
2. \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c1\'f6\'c1\'a4\'b5\'c7\'b0\'ed \'c0\'fb\'c0\'fd\'c7\'d1 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'b4\'eb\'b1\'e2\'b5\'c7\'b8\'e9 EDMA_TPCC_SER [31 : 0] En \\ EDMA_TPCC_SERH [31 : 0] En (\'b6\'c7\'b4\'c2 EDMA_TPCC_QSER [7 : 0] En) \'ba\'f1\'c6\'ae\'b0\'a1 \'c0\'cc\'ba\'a5\'c6\'ae \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c1\'f6\'c1\'a4 / \'c7\'c1\'b7\'ce\'bc\'bc\'bd\'cc \'b7\'ce\'c1\'f7\'c0\'ba \'c0\'cc\'b9\'cc \'c5\'a5\'bf\'a1 \'c0\'d6\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1\'c0\'cc \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'b9\'ab\'bd\'c3\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Alternatively, if the transfer controller and the event queue are empty, then the event bypasses the queue.\par
\'b6\'c7\'b4\'c2 \'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2\'bf\'cd \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'cc \'ba\'f1\'be\'ee \'c0\'d6\'c0\'b8\'b8\'e9 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'b4\'eb\'b1\'e2\'bf\'ad\'c0\'bb \'bf\'ec\'c8\'b8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
3. The EDMA_TPCC processing and the submission logic evaluates the appropriate PaRAM set and determines whether it is a non-null and non-dummy transfer request (TR).\par
3. EDMA_TPCC \'c3\'b3\'b8\'ae W \'c1\'a6\'c3\'e2 \'b3\'ed\'b8\'ae\'b4\'c2 \'c7\'d8\'b4\'e7 PaRAM \'bc\'bc\'c6\'ae\'b8\'a6 \'c6\'f2\'b0\'a1\'c7\'cf\'b0\'ed \'b1\'d7\'b0\'cd\'c0\'cc \'ba\'f1 \'b3\'ce (null)\'c0\'cc \'be\'c6\'b4\'cf\'b0\'ed \'b4\'f5\'b9\'cc\'b0\'a1 \'be\'c6\'b4\'d1 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR)\'c0\'ce\'c1\'f6 \'bf\'a9\'ba\'ce\'b8\'a6 \'c6\'c7\'ba\'b0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
4. The EDMA_TPCC clears the EDMA_TPCC_ER[31:0] En/ EDMA_TPCC_ERH[31:0] En (or EDMA_TPCC_CER[31:0] En / EDMA_TPCC_CERH[31:0] En, EDMA_TPCC_ESR[31:0]En / EDMA_TPCC_ESRH[31:0] En, EDMA_TPCC_QER[31:0] En) bit and the EDMA_TPCC_SER[31:0] En / EDMA_TPCC_SERH[31:0] En bit as soon as it determines the TR is non-null. In the case of a null set, the EDMA_TPCC_SER[31:0] En / EDMA_TPCC_SERH[31:0] En bit remains set.\par
4. EDMA_TPCC\'b4\'c2 EDMA_TPCC_ER [31 : 0] En / EDMA_TPCC_ERH [31 : 0] En (\'b6\'c7\'b4\'c2 EDMA_TPCC_CER [31 : 0] En / EDMA_TPCC_CERH [31 : 0] En, EDMA_TPCC_ESR [31 : 0] En / EDMA_TPCC_ESRH [31 : TR\'c0\'cc \'b3\'ce\'c0\'cc \'be\'c6\'b4\'cf\'b6\'f3\'b0\'ed \'b0\'e1\'c1\'a4\'c7\'cf\'c0\'da \'b8\'b6\'c0\'da EDMA_TPCC_SER [31 : 0] En / EDMA_TPCC_SERH [31 : 0] En \'ba\'f1\'c6\'ae\'bf\'cd EDMA_TPCC_SER [31 : 0] En / EDMA_TPCC_SERH [31 : 0] \'b3\'ce \'bc\'bc\'c6\'ae\'c0\'c7 \'b0\'e6\'bf\'ec, EDMA_TPCC_SER [31 : 0] En / EDMA_TPCC_SERH [31 : 0] En \'ba\'f1\'c6\'ae\'b0\'a1 \'bc\'b3\'c1\'a4\'b5\'c7\'be\'ee \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
It submits the non-null/non-dummy TR to the associated transfer controller.\par
\'c0\'cc\'b0\'cd\'c0\'ba \'ba\'f1 null / non-dummy TR\'c0\'bb \'bf\'ac\'b0\'fc\'b5\'c8 \'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2\'bf\'a1 \'c1\'a6\'c3\'e2\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
If the TR was programmed for early completion, the EDMA_TPCC immediately sets the interrupt pending register (EDMA_TPCC_IPR[31:0] I[TCC] / DMA_TPCC_IPRH[31:0] I[TCC] - 32).\par
TR\'c0\'cc \'c3\'ca\'b1\'e2 \'bf\'cf\'b7\'e1\'b8\'a6 \'c0\'a7\'c7\'d8 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c7\'be\'fa\'b4\'d9\'b8\'e9, EDMA_TPCC\'b4\'c2 \'c1\'ef\'bd\'c3 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'ba\'b8\'b7\'f9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (EDMA_TPCC_IPR [31 : 0] I [TCC] / DMA_TPCC_IPRH [31 : 0] I [TCC] - 32)\'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'d1\'b4\'d9.\par
\par
5. If the TR was programmed for normal completion, the EDMA_TPCC sets the interrupt pending register (EDMA_TPCC_IPR[31:0] I[TCC] / EDMA_TPCC_IPRH[31:0] I[TCC]) when the EDMA_TPTC informs the EDMA_TPCC about completion of the transfer (returns transfer completion codes).\par
5. TR\'c0\'cc \'c1\'a4\'bb\'f3 \'bf\'cf\'b7\'e1\'b5\'c7\'b5\'b5\'b7\'cf \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'b5\'c8 \'b0\'e6\'bf\'ec, EDMA_TPTC\'b0\'a1 EDMA_TPCC\'bf\'a1 \'bf\'cf\'b7\'e1\'b8\'a6 \'be\'cb\'b8\'b1 \'b6\'a7 EDMA_TPCC\'b0\'a1 \'c0\'ce\'c5\'cd\'b7\'b4\'c6\'ae \'ba\'b8\'b7\'f9 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd (EDMA_TPCC_IPR [31 : 0] I [TCC] / EDMA_TPCC_IPRH [31 : 0] I [TCC]) \'c0\'fc\'bc\'db (\'c0\'fc\'bc\'db \'bf\'cf\'b7\'e1 \'c4\'da\'b5\'e5 \'b9\'dd\'c8\'af) \'b8\'a6 \'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
6. The EDMA_TPCC programs the associated EDMA_TPTC's Program Register Set with the TR.\par
6. EDMA_TPCC\'b4\'c2 \'bf\'ac\'b0\'fc\'b5\'c8 EDMA_TPTC\'c0\'c7 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b8\'a6 TR\'b7\'ce \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a5\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
7. The TR is then passed to the Source Active set and the DST FIFO Register Set, if both the register sets are available.\par
7. \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b0\'a1 \'b8\'f0\'b5\'ce \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9\'c7\'cf\'b8\'e9 TR\'c0\'ba \'bc\'d2\'bd\'ba \'c8\'b0\'bc\'ba \'bc\'bc\'c6\'ae\'bf\'cd DST FIFO \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd \'bc\'bc\'c6\'ae\'b7\'ce \'c0\'fc\'b4\'de\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
8. The Read Controller processes the TR by issuing read commands to the source slave endpoint. The Read Data lands in the Data FIFO of the EDMA_TPTCn.\par
8. \'c0\'d0\'b1\'e2 \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'bc\'d2\'bd\'ba \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea \'b3\'a1\'c1\'a1\'bf\'a1 \'c0\'d0\'b1\'e2 \'b8\'ed\'b7\'c9\'c0\'bb \'bd\'c7\'c7\'e0\'c7\'cf\'bf\'a9 TR\'c0\'bb \'c3\'b3\'b8\'ae\'c7\'d5\'b4\'cf\'b4\'d9. \'c0\'d0\'b1\'e2 \'b5\'a5\'c0\'cc\'c5\'cd\'b4\'c2 EDMA_TPTCn\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd FIFO\'bf\'a1 \'c0\'fa\'c0\'e5\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
9. As soon as sufficient data is available, the Write Controller begins processing the TR by issuing write commands to the destination slave endpoint.\par
9. \'c3\'e6\'ba\'d0\'c7\'d1 \'b5\'a5\'c0\'cc\'c5\'cd\'b0\'a1 \'bb\'e7\'bf\'eb \'b0\'a1\'b4\'c9 \'c7\'d8\'c1\'f6 \'c0\'da\'b8\'b6\'c0\'da \'be\'b2\'b1\'e2 \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 \'b8\'f1\'c0\'fb\'c1\'f6 \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea \'bf\'a3\'b5\'e5 \'c6\'f7\'c0\'ce\'c6\'ae\'bf\'a1 \'be\'b2\'b1\'e2 \'b8\'ed\'b7\'c9\'c0\'bb \'b9\'df\'c7\'e0\'c7\'cf\'bf\'a9 TR \'c3\'b3\'b8\'ae\'b8\'a6 \'bd\'c3\'c0\'db\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
10. This continues until the TR completes and the EDMA_TPTCn then signals completion status to the EDMA_TPCC.\par
10. \'c0\'cc\'b0\'cd\'c0\'ba TR\'c0\'cc \'bf\'cf\'b7\'e1\'b5\'c7\'b0\'ed EDMA_TPTCn\'c0\'cc \'bf\'cf\'b7\'e1 \'bb\'f3\'c5\'c2\'b8\'a6 EDMA_TPCC\'bf\'a1 \'bd\'c5\'c8\'a3 \'c7\'d2 \'b6\'a7\'b1\'ee\'c1\'f6 \'b0\'e8\'bc\'d3\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.2.5.14 EDMA controller Prioritization\par
16.2.5.14 EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c1\'f6\'c1\'a4\par
\par
The EDMA controller has many implementation rules to deal with concurrent events/channels, transfers, etc. The following subsections detail various arbitration details whenever there might be occurrence of concurrent activity.\par
EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1\'b4\'c2 \'b5\'bf\'bd\'c3 \'c0\'cc\'ba\'a5\'c6\'ae / \'c3\'a4\'b3\'ce, \'c0\'fc\'bc\'db \'b5\'ee\'c0\'bb \'b4\'d9\'b7\'e7\'b4\'c2 \'b8\'b9\'c0\'ba \'b1\'b8\'c7\'f6 \'b1\'d4\'c4\'a2\'c0\'cc \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9. \'b4\'d9\'c0\'bd \'ba\'ce\'c0\'fd\'bf\'a1\'bc\'ad\'b4\'c2 \'b5\'bf\'bd\'c3 \'c8\'b0\'b5\'bf\'c0\'cc \'b9\'df\'bb\'fd\'c7\'d2 \'b6\'a7\'b8\'b6\'b4\'d9 \'b4\'d9\'be\'e7\'c7\'d1 \'c1\'df\'c0\'e7 \'bc\'bc\'ba\'ce \'bb\'e7\'c7\'d7\'c0\'bb \'c0\'da\'bc\'bc\'c8\'f7 \'bc\'b3\'b8\'ed\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Figure 16-32 shows the different places EDMA priorities come into play.\par
\'b1\'d7\'b8\'b2 16-32\'b4\'c2 EDMA \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'c0\'fb\'bf\'eb\'b5\'c7\'b4\'c2 \'bf\'a9\'b7\'af \'c0\'e5\'bc\'d2\'b8\'a6 \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
16.2.5.14.1 Channel Priority\par
16.2.5.14.1 \'c3\'a4\'b3\'ce \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\par
\par
The EDMA event registers EDMA_TPCC_ER and EDMA_TPCC_ERH capture up to 64 events, the QDMA event register EDMA_TPCC_QER captures QDMA events for all QDMA channels therefore, it is possible for events to occur simultaneously on the DMA/QDMA event inputs.\par
EDMA \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'c3\'d6\'b4\'eb 64 \'b0\'b3\'c0\'c7 \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 EDMA_TPCC_ER \'b9\'d7 EDMA_TPCC_ERH\'b7\'ce \'c4\'b8\'c3\'b3\'c7\'cf\'b9\'c7\'b7\'ce QDMA \'c0\'cc\'ba\'a5\'c6\'ae \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd EDMA_TPCC_QER\'b4\'c2 \'b8\'f0\'b5\'e7 QDMA \'c3\'a4\'b3\'ce\'bf\'a1 \'b4\'eb\'c7\'d8 QDMA \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'c4\'b8\'c3\'b3\'c7\'cf\'b9\'c7\'b7\'ce DMA / QDMA \'c0\'cc\'ba\'a5\'c6\'ae \'c0\'d4\'b7\'c2\'bf\'a1\'bc\'ad \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'b5\'bf\'bd\'c3\'bf\'a1 \'b9\'df\'bb\'fd\'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
For events arriving simultaneously, the event associated with the lowest channel number is prioritized for submission to the event queues (for DMA events, channel 0 has the highest priority and channel 63 has the lowest priority, for QDMA events, channel 0 has the highest priority and channel 7 has the lowest priority).\par
\'b5\'bf\'bd\'c3\'bf\'a1 \'b5\'b5\'c2\'f8\'c7\'cf\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae\'c0\'c7 \'b0\'e6\'bf\'ec \'b0\'a1\'c0\'e5 \'b3\'b7\'c0\'ba \'c3\'a4\'b3\'ce \'b9\'f8\'c8\'a3\'bf\'cd \'bf\'ac\'b0\'fc\'b5\'c8 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'c1\'a6\'c3\'e2\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'c1\'f6\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9 (DMA \'c0\'cc\'ba\'a5\'c6\'ae\'c0\'c7 \'b0\'e6\'bf\'ec \'c3\'a4\'b3\'ce 0\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b0\'a1\'c0\'e5 \'b3\'f4\'b0\'ed \'c3\'a4\'b3\'ce 63\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b0\'a1\'c0\'e5 \'b3\'b7\'bd\'c0\'b4\'cf\'b4\'d9. QDMA \'c0\'cc\'ba\'a5\'c6\'ae\'c0\'c7 \'b0\'e6\'bf\'ec \'c3\'a4\'b3\'ce 0\'c0\'cc \'b0\'a1\'c0\'e5 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'c0\'bd). \'c3\'a4\'b3\'ce 7\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b0\'a1\'c0\'e5 \'b3\'b7\'bd\'c0\'b4\'cf\'b4\'d9).\par
\par
This mechanism only sorts simultaneous events for submission to the event queues.\par
\'c0\'cc \'b8\'de\'c4\'bf\'b4\'cf\'c1\'f2\'c0\'ba \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'b7\'ce \'c1\'a6\'c3\'e2\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'b5\'bf\'bd\'c3 \'c0\'cc\'ba\'a5\'c6\'ae \'b8\'b8 \'c1\'a4\'b7\'c4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
If a DMA and QDMA event occurs simultaneously, the DMA event always has prioritization against the QDMA event for submission to the event queues.\par
DMA \'b9\'d7 QDMA \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'b5\'bf\'bd\'c3\'bf\'a1 \'b9\'df\'bb\'fd\'c7\'cf\'b8\'e9 DMA \'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'c7\'d7\'bb\'f3 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'c1\'a6\'c3\'e2\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 QDMA \'c0\'cc\'ba\'a5\'c6\'ae\'bf\'a1 \'b4\'eb\'c7\'d1 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b8\'a6\'b0\'a1\'c1\'fd\'b4\'cf\'b4\'d9.\par
\par
16.2.5.14.2 Trigger Source Priority\par
16.2.5.14.2 \'c6\'ae\'b8\'ae\'b0\'c5 \'bc\'d2\'bd\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\par
\par
If a EDMA channel is associated with more than one trigger source (event trigger, manual trigger, and chain trigger), and if multiple events are set simultaneously for the same channel (EDMA_TPCC_ER[31:0] En = 1, EDMA_TPCC_ESR[31:0] En = 1 , EDMA_TPCC_CER[31:0] En = 1) , then the EDMA_TPCC always services these events in the following priority order: event trigger (via EDMA_TPCC_ER) is higher priority than chain trigger (via EDMA_TPCC_CER) and chain trigger is higher priority than manual trigger (via EDMA_TPCC_ESR).\par
EDMA \'c3\'a4\'b3\'ce\'c0\'cc \'b5\'d1 \'c0\'cc\'bb\'f3\'c0\'c7 \'c6\'ae\'b8\'ae\'b0\'c5 \'bc\'d2\'bd\'ba (\'c0\'cc\'ba\'a5\'c6\'ae \'c6\'ae\'b8\'ae\'b0\'c5, \'bc\'f6\'b5\'bf \'c6\'ae\'b8\'ae\'b0\'c5 \'b9\'d7 \'c3\'bc\'c0\'ce \'c6\'ae\'b8\'ae\'b0\'c5)\'bf\'cd \'bf\'ac\'b0\'fc\'b5\'c7\'be\'ee \'c0\'d6\'b0\'ed \'b5\'bf\'c0\'cf\'c7\'d1 \'c3\'a4\'b3\'ce (EDMA_TPCC_ER [31 : 0] En = 1, EDMA_TPCC_ESR [31 : 0] En = 1, EDMA_TPCC_CER [31 : 0] En = 1), EDMA_TPCC\'b4\'c2 \'c7\'d7\'bb\'f3 \'b4\'d9\'c0\'bd \'c0\'cc\'ba\'a5\'c6\'ae \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b7\'ce \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'c3\'b3\'b8\'ae\'c7\'d5\'b4\'cf\'b4\'d9. EDMA_TPCC_ER\'b8\'a6 \'c5\'eb\'c7\'d1 \'c0\'cc\'ba\'a5\'c6\'ae \'c6\'ae\'b8\'ae\'b0\'c5\'b4\'c2 EDMA_TPCC_CER\'b8\'a6 \'c5\'eb\'c7\'d1 \'c3\'bc\'c0\'ce \'c6\'ae\'b8\'ae\'b0\'c5\'ba\'b8\'b4\'d9 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b3\'f4\'b0\'ed \'c3\'bc\'c0\'ce \'c6\'ae\'b8\'ae\'b0\'c5\'b4\'c2 \'bc\'f6\'b5\'bf \'c6\'ae\'b8\'ae\'b0\'c5\'ba\'b8\'b4\'d9 \'b3\'f4\'c0\'ba \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 (EDMA_TPCC_ESR\'c0\'bb \'c5\'eb\'c7\'d8).\par
\par
This implies that if for channel 0, both EDMA_TPCC_ER[0] E0 = 1 and EDMA_TPCC_CER[0] E0 = 1 at the same time, then the EDMA_TPCC_ER[0] E0 event is always queued before the EDMA_TPCC_CER[0] E0 event.\par
\'c0\'cc\'b0\'cd\'c0\'ba EDMA_TPCC_ER [0] E0 = 1\'b0\'fa EDMA_TPCC_CER [0] E0 = 1\'c0\'cc \'b5\'bf\'bd\'c3\'bf\'a1 0 \'c3\'a4\'b3\'ce \'c0\'ce \'b0\'e6\'bf\'ec EDMA_TPCC_ER [0] E0 \'c0\'cc\'ba\'a5\'c6\'ae\'b0\'a1 \'c7\'d7\'bb\'f3 EDMA_TPCC_CER [0] E0 \'c0\'cc\'ba\'a5\'c6\'ae \'c0\'fc\'bf\'a1 \'b4\'eb\'b1\'e2 \'c1\'df\'c0\'d3\'c0\'bb \'c0\'c7\'b9\'cc\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.5.14.3 Dequeue Priority\par
16.2.5.14.3 \'c5\'a5 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7 \'c1\'a6\'b0\'c5\par
\par
The priority of the associated transfer request (TR) is further mitigated by which event queue is being used for event submission (dictated by EDMA_TPCC_DMAQNUMN_k and EDMA_TPCC_QDMAQNUM).\par
\'bf\'ac\'b0\'fc\'b5\'c8 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb (TR)\'c0\'c7 \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae \'c1\'a6\'c3\'e2 (EDMA_TPCC_DMAQNUMN_k \'b9\'d7 EDMA_TPCC_QDMAQNUM\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'f6\'bd\'c3 \'b5\'ca)\'bf\'a1 \'bb\'e7\'bf\'eb\'b5\'c7\'b4\'c2 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1 \'c0\'c7\'c7\'d8 \'b4\'f5 \'bf\'cf\'c8\'ad\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
For submission of a TR to the transfer request, events need to be de-queued from the event queues.\par
TR\'c0\'bb \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'bf\'a1 \'c1\'a6\'c3\'e2\'c7\'cf\'b7\'c1\'b8\'e9 \'c0\'cc\'ba\'a5\'c6\'ae\'b8\'a6 \'c0\'cc\'ba\'a5\'c6\'ae \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'c1\'a6\'b0\'c5\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Queue 0 has the highest dequeue priority and queue 1 the lowest.\par
\'b4\'eb\'b1\'e2\'bf\'ad 0\'c0\'ba \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'bf\'ec\'bc\'b1 \'bc\'f8\'c0\'a7\'b0\'a1 \'b0\'a1\'c0\'e5 \'b3\'f4\'b0\'ed \'b4\'eb\'b1\'e2\'bf\'ad 1\'c0\'ba \'b4\'eb\'b1\'e2\'bf\'ad\'bf\'a1\'bc\'ad \'b0\'a1\'c0\'e5 \'b3\'b7\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.5.15 EDMA Power, Reset and Clock Management\par
16.2.5.15 EDMA \'c0\'fc\'bf\'f8, \'b8\'ae\'bc\'c2 \'b9\'d7 \'c5\'ac\'b7\'cf \'b0\'fc\'b8\'ae\par
\par
16.2.5.15.1 Clock and Power Management\par
16.2.5.15.1 \'c5\'ac\'b7\'cf \'b9\'d7 \'c0\'fc\'bf\'f8 \'b0\'fc\'b8\'ae\par
\par
The EDMA channel controller and transfer controller are clocked from L3MIAN1_L3_GICLK interface clock.\par
EDMA \'c3\'a4\'b3\'ce \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'cd \'c0\'fc\'bc\'db \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'b4\'c2 L3MIAN1_L3_GICLK \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba \'c5\'ac\'b7\'b0\'bf\'a1\'bc\'ad \'c5\'ac\'b7\'b0\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The EDMA system runs at the L3 clock frequency.\par
EDMA \'bd\'c3\'bd\'ba\'c5\'db\'c0\'ba L3 \'c5\'ac\'b7\'cf \'c1\'d6\'c6\'c4\'bc\'f6\'b7\'ce \'b5\'bf\'c0\'db\'c7\'d1\'b4\'d9.\par
\par
The Auto clock gating for the EDMA_TPCC module is controled by the EDMA_TPCC_CLKGDIS[0] CLKGDIS bit at the module level.\par
EDMA_TPCC \'b8\'f0\'b5\'e2\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'da\'b5\'bf \'c5\'ac\'b7\'cf \'b0\'d4\'c0\'cc\'c6\'c3\'c0\'ba \'b8\'f0\'b5\'e2 \'b7\'b9\'ba\'a7\'c0\'c7 EDMA_TPCC_CLKGDIS [0] CLKGDIS \'ba\'f1\'c6\'ae\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'a6\'be\'ee\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The L3MIAN1_L3_GICLK interface clock to EDMA controller's modules are controled by the following registers in the PRCM module:\par
L3MIAN1_L3_GICLK \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba \'c5\'ac\'b7\'b0 - EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'b8\'f0\'b5\'e2\'c0\'ba PRCM \'b8\'f0\'b5\'e2\'c0\'c7 \'b4\'d9\'c0\'bd \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'a6\'be\'ee\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  PRCM.CM_L3MAIN1_TPCC_CLKCTRL - manages EDMA_TPCC module clock.\par
\bullet  PRCM.CM_L3MAIN1_TPCC_CLKCTRL - EDMA_TPCC \'b8\'f0\'b5\'e2 \'c5\'ac\'b7\'cf\'c0\'bb \'b0\'fc\'b8\'ae\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  PRCM.CM_L3MAIN1_TPTC1_CLKCTRL - manages EDMA_TPTC0 module clock.\par
\bullet  PRCM.CM_L3MAIN1_TPTC1_CLKCTRL - EDMA_TPTC0 \'b8\'f0\'b5\'e2 \'c5\'ac\'b7\'b0\'c0\'bb \'b0\'fc\'b8\'ae\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  PRCM.CM_L3MAIN1_TPTC2_CLKCTRL - manages EDMA_TPTC1 module clock.\par
\bullet  PRCM.CM_L3MAIN1_TPTC2_CLKCTRL - EDMA_TPTC1 \'b8\'f0\'b5\'e2 \'c5\'ac\'b7\'b0\'c0\'bb \'b0\'fc\'b8\'ae\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
EDMA_TPCC and EDMA_TPTC0 and EDMA_TPTC1 modules have wakeup depandaces to several device modules.\par
EDMA_TPCC \'b9\'d7 EDMA_TPTC0 \'b9\'d7 EDMA_TPTC1 \'b8\'f0\'b5\'e2\'bf\'a1\'b4\'c2 \'bf\'a9\'b7\'af \'c0\'e5\'c4\'a1 \'b8\'f0\'b5\'e2\'bf\'a1 \'b4\'eb\'c7\'d1 \'bf\'fe\'c0\'cc\'c5\'a9 \'be\'f7 depandaces\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The wakeup dependency based on EDMA modules service requests are controled by registers in PRCM module:\par
EDMA \'b8\'f0\'b5\'e2 \'bc\'ad\'ba\'f1\'bd\'ba \'bf\'e4\'c3\'bb\'bf\'a1 \'b1\'e2\'b9\'dd\'c7\'d1 \'bf\'fe\'c0\'cc\'c5\'a9 \'be\'f7 \'c1\'be\'bc\'d3\'bc\'ba\'c0\'ba PRCM \'b8\'f0\'b5\'e2\'c0\'c7 \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'a6\'be\'ee\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
\bullet  PRCM.PM_L3MAIN1_TPCC_WKDEP - controls wakeup dependency based on TPCC service requests.\par
\bullet  PRCM.PM_L3MAIN1_TPCC_WKDEP - TPCC \'bc\'ad\'ba\'f1\'bd\'ba \'bf\'e4\'c3\'bb\'bf\'a1 \'b5\'fb\'b6\'f3 \'bf\'fe\'c0\'cc\'c5\'a9 \'be\'f7 \'c1\'be\'bc\'d3\'bc\'ba\'c0\'bb \'c1\'a6\'be\'ee\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  PRCM.PM_L3MAIN1_TPTC1_WKDEP - controls wakeup dependency based on TPTC0 service requests.\par
\bullet  PRCM.PM_L3MAIN1_TPTC1_WKDEP - TPTC0 \'bc\'ad\'ba\'f1\'bd\'ba \'bf\'e4\'c3\'bb\'bf\'a1 \'b5\'fb\'b6\'f3 \'bf\'fe\'c0\'cc\'c5\'a9 \'be\'f7 \'c1\'be\'bc\'d3\'bc\'ba\'c0\'bb \'c1\'a6\'be\'ee\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
\bullet  PRCM.PM_L3MAIN1_TPTC2_WKDEP - controls wakeup dependency based on TPTC1 service requests.\par
\bullet  PRCM.PM_L3MAIN1_TPTC2_WKDEP - TPTC1 \'bc\'ad\'ba\'f1\'bd\'ba \'bf\'e4\'c3\'bb\'bf\'a1 \'b5\'fb\'b6\'f3 \'bf\'fe\'c0\'cc\'c5\'a9 \'be\'f7 \'c1\'be\'bc\'d3\'bc\'ba\'c0\'bb \'c1\'a6\'be\'ee\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPCC, EDMA_TPTC0 and EDMA_TPTC1 can be placed in reduced-power modes to conserve power during periods of low activity.\par
EDMA_TPCC, EDMA_TPTC0 \'b9\'d7 EDMA_TPTC1\'c0\'ba \'c8\'b0\'b5\'bf\'c0\'cc \'c0\'fb\'c0\'ba \'b1\'e2\'b0\'a3 \'b5\'bf\'be\'c8 \'c0\'fc\'b7\'c2\'c0\'bb \'ba\'b8\'c1\'b8\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'c0\'fc\'b7\'c2 \'b0\'a8\'bc\'d2 \'b8\'f0\'b5\'e5\'b7\'ce \'b9\'e8\'c4\'a1 \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
The power management of the peripheral is controlled by the PRCM module.\par
\'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'c0\'c7 \'c0\'fc\'bf\'f8 \'b0\'fc\'b8\'ae\'b4\'c2 PRCM \'b8\'f0\'b5\'e2\'bf\'a1 \'c0\'c7\'c7\'d8 \'c1\'a6\'be\'ee\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The PRCM acts as a master controller for power management for all peripherals on the device.\par
PRCM\'c0\'ba \'c0\'e5\'c4\'a1\'c0\'c7 \'b8\'f0\'b5\'e7 \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'bf\'a1 \'b4\'eb\'c7\'d1 \'c0\'fc\'bf\'f8 \'b0\'fc\'b8\'ae\'b8\'a6\'c0\'a7\'c7\'d1 \'b8\'b6\'bd\'ba\'c5\'cd \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'bf\'aa\'c7\'d2\'c0\'bb\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The EDMA controller can be idled on receiving a clock stop request from the PRCM.\par
EDMA \'c1\'a6\'be\'ee\'b1\'e2\'b4\'c2 PRCM\'c0\'b8\'b7\'ce\'ba\'ce\'c5\'cd\'c0\'c7 \'c5\'ac\'b7\'cf \'c1\'a4\'c1\'f6 \'bf\'e4\'b1\'b8\'b8\'a6 \'bc\'f6\'bd\'c5\'c7\'cf\'b8\'e9 \'c0\'af\'c8\'de \'bb\'f3\'c5\'c2\'b0\'a1 \'b5\'c9 \'bc\'f6\'c0\'d6\'b4\'d9.\par
\par
 The requests to EDMA_TPCC and EDMA_TPTC0 and EDMA_TPTC1 are separate.\par
  EDMA_TPCC \'b9\'d7 EDMA_TPTC0 \'b9\'d7 EDMA_TPTC1\'bf\'a1 \'b4\'eb\'c7\'d1 \'bf\'e4\'c3\'bb\'c0\'ba \'ba\'b0\'b5\'b5\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
In general, it should be verified that there are no pending activities in the EDMA controller\par
\'c0\'cf\'b9\'dd\'c0\'fb\'c0\'b8\'b7\'ce EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af\'bf\'a1\'b4\'c2 \'ba\'b8\'b7\'f9\'c1\'df\'c0\'ce \'c8\'b0\'b5\'bf\'c0\'cc \'be\'f8\'c0\'bd\'c0\'bb \'c8\'ae\'c0\'ce\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9\par
\par
NOTE: When EDMA controler modules no longer require the interface clock, software can disable it at the PRCM level by configuring the MODULEMODE bit field (PRCM.CM_L3MAIN1_TPCC_CLKCTRL[1:0], PRCM.CM_L3MAIN1_TPTC1_CLKCTRL[1:0], PRCM.CM_L3MAIN1_TPTC2_CLKCTRL[1:0]) in the PRCM registers. The clock is effectively cut, provided the other modules that receive it do not require it.\par
\'c1\'d6 : EDMA \'c4\'c1\'c6\'ae\'b7\'d1\'b7\'af \'b8\'f0\'b5\'e2\'c0\'cc \'b4\'f5 \'c0\'cc\'bb\'f3 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba \'c5\'ac\'b7\'cf\'c0\'bb \'c7\'ca\'bf\'e4\'b7\'ce\'c7\'cf\'c1\'f6 \'be\'ca\'c0\'bb \'b6\'a7, \'bc\'d2\'c7\'c1\'c6\'ae\'bf\'fe\'be\'ee\'b4\'c2 MODULEMODE \'ba\'f1\'c6\'ae \'c7\'ca\'b5\'e5 (PRCM.CM_L3MAIN1_TPCC_CLKCTRL [1 : 0], PRCM.CM_L3MAIN1_TPTC1_CLKCTRL [1 : 0], PRCM.CM_L3MAIN1_TPTC2_CLKCTRL [ 1 : 0])\'c0\'bb PRCM \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'bf\'a1 \'c0\'fa\'c0\'e5\'c7\'d1\'b4\'d9. \'bd\'c3\'b0\'e8\'b8\'a6 \'c8\'bf\'b0\'fa\'c0\'fb\'c0\'b8\'b7\'ce \'bc\'f6\'bd\'c5 \'c7\'d2 \'bc\'f6\'c0\'d6\'b4\'c2 \'b4\'d9\'b8\'a5 \'b8\'f0\'b5\'e2\'c0\'ba \'c7\'ca\'bf\'e4\'c7\'cf\'c1\'f6 \'be\'ca\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
At the PRCM level, when all the conditions to shut off the L3MIAN1_L3_GICLK clock are met the PRCM module automatically launches a hardware handshake protocol to ensure EDMA modules are ready to have this clock switched off.\par
PRCM \'b7\'b9\'ba\'a7\'bf\'a1\'bc\'ad L3MIAN1_L3_GICLK \'c5\'ac\'b7\'b0\'c0\'bb \'c2\'f7\'b4\'dc\'c7\'cf\'b4\'c2 \'b8\'f0\'b5\'e7 \'c1\'b6\'b0\'c7\'c0\'cc \'c3\'e6\'c1\'b7\'b5\'c7\'b8\'e9 PRCM \'b8\'f0\'b5\'e2\'c0\'cc \'c0\'da\'b5\'bf\'c0\'b8\'b7\'ce \'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee \'c7\'da\'b5\'e5 \'bc\'ce\'c0\'cc\'c5\'a9 \'c7\'c1\'b7\'ce\'c5\'e4\'c4\'dd\'c0\'bb \'bd\'c3\'c0\'db\'c7\'cf\'bf\'a9 EDMA \'b8\'f0\'b5\'e2\'c0\'cc\'c0\'cc \'c5\'ac\'b7\'b0\'c0\'bb \'b2\'f8 \'c1\'d8\'ba\'f1\'b0\'a1 \'b5\'c8 \'b0\'cd\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
 Namely, the PRCM module asserts an IDLE request to the EDMA modules.\par
  \'c1\'ef, PRCM \'b8\'f0\'b5\'e2\'c0\'ba IDLE \'bf\'e4\'c3\'bb\'c0\'bb EDMA \'b8\'f0\'b5\'e2\'bf\'a1 \'be\'ee\'bc\'ad \'c6\'ae\'bd\'c3\'c5\'b2\'b4\'d9.\par
\par
For more information, refer to Chapter 3, Power, Reset, and Clock Management.\par
\'c0\'da\'bc\'bc\'c7\'d1 \'b3\'bb\'bf\'eb\'c0\'ba 3 \'c0\'e5, \'c0\'fc\'bf\'f8, \'c0\'e7\'bc\'b3\'c1\'a4 \'b9\'d7 \'c5\'ac\'b7\'b0 \'b0\'fc\'b8\'ae\'b8\'a6 \'c2\'fc\'c1\'b6\'c7\'cf\'bd\'ca\'bd\'c3\'bf\'c0.\par
\par
16.2.5.15.2 Reset Considerations\par
16.2.5.15.2 \'b8\'ae\'bc\'c2 \'b0\'ed\'b7\'c1 \'bb\'e7\'c7\'d7\par
\par
A hardware resets the EDMA (EDMA_TPCC, EDMA_TPTC0 and EDMA_TPTC1) and the EDMA configuration registers.\par
\'c7\'cf\'b5\'e5\'bf\'fe\'be\'ee\'b0\'a1 EDMA (EDMA_TPCC, EDMA_TPTC0 \'b9\'d7 EDMA_TPTC1) \'b9\'d7 EDMA \'b1\'b8\'bc\'ba \'b7\'b9\'c1\'f6\'bd\'ba\'c5\'cd\'b8\'a6 \'c0\'e7\'bc\'b3\'c1\'a4\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The PaRAM memory contents are undefined after device reset and it should not rely on parameters to be reset to a known state.\par
PaRAM \'b8\'de\'b8\'f0\'b8\'ae \'b3\'bb\'bf\'eb\'c0\'ba \'c0\'e5\'c4\'a1 \'c0\'e7\'bc\'b3\'c1\'a4 \'c8\'c4 \'c1\'a4\'c0\'c7\'b5\'c7\'c1\'f6 \'be\'ca\'c0\'b8\'b8\'e7 \'be\'cb\'b7\'c1\'c1\'f8 \'bb\'f3\'c5\'c2\'b7\'ce \'c0\'e7\'bc\'b3\'c1\'a4 \'c7\'d2 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'bf\'a1 \'c0\'c7\'c1\'b8\'c7\'cf\'c1\'f6 \'be\'ca\'be\'c6\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The PaRAM entry must be initialized to a desired value before it is used.\par
PaRAM \'c7\'d7\'b8\'f1\'c0\'ba \'bb\'e7\'bf\'eb\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 \'bf\'f8\'c7\'cf\'b4\'c2 \'b0\'aa\'c0\'b8\'b7\'ce \'c3\'ca\'b1\'e2\'c8\'ad\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The EDMA modules are reset by CORE_RET_RST reset signal from PRCM.\par
EDMA \'b8\'f0\'b5\'e2\'c0\'ba PRCM\'bf\'a1\'bc\'ad CORE_RET_RST \'c0\'e7\'bc\'b3\'c1\'a4 \'bd\'c5\'c8\'a3\'b7\'ce \'c0\'e7\'bc\'b3\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.2.5.16 Emulation Considerations\par
16.2.5.16 \'bf\'a1\'b9\'c4\'b7\'b9\'c0\'cc\'bc\'c7 \'b0\'ed\'b7\'c1 \'bb\'e7\'c7\'d7\par
\par
During debug when using the emulator, the CPU(s) may be halted on an execute packet boundary for single-stepping, benchmarking, profiling, or other debug purposes.\par
\'bf\'a1\'b9\'c4\'b7\'b9\'c0\'cc\'c5\'cd\'b8\'a6 \'bb\'e7\'bf\'eb\'c7\'d2 \'b6\'a7 \'b5\'f0\'b9\'f6\'b1\'eb\'c7\'cf\'b4\'c2 \'b5\'bf\'be\'c8 CPU\'b4\'c2 \'b4\'dc\'c0\'cf \'bd\'ba\'c5\'d7\'c7\'ce, \'ba\'a5\'c4\'a1\'b8\'b6\'c5\'b7, \'c7\'c1\'b7\'ce\'c6\'c4\'c0\'cf \'b8\'b5 \'b6\'c7\'b4\'c2 \'b1\'e2\'c5\'b8 \'b5\'f0\'b9\'f6\'b1\'d7 \'b8\'f1\'c0\'fb\'c0\'bb \'c0\'a7\'c7\'d8 \'bd\'c7\'c7\'e0 \'c6\'d0\'c5\'b6 \'b0\'e6\'b0\'e8\'bf\'a1\'bc\'ad \'c1\'a4\'c1\'f6 \'b5\'c9 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
During an emulation halt, the EDMA channel controller and transfer controller operations continue.\par
\'bf\'a1\'b9\'c4\'b7\'b9\'c0\'cc\'bc\'c7 \'c1\'a4\'c1\'f6 \'b5\'bf\'be\'c8, EDMA \'c3\'a4\'b3\'ce \'c1\'a6\'be\'ee\'b1\'e2 \'b9\'d7 \'c0\'fc\'bc\'db \'c1\'a6\'be\'ee\'b1\'e2 \'b5\'bf\'c0\'db\'c0\'ba \'b0\'e8\'bc\'d3\'b5\'c8\'b4\'d9.\par
\par
Events continue to be latched and processed and transfer requests continue to be submitted and serviced.\par
\'c0\'cc\'ba\'a5\'c6\'ae\'b4\'c2 \'b0\'e8\'bc\'d3 \'b7\'a1\'c4\'a1\'b5\'c7\'b0\'ed \'c3\'b3\'b8\'ae\'b5\'c7\'b8\'e7 \'c0\'fc\'bc\'db \'bf\'e4\'c3\'bb\'c0\'ba \'b0\'e8\'bc\'d3 \'c1\'a6\'c3\'e2\'b5\'c7\'b0\'ed \'bc\'ad\'ba\'f1\'bd\'ba\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
Since EDMA is involved in servicing multiple master and slave peripherals, it is not feasible to have an independent behavior of the EDMA for emulation halts.\par
EDMA\'b4\'c2 \'bf\'a9\'b7\'af \'b8\'b6\'bd\'ba\'c5\'cd \'b9\'d7 \'bd\'bd\'b7\'b9\'c0\'cc\'ba\'ea \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1 \'bc\'ad\'ba\'f1\'bd\'ba\'bf\'a1 \'b0\'fc\'bf\'a9\'c7\'cf\'b1\'e2 \'b6\'a7\'b9\'ae\'bf\'a1 \'bf\'a1\'b9\'c4\'b7\'b9\'c0\'cc\'bc\'c7 \'c1\'df\'b4\'dc\'c0\'bb \'c0\'a7\'c7\'d8 EDMA\'c0\'c7 \'b5\'b6\'b8\'b3\'c0\'fb \'c0\'ce \'b5\'bf\'c0\'db\'c0\'bb                                                                                               \'bc\'f6\'c7\'e0\'c7\'cf\'b4\'c2 \'b0\'cd\'c0\'ba \'ba\'d2\'b0\'a1\'b4\'c9\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
EDMA functionality would be coupled with the peripherals it is servicing, which might have different behavior during emulation halts.\par
EDMA \'b1\'e2\'b4\'c9\'c0\'ba \'bc\'ad\'ba\'f1\'bd\'ba\'c7\'cf\'b4\'c2 \'c1\'d6\'ba\'af \'c0\'e5\'c4\'a1\'bf\'cd \'b0\'e1\'c7\'d5\'b5\'c7\'be\'ee \'bf\'a1\'b9\'c4\'b7\'b9\'c0\'cc\'bc\'c7 \'c1\'df\'b4\'dc \'c1\'df\'bf\'a1 \'b4\'d9\'b8\'a5 \'b5\'bf\'c0\'db\'c0\'bb \'c0\'cf\'c0\'b8\'c5\'b3 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
16.2.6 EDMA Transfer Examples\par
16.2.6 EDMA \'c0\'fc\'bc\'db \'bf\'b9\'c1\'a6\par
\par
The EDMA channel controller performs a variety of transfers depending on the parameter configuration.\par
EDMA \'c3\'a4\'b3\'ce \'c1\'a6\'be\'ee\'b1\'e2\'b4\'c2 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'b1\'b8\'bc\'ba\'bf\'a1 \'b5\'fb\'b6\'f3 \'b4\'d9\'be\'e7\'c7\'d1 \'c0\'fc\'bc\'db\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
The following sections provide a description and PaRAM configuration for some typical use case scenarios.\par
\'b4\'d9\'c0\'bd \'c0\'fd\'bf\'a1\'bc\'ad\'b4\'c2 \'c0\'cf\'b9\'dd\'c0\'fb\'c0\'ce \'bb\'e7\'bf\'eb \'bb\'e7\'b7\'ca \'bd\'c3\'b3\'aa\'b8\'ae\'bf\'c0\'bf\'a1 \'b4\'eb\'c7\'d1 \'bc\'b3\'b8\'ed\'b0\'fa PaRAM \'b1\'b8\'bc\'ba\'c0\'bb \'c1\'a6\'b0\'f8\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
16.2.6.1 Block Move Example\par
16.2.6.1 \'ba\'ed\'b7\'cf \'c0\'cc\'b5\'bf \'bf\'b9\'c1\'a6\par
\par
The most basic transfer performed by the EDMA is a block move.\par
EDMA\'bf\'a1 \'c0\'c7\'c7\'d8 \'bc\'f6\'c7\'e0\'b5\'c7\'b4\'c2 \'b0\'a1\'c0\'e5 \'b1\'e2\'ba\'bb\'c0\'fb\'c0\'ce \'c0\'fc\'bc\'db\'c0\'ba \'ba\'ed\'b7\'cf \'c0\'cc\'b5\'bf\'c0\'d4\'b4\'cf\'b4\'d9.\par
\par
During device operation it is often necessary to transfer a block of data from one location to another, usually between on-chip and off-chip memory.\par
\'c0\'e5\'c4\'a1 \'c0\'db\'b5\'bf \'c1\'df\'bf\'a1\'b4\'c2 \'c0\'cf\'b9\'dd\'c0\'fb\'c0\'b8\'b7\'ce \'bf\'c2\'c4\'a8 \'b8\'de\'b8\'f0\'b8\'ae\'bf\'cd \'bf\'c0\'c7\'c1 \'c4\'a8 \'b8\'de\'b8\'f0\'b8\'ae \'bb\'e7\'c0\'cc\'bf\'a1\'bc\'ad \'b5\'a5\'c0\'cc\'c5\'cd \'ba\'ed\'b7\'cf\'c0\'bb \'c7\'d1 \'c0\'a7\'c4\'a1\'bf\'a1\'bc\'ad \'b4\'d9\'b8\'a5 \'c0\'a7\'c4\'a1\'b7\'ce \'c0\'fc\'bc\'db\'c7\'d8\'be\'df\'c7\'cf\'b4\'c2 \'b0\'e6\'bf\'ec\'b0\'a1 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
In this example, a section of data is to be copied from external memory to internal L2 SRAM as shown in Figure 16-33.\par
\'c0\'cc \'bf\'b9\'bf\'a1\'bc\'ad \'b1\'d7\'b8\'b2 16-33\'b0\'fa \'b0\'b0\'c0\'cc \'b5\'a5\'c0\'cc\'c5\'cd \'bc\'bd\'bc\'c7\'c0\'cc \'bf\'dc\'ba\'ce \'b8\'de\'b8\'f0\'b8\'ae\'bf\'a1\'bc\'ad \'b3\'bb\'ba\'ce L2 SRAM\'c0\'b8\'b7\'ce \'ba\'b9\'bb\'e7\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The source address for the transfer is set to the start of the data block in external memory, and the destination address is set to the start of the data block in L2.\par
\'c0\'fc\'bc\'db\'c0\'c7 \'bc\'d2\'bd\'ba \'c1\'d6\'bc\'d2\'b4\'c2 \'bf\'dc\'ba\'ce \'b8\'de\'b8\'f0\'b8\'ae\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'ba\'ed\'b7\'cf\'c0\'c7 \'bd\'c3\'c0\'db\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'c7\'b0\'ed \'b4\'eb\'bb\'f3 \'c1\'d6\'bc\'d2\'b4\'c2 L2\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'ba\'ed\'b7\'cf\'c0\'c7 \'bd\'c3\'c0\'db\'c0\'b8\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
If the data block is less than 64K bytes, the PaRAM configuration shown in Figure 16-34 holds true with the synchronization type set to Asynchronized and indexes cleared to 0. If the amount of data is greater than 64K bytes, EDMA_TPCC_ABCNT_n[31:16] BCNT and the B-indexes need to be set appropriately with the synchronization type set to AB-synchronized.\par
\'b5\'a5\'c0\'cc\'c5\'cd \'ba\'ed\'b7\'cf\'c0\'cc 64K \'b9\'d9\'c0\'cc\'c6\'ae\'ba\'b8\'b4\'d9 \'c0\'db \'c0\'b8\'b8\'e9 \'b1\'d7\'b8\'b2 16-34\'bf\'a1 \'c7\'a5\'bd\'c3\'b5\'c8 PaRAM \'b1\'b8\'bc\'ba\'c0\'ba \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'af\'c7\'fc\'c0\'cc \'ba\'f1\'b5\'bf\'b1\'e2\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'c8 \'b0\'e6\'bf\'ec true\'c0\'cc\'b0\'ed \'c0\'ce\'b5\'a6\'bd\'ba\'b4\'c2 0\'c0\'b8\'b7\'ce \'c5\'ac\'b8\'ae\'be\'ee\'b5\'cb\'b4\'cf\'b4\'d9. \'b5\'a5\'c0\'cc\'c5\'cd \'be\'e7\'c0\'cc 64KB\'ba\'b8\'b4\'d9 \'c5\'ac \'b0\'e6\'bf\'ec EDMA_TPCC_ABCNT_n [31:16] ] BCNT\'bf\'cd B- \'c0\'ce\'b5\'a6\'bd\'ba\'b4\'c2 AB- \'b5\'bf\'b1\'e2\'c8\'ad\'b7\'ce \'bc\'b3\'c1\'a4\'b5\'c8 \'b5\'bf\'b1\'e2\'c8\'ad \'c0\'af\'c7\'fc\'c0\'b8\'b7\'ce \'c0\'fb\'c0\'fd\'c8\'f7 \'bc\'b3\'c1\'a4 \'b5\'c9 \'c7\'ca\'bf\'e4\'b0\'a1\'c0\'d6\'b4\'d9.\par
\par
The EDMA_TPCC_OPT_n[3] STATIC bit is set to prevent linking.\par
EDMA_TPCC_OPT_n [3] STATIC \'ba\'f1\'c6\'ae\'b4\'c2 \'b8\'b5\'c5\'a9\'b8\'a6 \'b9\'e6\'c1\'f6\'c7\'cf\'b5\'b5\'b7\'cf \'bc\'b3\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
16.2.6.2 Subframe Extraction Example\par
16.2.6.2 \'bc\'ad\'ba\'ea \'c7\'c1\'b7\'b9\'c0\'d3 \'c3\'df\'c3\'e2 \'bf\'b9\'c1\'a6\par
\par
The EDMA can efficiently extract a small frame of data from a larger frame of data.\par
EDMA\'b4\'c2 \'b4\'f5 \'c5\'ab \'b5\'a5\'c0\'cc\'c5\'cd \'c7\'c1\'b7\'b9\'c0\'d3\'bf\'a1\'bc\'ad \'c0\'db\'c0\'ba \'b5\'a5\'c0\'cc\'c5\'cd \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'bb \'c8\'bf\'c0\'b2\'c0\'fb\'c0\'b8\'b7\'ce \'c3\'df\'c3\'e2 \'c7\'d2 \'bc\'f6 \'c0\'d6\'bd\'c0\'b4\'cf\'b4\'d9.\par
\par
By performing a 2D-to- 1D transfer, the EDMA retrieves a portion of data for the CPU to process.\par
2D \'b4\'eb 1D \'c0\'fc\'bc\'db\'c0\'bb \'bc\'f6\'c7\'e0\'c7\'d4\'c0\'b8\'b7\'ce\'bd\'e1 EDMA\'b4\'c2 CPU\'b0\'a1 \'c3\'b3\'b8\'ae \'c7\'d2 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'c0\'cf\'ba\'ce\'b8\'a6 \'b0\'cb\'bb\'f6\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
In this example, a 640 \'a1\'bf 480- pixel frame of video data is stored in external memory.\par
\'c0\'cc \'bf\'b9\'bf\'a1\'bc\'ad 640 \'a1\'bf 480 \'c7\'c8\'bc\'bf\'c0\'c7 \'ba\'f1\'b5\'f0\'bf\'c0 \'b5\'a5\'c0\'cc\'c5\'cd \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'cc \'bf\'dc\'ba\'ce \'b8\'de\'b8\'f0\'b8\'ae\'bf\'a1 \'c0\'fa\'c0\'e5\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
 Each pixel is represented by a 16-bit halfword.\par
  \'b0\'a2 \'c7\'c8\'bc\'bf\'c0\'ba 16 \'ba\'f1\'c6\'ae \'c7\'cf\'c7\'c1 \'bf\'f6\'b5\'e5\'b7\'ce \'c7\'a5\'bd\'c3\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The CPU extracts a 16 \'a1\'bf 12-pixel subframe of the image for processing.\par
CPU\'b4\'c2 \'c3\'b3\'b8\'ae \'c7\'d2 \'c0\'cc\'b9\'cc\'c1\'f6\'c0\'c7 16 \'a1\'bf 12 \'c7\'c8\'bc\'bf \'bc\'ad\'ba\'ea \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'bb \'c3\'df\'c3\'e2\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
To facilitate more efficient processing time by the CPU, the EDMA places the subframe in internal L2 SRAM.\par
EDMA\'b4\'c2 CPU\'c0\'c7 \'c3\'b3\'b8\'ae \'bd\'c3\'b0\'a3\'c0\'bb\'ba\'b8\'b4\'d9 \'c8\'bf\'c0\'b2\'c0\'fb\'c0\'b8\'b7\'ce \'c8\'b0\'bf\'eb\'c7\'cf\'b1\'e2 \'c0\'a7\'c7\'d8 \'bc\'ad\'ba\'ea \'c7\'c1\'b7\'b9\'c0\'d3\'c0\'bb \'b3\'bb\'ba\'ce L2 SRAM\'bf\'a1 \'b9\'e8\'c4\'a1\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Figure 16-35 shows the transfer of a subframe from external memory to L2.\par
\'b1\'d7\'b8\'b2 16-35\'b4\'c2 \'bf\'dc\'ba\'ce \'b8\'de\'b8\'f0\'b8\'ae\'bf\'a1\'bc\'ad L2 \'b7\'ce\'c0\'c7 \'bc\'ad\'ba\'ea \'c7\'c1\'b7\'b9\'c0\'d3 \'c0\'fc\'bc\'db\'c0\'bb \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
\par
The same PaRAM entry options are used for QDMA channels, as well as DMA channels.\par
\'b5\'bf\'c0\'cf\'c7\'d1 PaRAM \'c0\'d4\'b7\'c2 \'bf\'c9\'bc\'c7\'c0\'cc QDMA \'c3\'a4\'b3\'ce\'b0\'fa DMA \'c3\'a4\'b3\'ce\'bf\'a1 \'bb\'e7\'bf\'eb\'b5\'cb\'b4\'cf\'b4\'d9.\par
\par
The EDMA_TPCC_OPT_n[3] STATIC bit is set to prevent linking. For successive transfers, only changed parameters need to be programmed before triggering the channel.\par
EDMA_TPCC_OPT_n [3] STATIC \'ba\'f1\'c6\'ae\'b4\'c2 \'b8\'b5\'c5\'a9\'b8\'a6 \'b9\'e6\'c1\'f6\'c7\'cf\'b5\'b5\'b7\'cf \'bc\'b3\'c1\'a4\'b5\'cb\'b4\'cf\'b4\'d9. \'bf\'ac\'bc\'d3 \'c0\'fc\'bc\'db\'c0\'c7 \'b0\'e6\'bf\'ec \'c3\'a4\'b3\'ce\'c0\'bb \'c6\'ae\'b8\'ae\'b0\'c5\'c7\'cf\'b1\'e2 \'c0\'fc\'bf\'a1 \'ba\'af\'b0\'e6\'b5\'c8 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6 \'b8\'b8 \'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6\'c7\'d8\'be\'df\'c7\'d5\'b4\'cf\'b4\'d9.\par
\par
Figure 16-36 shows the parameters for Subframe Extraction transfer.\par
\'b1\'d7\'b8\'b2 16-36\'c0\'ba \'bc\'ad\'ba\'ea \'c7\'c1\'b7\'b9\'c0\'d3 \'c3\'df\'c3\'e2 \'c0\'fc\'bc\'db\'c0\'bb\'c0\'a7\'c7\'d1 \'b8\'c5\'b0\'b3 \'ba\'af\'bc\'f6\'b8\'a6 \'ba\'b8\'bf\'a9\'c1\'dd\'b4\'cf\'b4\'d9.\par
}
 